{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst guards_js_1 = require(\"./guards.js\");\nconst messages_gen_js_1 = require(\"./messages.gen.js\");\nclass CanvasRecorder {\n  constructor(app, options) {\n    this.app = app;\n    this.options = options;\n    this.snapshots = {};\n    this.intervals = [];\n    this.restartTracking = () => {\n      this.clear();\n      this.app.nodes.scanTree(this.captureCanvas);\n    };\n    this.captureCanvas = node => {\n      const id = this.app.nodes.getID(node);\n      if (!id || !(0, guards_js_1.hasTag)(node, 'canvas')) {\n        return;\n      }\n      const isIgnored = this.app.sanitizer.isObscured(id) || this.app.sanitizer.isHidden(id);\n      if (isIgnored || !(0, guards_js_1.hasTag)(node, 'canvas') || this.snapshots[id]) {\n        return;\n      }\n      const observer = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            if (entry.target) {\n              if (this.snapshots[id] && this.snapshots[id].createdAt) {\n                this.snapshots[id].paused = false;\n              } else {\n                this.recordCanvas(entry.target, id);\n              }\n              /**\n               * We can switch this to start observing when element is in the view\n               * but otherwise right now we're just pausing when it's not\n               * just to save some bandwidth and space on backend\n               * */\n              // observer.unobserve(entry.target)\n            } else {\n              if (this.snapshots[id]) {\n                this.snapshots[id].paused = true;\n              }\n            }\n          }\n        });\n      });\n      observer.observe(node);\n    };\n    this.recordCanvas = (node, id) => {\n      const ts = this.app.timestamp();\n      this.snapshots[id] = {\n        images: [],\n        createdAt: ts,\n        paused: false,\n        dummy: document.createElement('canvas')\n      };\n      const canvasMsg = (0, messages_gen_js_1.CanvasNode)(id.toString(), ts);\n      this.app.send(canvasMsg);\n      const int = setInterval(() => {\n        const cid = this.app.nodes.getID(node);\n        const canvas = cid ? this.app.nodes.getNode(cid) : undefined;\n        if (!canvas || !(0, guards_js_1.hasTag)(canvas, 'canvas') || canvas !== node) {\n          this.app.debug.log('Canvas element not in sync');\n          clearInterval(int);\n        } else {\n          if (!this.snapshots[id].paused) {\n            const snapshot = captureSnapshot(canvas, this.options.quality, this.snapshots[id].dummy, this.options.fixedScaling);\n            this.snapshots[id].images.push({\n              id: this.app.timestamp(),\n              data: snapshot\n            });\n            if (this.snapshots[id].images.length > 9) {\n              this.sendSnaps(this.snapshots[id].images, id, this.snapshots[id].createdAt);\n              this.snapshots[id].images = [];\n            }\n          }\n        }\n      }, this.interval);\n      this.intervals.push(int);\n    };\n    this.interval = 1000 / options.fps;\n  }\n  startTracking() {\n    setTimeout(() => {\n      this.app.nodes.scanTree(this.captureCanvas);\n      this.app.nodes.attachNodeCallback(node => {\n        this.captureCanvas(node);\n      });\n    }, 500);\n  }\n  sendSnaps(images, canvasId, createdAt) {\n    var _a;\n    if (Object.keys(this.snapshots).length === 0) {\n      return;\n    }\n    const formData = new FormData();\n    images.forEach(snapshot => {\n      const blob = dataUrlToBlob(snapshot.data);\n      if (!blob) return;\n      formData.append('snapshot', blob[0], `${createdAt}_${canvasId}_${snapshot.id}.jpeg`);\n      if (this.options.isDebug) {\n        saveImageData(snapshot.data, `${createdAt}_${canvasId}_${snapshot.id}.jpeg`);\n      }\n    });\n    fetch(this.app.options.ingestPoint + '/v1/web/images', {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${(_a = this.app.session.getSessionToken()) !== null && _a !== void 0 ? _a : ''}`\n      },\n      body: formData\n    }).then(() => {\n      return true;\n    }).catch(e => {\n      this.app.debug.error('error saving canvas', e);\n    });\n  }\n  clear() {\n    this.intervals.forEach(int => clearInterval(int));\n    this.snapshots = {};\n  }\n}\nconst qualityInt = {\n  low: 0.35,\n  medium: 0.55,\n  high: 0.8\n};\nfunction captureSnapshot(canvas, quality = 'medium', dummy, fixedScaling = false) {\n  const imageFormat = 'image/jpeg'; // or /png'\n  if (fixedScaling) {\n    const canvasScaleRatio = window.devicePixelRatio || 1;\n    dummy.width = canvas.width / canvasScaleRatio;\n    dummy.height = canvas.height / canvasScaleRatio;\n    const ctx = dummy.getContext('2d');\n    if (!ctx) {\n      return '';\n    }\n    ctx.drawImage(canvas, 0, 0, dummy.width, dummy.height);\n    return dummy.toDataURL(imageFormat, qualityInt[quality]);\n  } else {\n    return canvas.toDataURL(imageFormat, qualityInt[quality]);\n  }\n}\nfunction dataUrlToBlob(dataUrl) {\n  const [header, base64] = dataUrl.split(',');\n  if (!header || !base64) return null;\n  const encParts = header.match(/:(.*?);/);\n  if (!encParts) return null;\n  const mime = encParts[1];\n  const blobStr = atob(base64);\n  let n = blobStr.length;\n  const u8arr = new Uint8Array(n);\n  while (n--) {\n    u8arr[n] = blobStr.charCodeAt(n);\n  }\n  return [new Blob([u8arr], {\n    type: mime\n  }), u8arr];\n}\nfunction saveImageData(imageDataUrl, name) {\n  const link = document.createElement('a');\n  link.href = imageDataUrl;\n  link.download = name;\n  link.style.display = 'none';\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\nexports.default = CanvasRecorder;","map":{"version":3,"names":["Object","defineProperty","exports","value","guards_js_1","require","messages_gen_js_1","CanvasRecorder","constructor","app","options","snapshots","intervals","restartTracking","clear","nodes","scanTree","captureCanvas","node","id","getID","hasTag","isIgnored","sanitizer","isObscured","isHidden","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","createdAt","paused","recordCanvas","observe","ts","timestamp","images","dummy","document","createElement","canvasMsg","CanvasNode","toString","send","int","setInterval","cid","canvas","getNode","undefined","debug","log","clearInterval","snapshot","captureSnapshot","quality","fixedScaling","push","data","length","sendSnaps","interval","fps","startTracking","setTimeout","attachNodeCallback","canvasId","_a","keys","formData","FormData","blob","dataUrlToBlob","append","isDebug","saveImageData","fetch","ingestPoint","method","headers","Authorization","session","getSessionToken","body","then","catch","e","error","qualityInt","low","medium","high","imageFormat","canvasScaleRatio","window","devicePixelRatio","width","height","ctx","getContext","drawImage","toDataURL","dataUrl","header","base64","split","encParts","match","mime","blobStr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","type","imageDataUrl","name","link","href","download","style","display","appendChild","click","removeChild","default"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/cjs/app/canvas.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst guards_js_1 = require(\"./guards.js\");\nconst messages_gen_js_1 = require(\"./messages.gen.js\");\nclass CanvasRecorder {\n    constructor(app, options) {\n        this.app = app;\n        this.options = options;\n        this.snapshots = {};\n        this.intervals = [];\n        this.restartTracking = () => {\n            this.clear();\n            this.app.nodes.scanTree(this.captureCanvas);\n        };\n        this.captureCanvas = (node) => {\n            const id = this.app.nodes.getID(node);\n            if (!id || !(0, guards_js_1.hasTag)(node, 'canvas')) {\n                return;\n            }\n            const isIgnored = this.app.sanitizer.isObscured(id) || this.app.sanitizer.isHidden(id);\n            if (isIgnored || !(0, guards_js_1.hasTag)(node, 'canvas') || this.snapshots[id]) {\n                return;\n            }\n            const observer = new IntersectionObserver((entries) => {\n                entries.forEach((entry) => {\n                    if (entry.isIntersecting) {\n                        if (entry.target) {\n                            if (this.snapshots[id] && this.snapshots[id].createdAt) {\n                                this.snapshots[id].paused = false;\n                            }\n                            else {\n                                this.recordCanvas(entry.target, id);\n                            }\n                            /**\n                             * We can switch this to start observing when element is in the view\n                             * but otherwise right now we're just pausing when it's not\n                             * just to save some bandwidth and space on backend\n                             * */\n                            // observer.unobserve(entry.target)\n                        }\n                        else {\n                            if (this.snapshots[id]) {\n                                this.snapshots[id].paused = true;\n                            }\n                        }\n                    }\n                });\n            });\n            observer.observe(node);\n        };\n        this.recordCanvas = (node, id) => {\n            const ts = this.app.timestamp();\n            this.snapshots[id] = {\n                images: [],\n                createdAt: ts,\n                paused: false,\n                dummy: document.createElement('canvas'),\n            };\n            const canvasMsg = (0, messages_gen_js_1.CanvasNode)(id.toString(), ts);\n            this.app.send(canvasMsg);\n            const int = setInterval(() => {\n                const cid = this.app.nodes.getID(node);\n                const canvas = cid ? this.app.nodes.getNode(cid) : undefined;\n                if (!canvas || !(0, guards_js_1.hasTag)(canvas, 'canvas') || canvas !== node) {\n                    this.app.debug.log('Canvas element not in sync');\n                    clearInterval(int);\n                }\n                else {\n                    if (!this.snapshots[id].paused) {\n                        const snapshot = captureSnapshot(canvas, this.options.quality, this.snapshots[id].dummy, this.options.fixedScaling);\n                        this.snapshots[id].images.push({ id: this.app.timestamp(), data: snapshot });\n                        if (this.snapshots[id].images.length > 9) {\n                            this.sendSnaps(this.snapshots[id].images, id, this.snapshots[id].createdAt);\n                            this.snapshots[id].images = [];\n                        }\n                    }\n                }\n            }, this.interval);\n            this.intervals.push(int);\n        };\n        this.interval = 1000 / options.fps;\n    }\n    startTracking() {\n        setTimeout(() => {\n            this.app.nodes.scanTree(this.captureCanvas);\n            this.app.nodes.attachNodeCallback((node) => {\n                this.captureCanvas(node);\n            });\n        }, 500);\n    }\n    sendSnaps(images, canvasId, createdAt) {\n        var _a;\n        if (Object.keys(this.snapshots).length === 0) {\n            return;\n        }\n        const formData = new FormData();\n        images.forEach((snapshot) => {\n            const blob = dataUrlToBlob(snapshot.data);\n            if (!blob)\n                return;\n            formData.append('snapshot', blob[0], `${createdAt}_${canvasId}_${snapshot.id}.jpeg`);\n            if (this.options.isDebug) {\n                saveImageData(snapshot.data, `${createdAt}_${canvasId}_${snapshot.id}.jpeg`);\n            }\n        });\n        fetch(this.app.options.ingestPoint + '/v1/web/images', {\n            method: 'POST',\n            headers: {\n                Authorization: `Bearer ${(_a = this.app.session.getSessionToken()) !== null && _a !== void 0 ? _a : ''}`,\n            },\n            body: formData,\n        })\n            .then(() => {\n            return true;\n        })\n            .catch((e) => {\n            this.app.debug.error('error saving canvas', e);\n        });\n    }\n    clear() {\n        this.intervals.forEach((int) => clearInterval(int));\n        this.snapshots = {};\n    }\n}\nconst qualityInt = {\n    low: 0.35,\n    medium: 0.55,\n    high: 0.8,\n};\nfunction captureSnapshot(canvas, quality = 'medium', dummy, fixedScaling = false) {\n    const imageFormat = 'image/jpeg'; // or /png'\n    if (fixedScaling) {\n        const canvasScaleRatio = window.devicePixelRatio || 1;\n        dummy.width = canvas.width / canvasScaleRatio;\n        dummy.height = canvas.height / canvasScaleRatio;\n        const ctx = dummy.getContext('2d');\n        if (!ctx) {\n            return '';\n        }\n        ctx.drawImage(canvas, 0, 0, dummy.width, dummy.height);\n        return dummy.toDataURL(imageFormat, qualityInt[quality]);\n    }\n    else {\n        return canvas.toDataURL(imageFormat, qualityInt[quality]);\n    }\n}\nfunction dataUrlToBlob(dataUrl) {\n    const [header, base64] = dataUrl.split(',');\n    if (!header || !base64)\n        return null;\n    const encParts = header.match(/:(.*?);/);\n    if (!encParts)\n        return null;\n    const mime = encParts[1];\n    const blobStr = atob(base64);\n    let n = blobStr.length;\n    const u8arr = new Uint8Array(n);\n    while (n--) {\n        u8arr[n] = blobStr.charCodeAt(n);\n    }\n    return [new Blob([u8arr], { type: mime }), u8arr];\n}\nfunction saveImageData(imageDataUrl, name) {\n    const link = document.createElement('a');\n    link.href = imageDataUrl;\n    link.download = name;\n    link.style.display = 'none';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n}\nexports.default = CanvasRecorder;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}