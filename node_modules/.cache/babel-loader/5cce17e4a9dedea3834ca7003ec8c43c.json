{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nclass FeatureFlags {\n  constructor(app) {\n    this.app = app;\n    this.flags = [];\n    this.storageKey = '__openreplay_flags';\n    const persistFlags = this.app.sessionStorage.getItem(this.storageKey);\n    if (persistFlags) {\n      const persistFlagsStrArr = persistFlags.split(';').filter(Boolean);\n      this.flags = persistFlagsStrArr.map(flag => JSON.parse(flag));\n    }\n  }\n  getFeatureFlag(flagName) {\n    return this.flags.find(flag => flag.key === flagName);\n  }\n  isFlagEnabled(flagName) {\n    return this.flags.findIndex(flag => flag.key === flagName) !== -1;\n  }\n  onFlagsLoad(cb) {\n    this.onFlagsCb = cb;\n  }\n  async reloadFlags(token) {\n    const persistFlagsStr = this.app.sessionStorage.getItem(this.storageKey);\n    const persistFlags = {};\n    if (persistFlagsStr) {\n      const persistArray = persistFlagsStr.split(';').filter(Boolean);\n      persistArray.forEach(flag => {\n        const flagObj = JSON.parse(flag);\n        persistFlags[flagObj.key] = {\n          key: flagObj.key,\n          value: flagObj.value\n        };\n      });\n    }\n    const sessionInfo = this.app.session.getInfo();\n    const userInfo = this.app.session.userInfo;\n    const requestObject = {\n      projectID: sessionInfo.projectID,\n      userID: sessionInfo.userID,\n      metadata: sessionInfo.metadata,\n      referrer: document.referrer,\n      os: userInfo.userOS,\n      device: userInfo.userDevice,\n      country: userInfo.userCountry,\n      state: userInfo.userState,\n      city: userInfo.userCity,\n      browser: userInfo.userBrowser,\n      persistFlags: persistFlags\n    };\n    const authToken = token !== null && token !== void 0 ? token : this.app.session.getSessionToken();\n    const resp = await fetch(this.app.options.ingestPoint + '/v1/web/feature-flags', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${authToken}`\n      },\n      body: JSON.stringify(requestObject)\n    });\n    if (resp.status === 200) {\n      const data = await resp.json();\n      return this.handleFlags(data.flags);\n    }\n  }\n  handleFlags(flags) {\n    var _a;\n    const persistFlags = [];\n    flags.forEach(flag => {\n      if (flag.is_persist) persistFlags.push(flag);\n    });\n    let str = '';\n    const uniquePersistFlags = this.diffPersist(persistFlags);\n    uniquePersistFlags.forEach(flag => {\n      str += `${JSON.stringify(flag)};`;\n    });\n    this.app.sessionStorage.setItem(this.storageKey, str);\n    this.flags = flags;\n    return (_a = this.onFlagsCb) === null || _a === void 0 ? void 0 : _a.call(this, flags);\n  }\n  clearPersistFlags() {\n    this.app.sessionStorage.removeItem(this.storageKey);\n  }\n  diffPersist(flags) {\n    const persistFlags = this.app.sessionStorage.getItem(this.storageKey);\n    if (!persistFlags) return flags;\n    const persistFlagsStrArr = persistFlags.split(';').filter(Boolean);\n    const persistFlagsArr = persistFlagsStrArr.map(flag => JSON.parse(flag));\n    return flags.filter(flag => persistFlagsArr.findIndex(pf => pf.key === flag.key) === -1);\n  }\n}\nexports.default = FeatureFlags;","map":{"version":3,"names":["Object","defineProperty","exports","value","FeatureFlags","constructor","app","flags","storageKey","persistFlags","sessionStorage","getItem","persistFlagsStrArr","split","filter","Boolean","map","flag","JSON","parse","getFeatureFlag","flagName","find","key","isFlagEnabled","findIndex","onFlagsLoad","cb","onFlagsCb","reloadFlags","token","persistFlagsStr","persistArray","forEach","flagObj","sessionInfo","session","getInfo","userInfo","requestObject","projectID","userID","metadata","referrer","document","os","userOS","device","userDevice","country","userCountry","state","userState","city","userCity","browser","userBrowser","authToken","getSessionToken","resp","fetch","options","ingestPoint","method","headers","Authorization","body","stringify","status","data","json","handleFlags","_a","is_persist","push","str","uniquePersistFlags","diffPersist","setItem","call","clearPersistFlags","removeItem","persistFlagsArr","pf","default"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/cjs/modules/featureFlags.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass FeatureFlags {\n    constructor(app) {\n        this.app = app;\n        this.flags = [];\n        this.storageKey = '__openreplay_flags';\n        const persistFlags = this.app.sessionStorage.getItem(this.storageKey);\n        if (persistFlags) {\n            const persistFlagsStrArr = persistFlags.split(';').filter(Boolean);\n            this.flags = persistFlagsStrArr.map((flag) => JSON.parse(flag));\n        }\n    }\n    getFeatureFlag(flagName) {\n        return this.flags.find((flag) => flag.key === flagName);\n    }\n    isFlagEnabled(flagName) {\n        return this.flags.findIndex((flag) => flag.key === flagName) !== -1;\n    }\n    onFlagsLoad(cb) {\n        this.onFlagsCb = cb;\n    }\n    async reloadFlags(token) {\n        const persistFlagsStr = this.app.sessionStorage.getItem(this.storageKey);\n        const persistFlags = {};\n        if (persistFlagsStr) {\n            const persistArray = persistFlagsStr.split(';').filter(Boolean);\n            persistArray.forEach((flag) => {\n                const flagObj = JSON.parse(flag);\n                persistFlags[flagObj.key] = { key: flagObj.key, value: flagObj.value };\n            });\n        }\n        const sessionInfo = this.app.session.getInfo();\n        const userInfo = this.app.session.userInfo;\n        const requestObject = {\n            projectID: sessionInfo.projectID,\n            userID: sessionInfo.userID,\n            metadata: sessionInfo.metadata,\n            referrer: document.referrer,\n            os: userInfo.userOS,\n            device: userInfo.userDevice,\n            country: userInfo.userCountry,\n            state: userInfo.userState,\n            city: userInfo.userCity,\n            browser: userInfo.userBrowser,\n            persistFlags: persistFlags,\n        };\n        const authToken = token !== null && token !== void 0 ? token : this.app.session.getSessionToken();\n        const resp = await fetch(this.app.options.ingestPoint + '/v1/web/feature-flags', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${authToken}`,\n            },\n            body: JSON.stringify(requestObject),\n        });\n        if (resp.status === 200) {\n            const data = await resp.json();\n            return this.handleFlags(data.flags);\n        }\n    }\n    handleFlags(flags) {\n        var _a;\n        const persistFlags = [];\n        flags.forEach((flag) => {\n            if (flag.is_persist)\n                persistFlags.push(flag);\n        });\n        let str = '';\n        const uniquePersistFlags = this.diffPersist(persistFlags);\n        uniquePersistFlags.forEach((flag) => {\n            str += `${JSON.stringify(flag)};`;\n        });\n        this.app.sessionStorage.setItem(this.storageKey, str);\n        this.flags = flags;\n        return (_a = this.onFlagsCb) === null || _a === void 0 ? void 0 : _a.call(this, flags);\n    }\n    clearPersistFlags() {\n        this.app.sessionStorage.removeItem(this.storageKey);\n    }\n    diffPersist(flags) {\n        const persistFlags = this.app.sessionStorage.getItem(this.storageKey);\n        if (!persistFlags)\n            return flags;\n        const persistFlagsStrArr = persistFlags.split(';').filter(Boolean);\n        const persistFlagsArr = persistFlagsStrArr.map((flag) => JSON.parse(flag));\n        return flags.filter((flag) => persistFlagsArr.findIndex((pf) => pf.key === flag.key) === -1);\n    }\n}\nexports.default = FeatureFlags;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}