{"ast":null,"code":"// Le truc - for defining an absolute offset for (nested) iframe documents. (To track mouse movments)\nexport default class IFrameOffsets {\n  constructor() {\n    this.states = new Map();\n  }\n  calcOffset(state) {\n    let parLeft = 0,\n      parTop = 0;\n    if (state.parent) {\n      ;\n      [parLeft, parTop] = this.calcOffset(state.parent);\n    }\n    if (!state.offset) {\n      const {\n        left,\n        top\n      } = state.iFrame.getBoundingClientRect();\n      state.offset = [left, top];\n    }\n    const [left, top] = state.offset;\n    return [parLeft + left, parTop + top]; // TODO: store absolute sum, invalidate whole subtree. Otherwise it is summated on each mousemove\n  }\n  getDocumentOffset(doc) {\n    const state = this.states.get(doc);\n    if (!state) {\n      return [0, 0];\n    } // topmost doc\n    return this.calcOffset(state);\n  }\n  observe(iFrame) {\n    var _a;\n    const doc = iFrame.contentDocument;\n    if (!doc) {\n      return;\n    }\n    const parentDoc = iFrame.ownerDocument;\n    const parentState = this.states.get(parentDoc);\n    const state = {\n      offset: null,\n      iFrame,\n      parent: parentState || null,\n      clear: () => {\n        var _a;\n        parentDoc.removeEventListener('scroll', invalidateOffset);\n        (_a = parentDoc.defaultView) === null || _a === void 0 ? void 0 : _a.removeEventListener('resize', invalidateOffset);\n      }\n    };\n    const invalidateOffset = () => {\n      state.offset = null;\n    };\n    // anything more reliable? This does not cover all cases (layout changes are ignored, for ex.)\n    parentDoc.addEventListener('scroll', invalidateOffset);\n    (_a = parentDoc.defaultView) === null || _a === void 0 ? void 0 : _a.addEventListener('resize', invalidateOffset);\n    this.states.set(doc, state);\n  }\n  clear() {\n    this.states.forEach(s => s.clear());\n    this.states.clear();\n  }\n}","map":{"version":3,"names":["IFrameOffsets","constructor","states","Map","calcOffset","state","parLeft","parTop","parent","offset","left","top","iFrame","getBoundingClientRect","getDocumentOffset","doc","get","observe","_a","contentDocument","parentDoc","ownerDocument","parentState","clear","removeEventListener","invalidateOffset","defaultView","addEventListener","set","forEach","s"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/lib/app/observer/iframe_offsets.js"],"sourcesContent":["// Le truc - for defining an absolute offset for (nested) iframe documents. (To track mouse movments)\nexport default class IFrameOffsets {\n    constructor() {\n        this.states = new Map();\n    }\n    calcOffset(state) {\n        let parLeft = 0, parTop = 0;\n        if (state.parent) {\n            ;\n            [parLeft, parTop] = this.calcOffset(state.parent);\n        }\n        if (!state.offset) {\n            const { left, top } = state.iFrame.getBoundingClientRect();\n            state.offset = [left, top];\n        }\n        const [left, top] = state.offset;\n        return [parLeft + left, parTop + top]; // TODO: store absolute sum, invalidate whole subtree. Otherwise it is summated on each mousemove\n    }\n    getDocumentOffset(doc) {\n        const state = this.states.get(doc);\n        if (!state) {\n            return [0, 0];\n        } // topmost doc\n        return this.calcOffset(state);\n    }\n    observe(iFrame) {\n        var _a;\n        const doc = iFrame.contentDocument;\n        if (!doc) {\n            return;\n        }\n        const parentDoc = iFrame.ownerDocument;\n        const parentState = this.states.get(parentDoc);\n        const state = {\n            offset: null,\n            iFrame,\n            parent: parentState || null,\n            clear: () => {\n                var _a;\n                parentDoc.removeEventListener('scroll', invalidateOffset);\n                (_a = parentDoc.defaultView) === null || _a === void 0 ? void 0 : _a.removeEventListener('resize', invalidateOffset);\n            },\n        };\n        const invalidateOffset = () => {\n            state.offset = null;\n        };\n        // anything more reliable? This does not cover all cases (layout changes are ignored, for ex.)\n        parentDoc.addEventListener('scroll', invalidateOffset);\n        (_a = parentDoc.defaultView) === null || _a === void 0 ? void 0 : _a.addEventListener('resize', invalidateOffset);\n        this.states.set(doc, state);\n    }\n    clear() {\n        this.states.forEach((s) => s.clear());\n        this.states.clear();\n    }\n}\n"],"mappings":"AAAA;AACA,eAAe,MAAMA,aAAa,CAAC;EAC/BC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,MAAM,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC3B;EACAC,UAAUA,CAACC,KAAK,EAAE;IACd,IAAIC,OAAO,GAAG,CAAC;MAAEC,MAAM,GAAG,CAAC;IAC3B,IAAIF,KAAK,CAACG,MAAM,EAAE;MACd;MACA,CAACF,OAAO,EAAEC,MAAM,CAAC,GAAG,IAAI,CAACH,UAAU,CAACC,KAAK,CAACG,MAAM,CAAC;IACrD;IACA,IAAI,CAACH,KAAK,CAACI,MAAM,EAAE;MACf,MAAM;QAAEC,IAAI;QAAEC;MAAI,CAAC,GAAGN,KAAK,CAACO,MAAM,CAACC,qBAAqB,CAAC,CAAC;MAC1DR,KAAK,CAACI,MAAM,GAAG,CAACC,IAAI,EAAEC,GAAG,CAAC;IAC9B;IACA,MAAM,CAACD,IAAI,EAAEC,GAAG,CAAC,GAAGN,KAAK,CAACI,MAAM;IAChC,OAAO,CAACH,OAAO,GAAGI,IAAI,EAAEH,MAAM,GAAGI,GAAG,CAAC,CAAC,CAAC;EAC3C;EACAG,iBAAiBA,CAACC,GAAG,EAAE;IACnB,MAAMV,KAAK,GAAG,IAAI,CAACH,MAAM,CAACc,GAAG,CAACD,GAAG,CAAC;IAClC,IAAI,CAACV,KAAK,EAAE;MACR,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;IACjB,CAAC,CAAC;IACF,OAAO,IAAI,CAACD,UAAU,CAACC,KAAK,CAAC;EACjC;EACAY,OAAOA,CAACL,MAAM,EAAE;IACZ,IAAIM,EAAE;IACN,MAAMH,GAAG,GAAGH,MAAM,CAACO,eAAe;IAClC,IAAI,CAACJ,GAAG,EAAE;MACN;IACJ;IACA,MAAMK,SAAS,GAAGR,MAAM,CAACS,aAAa;IACtC,MAAMC,WAAW,GAAG,IAAI,CAACpB,MAAM,CAACc,GAAG,CAACI,SAAS,CAAC;IAC9C,MAAMf,KAAK,GAAG;MACVI,MAAM,EAAE,IAAI;MACZG,MAAM;MACNJ,MAAM,EAAEc,WAAW,IAAI,IAAI;MAC3BC,KAAK,EAAEA,CAAA,KAAM;QACT,IAAIL,EAAE;QACNE,SAAS,CAACI,mBAAmB,CAAC,QAAQ,EAAEC,gBAAgB,CAAC;QACzD,CAACP,EAAE,GAAGE,SAAS,CAACM,WAAW,MAAM,IAAI,IAAIR,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACM,mBAAmB,CAAC,QAAQ,EAAEC,gBAAgB,CAAC;MACxH;IACJ,CAAC;IACD,MAAMA,gBAAgB,GAAGA,CAAA,KAAM;MAC3BpB,KAAK,CAACI,MAAM,GAAG,IAAI;IACvB,CAAC;IACD;IACAW,SAAS,CAACO,gBAAgB,CAAC,QAAQ,EAAEF,gBAAgB,CAAC;IACtD,CAACP,EAAE,GAAGE,SAAS,CAACM,WAAW,MAAM,IAAI,IAAIR,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACS,gBAAgB,CAAC,QAAQ,EAAEF,gBAAgB,CAAC;IACjH,IAAI,CAACvB,MAAM,CAAC0B,GAAG,CAACb,GAAG,EAAEV,KAAK,CAAC;EAC/B;EACAkB,KAAKA,CAAA,EAAG;IACJ,IAAI,CAACrB,MAAM,CAAC2B,OAAO,CAAEC,CAAC,IAAKA,CAAC,CAACP,KAAK,CAAC,CAAC,CAAC;IACrC,IAAI,CAACrB,MAAM,CAACqB,KAAK,CAAC,CAAC;EACvB;AACJ"},"metadata":{},"sourceType":"module"}