{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Quality = void 0;\nexports.Quality = {\n  Standard: {\n    width: 1280,\n    height: 720\n  },\n  High: {\n    width: 1920,\n    height: 1080\n  }\n};\nclass Recorder {\n  constructor(app) {\n    this.app = app;\n    this.mediaRecorder = null;\n    this.recordedChunks = [];\n    this.stream = null;\n    this.recStartTs = null;\n  }\n  async startRecording(fps, quality, micReq, camReq) {\n    this.recStartTs = this.app.timestamp();\n    const videoConstraints = quality;\n    try {\n      this.stream = await navigator.mediaDevices.getUserMedia({\n        video: camReq ? Object.assign(Object.assign({}, videoConstraints), {\n          frameRate: {\n            ideal: fps\n          }\n        }) : false,\n        audio: micReq\n      });\n      this.mediaRecorder = new MediaRecorder(this.stream, {\n        mimeType: 'video/webm;codecs=vp9'\n      });\n      this.recordedChunks = [];\n      this.mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          this.recordedChunks.push(event.data);\n        }\n      };\n      this.mediaRecorder.start();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async stopRecording() {\n    return new Promise(resolve => {\n      if (!this.mediaRecorder) return;\n      this.mediaRecorder.onstop = () => {\n        const blob = new Blob(this.recordedChunks, {\n          type: 'video/webm'\n        });\n        resolve(blob);\n      };\n      this.mediaRecorder.stop();\n    });\n  }\n  async sendToAPI() {\n    const blob = await this.stopRecording();\n    // const formData = new FormData()\n    // formData.append('file', blob, 'record.webm')\n    // formData.append('start', this.recStartTs?.toString() ?? '')\n    return fetch(`${this.app.options.ingestPoint}/v1/web/uxt/upload-url`, {\n      headers: {\n        Authorization: `Bearer ${this.app.session.getSessionToken()}`\n      }\n    }).then(r => {\n      if (r.ok) {\n        return r.json();\n      } else {\n        throw new Error('Failed to get upload url');\n      }\n    }).then(({\n      url\n    }) => {\n      return fetch(url, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'video/webm'\n        },\n        body: blob\n      });\n    }).catch(console.error).finally(() => {\n      this.discard();\n    });\n  }\n  async saveToFile(fileName = 'recorded-video.webm') {\n    const blob = await this.stopRecording();\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.style.display = 'none';\n    a.href = url;\n    a.download = fileName;\n    document.body.appendChild(a);\n    a.click();\n    window.URL.revokeObjectURL(url);\n    document.body.removeChild(a);\n  }\n  discard() {\n    var _a, _b;\n    (_a = this.mediaRecorder) === null || _a === void 0 ? void 0 : _a.stop();\n    (_b = this.stream) === null || _b === void 0 ? void 0 : _b.getTracks().forEach(track => track.stop());\n  }\n}\nexports.default = Recorder;","map":{"version":3,"names":["Object","defineProperty","exports","value","Quality","Standard","width","height","High","Recorder","constructor","app","mediaRecorder","recordedChunks","stream","recStartTs","startRecording","fps","quality","micReq","camReq","timestamp","videoConstraints","navigator","mediaDevices","getUserMedia","video","assign","frameRate","ideal","audio","MediaRecorder","mimeType","ondataavailable","event","data","size","push","start","error","console","stopRecording","Promise","resolve","onstop","blob","Blob","type","stop","sendToAPI","fetch","options","ingestPoint","headers","Authorization","session","getSessionToken","then","r","ok","json","Error","url","method","body","catch","finally","discard","saveToFile","fileName","URL","createObjectURL","a","document","createElement","style","display","href","download","appendChild","click","window","revokeObjectURL","removeChild","_a","_b","getTracks","forEach","track","default"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/cjs/modules/userTesting/recorder.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Quality = void 0;\nexports.Quality = {\n    Standard: { width: 1280, height: 720 },\n    High: { width: 1920, height: 1080 },\n};\nclass Recorder {\n    constructor(app) {\n        this.app = app;\n        this.mediaRecorder = null;\n        this.recordedChunks = [];\n        this.stream = null;\n        this.recStartTs = null;\n    }\n    async startRecording(fps, quality, micReq, camReq) {\n        this.recStartTs = this.app.timestamp();\n        const videoConstraints = quality;\n        try {\n            this.stream = await navigator.mediaDevices.getUserMedia({\n                video: camReq ? Object.assign(Object.assign({}, videoConstraints), { frameRate: { ideal: fps } }) : false,\n                audio: micReq,\n            });\n            this.mediaRecorder = new MediaRecorder(this.stream, {\n                mimeType: 'video/webm;codecs=vp9',\n            });\n            this.recordedChunks = [];\n            this.mediaRecorder.ondataavailable = (event) => {\n                if (event.data.size > 0) {\n                    this.recordedChunks.push(event.data);\n                }\n            };\n            this.mediaRecorder.start();\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n    async stopRecording() {\n        return new Promise((resolve) => {\n            if (!this.mediaRecorder)\n                return;\n            this.mediaRecorder.onstop = () => {\n                const blob = new Blob(this.recordedChunks, {\n                    type: 'video/webm',\n                });\n                resolve(blob);\n            };\n            this.mediaRecorder.stop();\n        });\n    }\n    async sendToAPI() {\n        const blob = await this.stopRecording();\n        // const formData = new FormData()\n        // formData.append('file', blob, 'record.webm')\n        // formData.append('start', this.recStartTs?.toString() ?? '')\n        return fetch(`${this.app.options.ingestPoint}/v1/web/uxt/upload-url`, {\n            headers: {\n                Authorization: `Bearer ${this.app.session.getSessionToken()}`,\n            },\n        })\n            .then((r) => {\n            if (r.ok) {\n                return r.json();\n            }\n            else {\n                throw new Error('Failed to get upload url');\n            }\n        })\n            .then(({ url }) => {\n            return fetch(url, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'video/webm',\n                },\n                body: blob,\n            });\n        })\n            .catch(console.error)\n            .finally(() => {\n            this.discard();\n        });\n    }\n    async saveToFile(fileName = 'recorded-video.webm') {\n        const blob = await this.stopRecording();\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.style.display = 'none';\n        a.href = url;\n        a.download = fileName;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n    }\n    discard() {\n        var _a, _b;\n        (_a = this.mediaRecorder) === null || _a === void 0 ? void 0 : _a.stop();\n        (_b = this.stream) === null || _b === void 0 ? void 0 : _b.getTracks().forEach((track) => track.stop());\n    }\n}\nexports.default = Recorder;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxBF,OAAO,CAACE,OAAO,GAAG;EACdC,QAAQ,EAAE;IAAEC,KAAK,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAI,CAAC;EACtCC,IAAI,EAAE;IAAEF,KAAK,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAK;AACtC,CAAC;AACD,MAAME,QAAQ,CAAC;EACXC,WAAWA,CAACC,GAAG,EAAE;IACb,IAAI,CAACA,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,UAAU,GAAG,IAAI;EAC1B;EACA,MAAMC,cAAcA,CAACC,GAAG,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAE;IAC/C,IAAI,CAACL,UAAU,GAAG,IAAI,CAACJ,GAAG,CAACU,SAAS,CAAC,CAAC;IACtC,MAAMC,gBAAgB,GAAGJ,OAAO;IAChC,IAAI;MACA,IAAI,CAACJ,MAAM,GAAG,MAAMS,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QACpDC,KAAK,EAAEN,MAAM,GAAGpB,MAAM,CAAC2B,MAAM,CAAC3B,MAAM,CAAC2B,MAAM,CAAC,CAAC,CAAC,EAAEL,gBAAgB,CAAC,EAAE;UAAEM,SAAS,EAAE;YAAEC,KAAK,EAAEZ;UAAI;QAAE,CAAC,CAAC,GAAG,KAAK;QACzGa,KAAK,EAAEX;MACX,CAAC,CAAC;MACF,IAAI,CAACP,aAAa,GAAG,IAAImB,aAAa,CAAC,IAAI,CAACjB,MAAM,EAAE;QAChDkB,QAAQ,EAAE;MACd,CAAC,CAAC;MACF,IAAI,CAACnB,cAAc,GAAG,EAAE;MACxB,IAAI,CAACD,aAAa,CAACqB,eAAe,GAAIC,KAAK,IAAK;QAC5C,IAAIA,KAAK,CAACC,IAAI,CAACC,IAAI,GAAG,CAAC,EAAE;UACrB,IAAI,CAACvB,cAAc,CAACwB,IAAI,CAACH,KAAK,CAACC,IAAI,CAAC;QACxC;MACJ,CAAC;MACD,IAAI,CAACvB,aAAa,CAAC0B,KAAK,CAAC,CAAC;IAC9B,CAAC,CACD,OAAOC,KAAK,EAAE;MACVC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ;EACA,MAAME,aAAaA,CAAA,EAAG;IAClB,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC5B,IAAI,CAAC,IAAI,CAAC/B,aAAa,EACnB;MACJ,IAAI,CAACA,aAAa,CAACgC,MAAM,GAAG,MAAM;QAC9B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,IAAI,CAACjC,cAAc,EAAE;UACvCkC,IAAI,EAAE;QACV,CAAC,CAAC;QACFJ,OAAO,CAACE,IAAI,CAAC;MACjB,CAAC;MACD,IAAI,CAACjC,aAAa,CAACoC,IAAI,CAAC,CAAC;IAC7B,CAAC,CAAC;EACN;EACA,MAAMC,SAASA,CAAA,EAAG;IACd,MAAMJ,IAAI,GAAG,MAAM,IAAI,CAACJ,aAAa,CAAC,CAAC;IACvC;IACA;IACA;IACA,OAAOS,KAAK,CAAE,GAAE,IAAI,CAACvC,GAAG,CAACwC,OAAO,CAACC,WAAY,wBAAuB,EAAE;MAClEC,OAAO,EAAE;QACLC,aAAa,EAAG,UAAS,IAAI,CAAC3C,GAAG,CAAC4C,OAAO,CAACC,eAAe,CAAC,CAAE;MAChE;IACJ,CAAC,CAAC,CACGC,IAAI,CAAEC,CAAC,IAAK;MACb,IAAIA,CAAC,CAACC,EAAE,EAAE;QACN,OAAOD,CAAC,CAACE,IAAI,CAAC,CAAC;MACnB,CAAC,MACI;QACD,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC/C;IACJ,CAAC,CAAC,CACGJ,IAAI,CAAC,CAAC;MAAEK;IAAI,CAAC,KAAK;MACnB,OAAOZ,KAAK,CAACY,GAAG,EAAE;QACdC,MAAM,EAAE,KAAK;QACbV,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDW,IAAI,EAAEnB;MACV,CAAC,CAAC;IACN,CAAC,CAAC,CACGoB,KAAK,CAACzB,OAAO,CAACD,KAAK,CAAC,CACpB2B,OAAO,CAAC,MAAM;MACf,IAAI,CAACC,OAAO,CAAC,CAAC;IAClB,CAAC,CAAC;EACN;EACA,MAAMC,UAAUA,CAACC,QAAQ,GAAG,qBAAqB,EAAE;IAC/C,MAAMxB,IAAI,GAAG,MAAM,IAAI,CAACJ,aAAa,CAAC,CAAC;IACvC,MAAMqB,GAAG,GAAGQ,GAAG,CAACC,eAAe,CAAC1B,IAAI,CAAC;IACrC,MAAM2B,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACrCF,CAAC,CAACG,KAAK,CAACC,OAAO,GAAG,MAAM;IACxBJ,CAAC,CAACK,IAAI,GAAGf,GAAG;IACZU,CAAC,CAACM,QAAQ,GAAGT,QAAQ;IACrBI,QAAQ,CAACT,IAAI,CAACe,WAAW,CAACP,CAAC,CAAC;IAC5BA,CAAC,CAACQ,KAAK,CAAC,CAAC;IACTC,MAAM,CAACX,GAAG,CAACY,eAAe,CAACpB,GAAG,CAAC;IAC/BW,QAAQ,CAACT,IAAI,CAACmB,WAAW,CAACX,CAAC,CAAC;EAChC;EACAL,OAAOA,CAAA,EAAG;IACN,IAAIiB,EAAE,EAAEC,EAAE;IACV,CAACD,EAAE,GAAG,IAAI,CAACxE,aAAa,MAAM,IAAI,IAAIwE,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACpC,IAAI,CAAC,CAAC;IACxE,CAACqC,EAAE,GAAG,IAAI,CAACvE,MAAM,MAAM,IAAI,IAAIuE,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,SAAS,CAAC,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAKA,KAAK,CAACxC,IAAI,CAAC,CAAC,CAAC;EAC3G;AACJ;AACA9C,OAAO,CAACuF,OAAO,GAAGhF,QAAQ"},"metadata":{},"sourceType":"script"}