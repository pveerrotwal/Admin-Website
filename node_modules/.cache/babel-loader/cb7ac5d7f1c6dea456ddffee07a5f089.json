{"ast":null,"code":"var _a;\nimport NetworkMessage from './networkMessage.js';\nimport { genStringBody, getURL } from './utils.js';\n// https://fetch.spec.whatwg.org/#concept-bodyinit-extract\nconst getContentType = data => {\n  if (data instanceof Blob) {\n    return data.type;\n  }\n  if (data instanceof FormData) {\n    return 'multipart/form-data';\n  }\n  if (data instanceof URLSearchParams) {\n    return 'application/x-www-form-urlencoded;charset=UTF-8';\n  }\n  return 'text/plain;charset=UTF-8';\n};\nexport class BeaconProxyHandler {\n  constructor(ignoredHeaders, setSessionTokenHeader, sanitize, sendMessage, isServiceUrl) {\n    this.ignoredHeaders = ignoredHeaders;\n    this.setSessionTokenHeader = setSessionTokenHeader;\n    this.sanitize = sanitize;\n    this.sendMessage = sendMessage;\n    this.isServiceUrl = isServiceUrl;\n  }\n  apply(target, thisArg, argsList) {\n    const urlString = argsList[0];\n    const data = argsList[1];\n    const item = new NetworkMessage(this.ignoredHeaders, this.setSessionTokenHeader, this.sanitize);\n    if (this.isServiceUrl(urlString)) {\n      return target.apply(thisArg, argsList);\n    }\n    const url = getURL(urlString);\n    item.method = 'POST';\n    item.url = urlString;\n    item.name = (url.pathname.split('/').pop() || '') + url.search;\n    item.requestType = 'beacon';\n    item.requestHeader = {\n      'Content-Type': getContentType(data)\n    };\n    item.status = 0;\n    item.statusText = 'Pending';\n    if (url.search && url.searchParams) {\n      item.getData = {};\n      for (const [key, value] of url.searchParams) {\n        item.getData[key] = value;\n      }\n    }\n    item.requestData = genStringBody(data);\n    if (!item.startTime) {\n      item.startTime = performance.now();\n    }\n    const isSuccess = target.apply(thisArg, argsList);\n    if (isSuccess) {\n      item.endTime = performance.now();\n      item.duration = item.endTime - (item.startTime || item.endTime);\n      item.status = 0;\n      item.statusText = 'Sent';\n      item.readyState = 4;\n    } else {\n      item.status = 500;\n      item.statusText = 'Unknown';\n    }\n    this.sendMessage(item.getMessage());\n    return isSuccess;\n  }\n}\nexport default class BeaconProxy {\n  static hasSendBeacon() {\n    return !!BeaconProxy.origSendBeacon;\n  }\n  static create(ignoredHeaders, setSessionTokenHeader, sanitize, sendMessage, isServiceUrl) {\n    if (!BeaconProxy.hasSendBeacon()) {\n      return undefined;\n    }\n    return new Proxy(BeaconProxy.origSendBeacon, new BeaconProxyHandler(ignoredHeaders, setSessionTokenHeader, sanitize, sendMessage, isServiceUrl));\n  }\n}\nBeaconProxy.origSendBeacon = (_a = window === null || window === void 0 ? void 0 : window.navigator) === null || _a === void 0 ? void 0 : _a.sendBeacon;","map":{"version":3,"names":["_a","NetworkMessage","genStringBody","getURL","getContentType","data","Blob","type","FormData","URLSearchParams","BeaconProxyHandler","constructor","ignoredHeaders","setSessionTokenHeader","sanitize","sendMessage","isServiceUrl","apply","target","thisArg","argsList","urlString","item","url","method","name","pathname","split","pop","search","requestType","requestHeader","status","statusText","searchParams","getData","key","value","requestData","startTime","performance","now","isSuccess","endTime","duration","readyState","getMessage","BeaconProxy","hasSendBeacon","origSendBeacon","create","undefined","Proxy","window","navigator","sendBeacon"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/lib/modules/Network/beaconProxy.js"],"sourcesContent":["var _a;\nimport NetworkMessage from './networkMessage.js';\nimport { genStringBody, getURL } from './utils.js';\n// https://fetch.spec.whatwg.org/#concept-bodyinit-extract\nconst getContentType = (data) => {\n    if (data instanceof Blob) {\n        return data.type;\n    }\n    if (data instanceof FormData) {\n        return 'multipart/form-data';\n    }\n    if (data instanceof URLSearchParams) {\n        return 'application/x-www-form-urlencoded;charset=UTF-8';\n    }\n    return 'text/plain;charset=UTF-8';\n};\nexport class BeaconProxyHandler {\n    constructor(ignoredHeaders, setSessionTokenHeader, sanitize, sendMessage, isServiceUrl) {\n        this.ignoredHeaders = ignoredHeaders;\n        this.setSessionTokenHeader = setSessionTokenHeader;\n        this.sanitize = sanitize;\n        this.sendMessage = sendMessage;\n        this.isServiceUrl = isServiceUrl;\n    }\n    apply(target, thisArg, argsList) {\n        const urlString = argsList[0];\n        const data = argsList[1];\n        const item = new NetworkMessage(this.ignoredHeaders, this.setSessionTokenHeader, this.sanitize);\n        if (this.isServiceUrl(urlString)) {\n            return target.apply(thisArg, argsList);\n        }\n        const url = getURL(urlString);\n        item.method = 'POST';\n        item.url = urlString;\n        item.name = (url.pathname.split('/').pop() || '') + url.search;\n        item.requestType = 'beacon';\n        item.requestHeader = { 'Content-Type': getContentType(data) };\n        item.status = 0;\n        item.statusText = 'Pending';\n        if (url.search && url.searchParams) {\n            item.getData = {};\n            for (const [key, value] of url.searchParams) {\n                item.getData[key] = value;\n            }\n        }\n        item.requestData = genStringBody(data);\n        if (!item.startTime) {\n            item.startTime = performance.now();\n        }\n        const isSuccess = target.apply(thisArg, argsList);\n        if (isSuccess) {\n            item.endTime = performance.now();\n            item.duration = item.endTime - (item.startTime || item.endTime);\n            item.status = 0;\n            item.statusText = 'Sent';\n            item.readyState = 4;\n        }\n        else {\n            item.status = 500;\n            item.statusText = 'Unknown';\n        }\n        this.sendMessage(item.getMessage());\n        return isSuccess;\n    }\n}\nexport default class BeaconProxy {\n    static hasSendBeacon() {\n        return !!BeaconProxy.origSendBeacon;\n    }\n    static create(ignoredHeaders, setSessionTokenHeader, sanitize, sendMessage, isServiceUrl) {\n        if (!BeaconProxy.hasSendBeacon()) {\n            return undefined;\n        }\n        return new Proxy(BeaconProxy.origSendBeacon, new BeaconProxyHandler(ignoredHeaders, setSessionTokenHeader, sanitize, sendMessage, isServiceUrl));\n    }\n}\nBeaconProxy.origSendBeacon = (_a = window === null || window === void 0 ? void 0 : window.navigator) === null || _a === void 0 ? void 0 : _a.sendBeacon;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}