{"ast":null,"code":"import { JSException } from '../app/messages.gen.js';\nimport ErrorStackParser from 'error-stack-parser';\nfunction getDefaultStack(e) {\n  return [{\n    columnNumber: e.colno,\n    lineNumber: e.lineno,\n    fileName: e.filename,\n    functionName: '',\n    source: ''\n  }];\n}\nexport function getExceptionMessage(error, fallbackStack, metadata = {}) {\n  let stack = fallbackStack;\n  try {\n    stack = ErrorStackParser.parse(error);\n  } catch (e) {}\n  return JSException(error.name, error.message, JSON.stringify(stack), JSON.stringify(metadata));\n}\nexport function getExceptionMessageFromEvent(e, context = window, metadata = {}) {\n  if (e instanceof ErrorEvent) {\n    if (e.error instanceof Error) {\n      return getExceptionMessage(e.error, getDefaultStack(e), metadata);\n    } else {\n      let [name, message] = e.message.split(':');\n      if (!message) {\n        name = 'Error';\n        message = e.message;\n      }\n      return JSException(name, message, JSON.stringify(getDefaultStack(e)), JSON.stringify(metadata));\n    }\n  } else if ('PromiseRejectionEvent' in context && e instanceof context.PromiseRejectionEvent) {\n    if (e.reason instanceof Error) {\n      return getExceptionMessage(e.reason, [], metadata);\n    } else {\n      let message;\n      try {\n        message = JSON.stringify(e.reason);\n      } catch (_) {\n        message = String(e.reason);\n      }\n      return JSException('Unhandled Promise Rejection', message, '[]', JSON.stringify(metadata));\n    }\n  }\n  return null;\n}\nexport default function (app, opts) {\n  const options = Object.assign({\n    captureExceptions: true\n  }, opts);\n  function patchContext(context) {\n    function handler(e) {\n      const msg = getExceptionMessageFromEvent(e, context);\n      if (msg != null) {\n        app.send(msg);\n      }\n    }\n    app.attachEventListener(context, 'unhandledrejection', handler);\n    app.attachEventListener(context, 'error', handler);\n  }\n  if (options.captureExceptions) {\n    app.observer.attachContextCallback(patchContext); // TODO: attach once-per-iframe (?)\n    patchContext(window);\n  }\n}","map":{"version":3,"names":["JSException","ErrorStackParser","getDefaultStack","e","columnNumber","colno","lineNumber","lineno","fileName","filename","functionName","source","getExceptionMessage","error","fallbackStack","metadata","stack","parse","name","message","JSON","stringify","getExceptionMessageFromEvent","context","window","ErrorEvent","Error","split","PromiseRejectionEvent","reason","_","String","app","opts","options","Object","assign","captureExceptions","patchContext","handler","msg","send","attachEventListener","observer","attachContextCallback"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/lib/modules/exception.js"],"sourcesContent":["import { JSException } from '../app/messages.gen.js';\nimport ErrorStackParser from 'error-stack-parser';\nfunction getDefaultStack(e) {\n    return [\n        {\n            columnNumber: e.colno,\n            lineNumber: e.lineno,\n            fileName: e.filename,\n            functionName: '',\n            source: '',\n        },\n    ];\n}\nexport function getExceptionMessage(error, fallbackStack, metadata = {}) {\n    let stack = fallbackStack;\n    try {\n        stack = ErrorStackParser.parse(error);\n    }\n    catch (e) { }\n    return JSException(error.name, error.message, JSON.stringify(stack), JSON.stringify(metadata));\n}\nexport function getExceptionMessageFromEvent(e, context = window, metadata = {}) {\n    if (e instanceof ErrorEvent) {\n        if (e.error instanceof Error) {\n            return getExceptionMessage(e.error, getDefaultStack(e), metadata);\n        }\n        else {\n            let [name, message] = e.message.split(':');\n            if (!message) {\n                name = 'Error';\n                message = e.message;\n            }\n            return JSException(name, message, JSON.stringify(getDefaultStack(e)), JSON.stringify(metadata));\n        }\n    }\n    else if ('PromiseRejectionEvent' in context && e instanceof context.PromiseRejectionEvent) {\n        if (e.reason instanceof Error) {\n            return getExceptionMessage(e.reason, [], metadata);\n        }\n        else {\n            let message;\n            try {\n                message = JSON.stringify(e.reason);\n            }\n            catch (_) {\n                message = String(e.reason);\n            }\n            return JSException('Unhandled Promise Rejection', message, '[]', JSON.stringify(metadata));\n        }\n    }\n    return null;\n}\nexport default function (app, opts) {\n    const options = Object.assign({\n        captureExceptions: true,\n    }, opts);\n    function patchContext(context) {\n        function handler(e) {\n            const msg = getExceptionMessageFromEvent(e, context);\n            if (msg != null) {\n                app.send(msg);\n            }\n        }\n        app.attachEventListener(context, 'unhandledrejection', handler);\n        app.attachEventListener(context, 'error', handler);\n    }\n    if (options.captureExceptions) {\n        app.observer.attachContextCallback(patchContext); // TODO: attach once-per-iframe (?)\n        patchContext(window);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}