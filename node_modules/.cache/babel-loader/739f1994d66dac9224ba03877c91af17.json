{"ast":null,"code":"import Observer from './observer.js';\nimport { isElementNode, hasTag } from '../guards.js';\nimport IFrameObserver from './iframe_observer.js';\nimport ShadowRootObserver from './shadow_root_observer.js';\nimport IFrameOffsets from './iframe_offsets.js';\nimport { CreateDocument } from '../messages.gen.js';\nimport { IN_BROWSER, hasOpenreplayAttribute, canAccessIframe } from '../../utils.js';\nconst attachShadowNativeFn = IN_BROWSER ? Element.prototype.attachShadow : () => new ShadowRoot();\nexport default class TopObserver extends Observer {\n  constructor(app, options) {\n    super(app, true);\n    this.iframeOffsets = new IFrameOffsets();\n    this.contextCallbacks = [];\n    // Attached once per Tracker instance\n    this.contextsSet = new Set();\n    this.iframeObservers = [];\n    this.shadowRootObservers = [];\n    this.options = Object.assign({\n      captureIFrames: true\n    }, options);\n    // IFrames\n    this.app.nodes.attachNodeCallback(node => {\n      if (hasTag(node, 'iframe') && (this.options.captureIFrames && !hasOpenreplayAttribute(node, 'obscured') || hasOpenreplayAttribute(node, 'capture'))) {\n        this.handleIframe(node);\n      }\n    });\n    // ShadowDOM\n    this.app.nodes.attachNodeCallback(node => {\n      if (isElementNode(node) && node.shadowRoot !== null) {\n        this.handleShadowRoot(node.shadowRoot);\n      }\n    });\n  }\n  attachContextCallback(cb) {\n    this.contextCallbacks.push(cb);\n  }\n  getDocumentOffset(doc) {\n    return this.iframeOffsets.getDocumentOffset(doc);\n  }\n  handleIframe(iframe) {\n    let doc = null;\n    // setTimeout is required. Otherwise some event listeners (scroll, mousemove) applied in modules\n    //     do not work on the iframe document when it 've been loaded dynamically ((why?))\n    const handle = this.app.safe(() => setTimeout(() => {\n      const id = this.app.nodes.getID(iframe);\n      if (id === undefined) {\n        //log\n        return;\n      }\n      if (!canAccessIframe(iframe)) return;\n      const currentWin = iframe.contentWindow;\n      const currentDoc = iframe.contentDocument;\n      if (currentDoc && currentDoc !== doc) {\n        const observer = new IFrameObserver(this.app);\n        this.iframeObservers.push(observer);\n        observer.observe(iframe); // TODO: call unregisterNode for the previous doc if present (incapsulate: one iframe - one observer)\n        doc = currentDoc;\n        this.iframeOffsets.observe(iframe);\n      }\n      if (currentWin &&\n      // Sometimes currentWin.window is null (not in specification). Such window object is not functional\n      currentWin === currentWin.window && !this.contextsSet.has(currentWin) // for each context callbacks called once per Tracker (TopObserver) instance\n      //TODO: more explicit logic\n      ) {\n        this.contextsSet.add(currentWin);\n        //@ts-ignore https://github.com/microsoft/TypeScript/issues/41684\n        this.contextCallbacks.forEach(cb => cb(currentWin));\n      }\n      // we need this delay because few iframes stacked one in another with rapid updates will break the player (or browser engine rather?)\n    }, 100));\n    iframe.addEventListener('load', handle); // why app.attachEventListener not working?\n    handle();\n  }\n  handleShadowRoot(shRoot) {\n    const observer = new ShadowRootObserver(this.app);\n    this.shadowRootObservers.push(observer);\n    observer.observe(shRoot.host);\n  }\n  observe() {\n    // Protection from several subsequent calls?\n    const observer = this;\n    Element.prototype.attachShadow = function () {\n      // eslint-disable-next-line\n      const shadow = attachShadowNativeFn.apply(this, arguments);\n      observer.handleShadowRoot(shadow);\n      return shadow;\n    };\n    // Can observe documentElement (<html>) here, because it is not supposed to be changing.\n    // However, it is possible in some exotic cases and may cause an ignorance of the newly created <html>\n    // In this case context.document have to be observed, but this will cause\n    // the change in the re-player behaviour caused by CreateDocument message:\n    //   the 0-node (\"fRoot\") will become #document rather than documentElement as it is now.\n    // Alternatively - observe(#document) then bindNode(documentElement)\n    this.observeRoot(window.document, () => {\n      this.app.send(CreateDocument());\n      // it has no node_id here\n      this.app.nodes.callNodeCallbacks(document, true);\n    }, window.document.documentElement);\n  }\n  disconnect() {\n    this.iframeOffsets.clear();\n    Element.prototype.attachShadow = attachShadowNativeFn;\n    this.iframeObservers.forEach(o => o.disconnect());\n    this.iframeObservers = [];\n    this.shadowRootObservers.forEach(o => o.disconnect());\n    this.shadowRootObservers = [];\n    super.disconnect();\n  }\n}","map":{"version":3,"names":["Observer","isElementNode","hasTag","IFrameObserver","ShadowRootObserver","IFrameOffsets","CreateDocument","IN_BROWSER","hasOpenreplayAttribute","canAccessIframe","attachShadowNativeFn","Element","prototype","attachShadow","ShadowRoot","TopObserver","constructor","app","options","iframeOffsets","contextCallbacks","contextsSet","Set","iframeObservers","shadowRootObservers","Object","assign","captureIFrames","nodes","attachNodeCallback","node","handleIframe","shadowRoot","handleShadowRoot","attachContextCallback","cb","push","getDocumentOffset","doc","iframe","handle","safe","setTimeout","id","getID","undefined","currentWin","contentWindow","currentDoc","contentDocument","observer","observe","window","has","add","forEach","addEventListener","shRoot","host","shadow","apply","arguments","observeRoot","document","send","callNodeCallbacks","documentElement","disconnect","clear","o"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/lib/app/observer/top_observer.js"],"sourcesContent":["import Observer from './observer.js';\nimport { isElementNode, hasTag } from '../guards.js';\nimport IFrameObserver from './iframe_observer.js';\nimport ShadowRootObserver from './shadow_root_observer.js';\nimport IFrameOffsets from './iframe_offsets.js';\nimport { CreateDocument } from '../messages.gen.js';\nimport { IN_BROWSER, hasOpenreplayAttribute, canAccessIframe } from '../../utils.js';\nconst attachShadowNativeFn = IN_BROWSER ? Element.prototype.attachShadow : () => new ShadowRoot();\nexport default class TopObserver extends Observer {\n    constructor(app, options) {\n        super(app, true);\n        this.iframeOffsets = new IFrameOffsets();\n        this.contextCallbacks = [];\n        // Attached once per Tracker instance\n        this.contextsSet = new Set();\n        this.iframeObservers = [];\n        this.shadowRootObservers = [];\n        this.options = Object.assign({\n            captureIFrames: true,\n        }, options);\n        // IFrames\n        this.app.nodes.attachNodeCallback((node) => {\n            if (hasTag(node, 'iframe') &&\n                ((this.options.captureIFrames && !hasOpenreplayAttribute(node, 'obscured')) ||\n                    hasOpenreplayAttribute(node, 'capture'))) {\n                this.handleIframe(node);\n            }\n        });\n        // ShadowDOM\n        this.app.nodes.attachNodeCallback((node) => {\n            if (isElementNode(node) && node.shadowRoot !== null) {\n                this.handleShadowRoot(node.shadowRoot);\n            }\n        });\n    }\n    attachContextCallback(cb) {\n        this.contextCallbacks.push(cb);\n    }\n    getDocumentOffset(doc) {\n        return this.iframeOffsets.getDocumentOffset(doc);\n    }\n    handleIframe(iframe) {\n        let doc = null;\n        // setTimeout is required. Otherwise some event listeners (scroll, mousemove) applied in modules\n        //     do not work on the iframe document when it 've been loaded dynamically ((why?))\n        const handle = this.app.safe(() => setTimeout(() => {\n            const id = this.app.nodes.getID(iframe);\n            if (id === undefined) {\n                //log\n                return;\n            }\n            if (!canAccessIframe(iframe))\n                return;\n            const currentWin = iframe.contentWindow;\n            const currentDoc = iframe.contentDocument;\n            if (currentDoc && currentDoc !== doc) {\n                const observer = new IFrameObserver(this.app);\n                this.iframeObservers.push(observer);\n                observer.observe(iframe); // TODO: call unregisterNode for the previous doc if present (incapsulate: one iframe - one observer)\n                doc = currentDoc;\n                this.iframeOffsets.observe(iframe);\n            }\n            if (currentWin &&\n                // Sometimes currentWin.window is null (not in specification). Such window object is not functional\n                currentWin === currentWin.window &&\n                !this.contextsSet.has(currentWin) // for each context callbacks called once per Tracker (TopObserver) instance\n            //TODO: more explicit logic\n            ) {\n                this.contextsSet.add(currentWin);\n                //@ts-ignore https://github.com/microsoft/TypeScript/issues/41684\n                this.contextCallbacks.forEach((cb) => cb(currentWin));\n            }\n            // we need this delay because few iframes stacked one in another with rapid updates will break the player (or browser engine rather?)\n        }, 100));\n        iframe.addEventListener('load', handle); // why app.attachEventListener not working?\n        handle();\n    }\n    handleShadowRoot(shRoot) {\n        const observer = new ShadowRootObserver(this.app);\n        this.shadowRootObservers.push(observer);\n        observer.observe(shRoot.host);\n    }\n    observe() {\n        // Protection from several subsequent calls?\n        const observer = this;\n        Element.prototype.attachShadow = function () {\n            // eslint-disable-next-line\n            const shadow = attachShadowNativeFn.apply(this, arguments);\n            observer.handleShadowRoot(shadow);\n            return shadow;\n        };\n        // Can observe documentElement (<html>) here, because it is not supposed to be changing.\n        // However, it is possible in some exotic cases and may cause an ignorance of the newly created <html>\n        // In this case context.document have to be observed, but this will cause\n        // the change in the re-player behaviour caused by CreateDocument message:\n        //   the 0-node (\"fRoot\") will become #document rather than documentElement as it is now.\n        // Alternatively - observe(#document) then bindNode(documentElement)\n        this.observeRoot(window.document, () => {\n            this.app.send(CreateDocument());\n            // it has no node_id here\n            this.app.nodes.callNodeCallbacks(document, true);\n        }, window.document.documentElement);\n    }\n    disconnect() {\n        this.iframeOffsets.clear();\n        Element.prototype.attachShadow = attachShadowNativeFn;\n        this.iframeObservers.forEach((o) => o.disconnect());\n        this.iframeObservers = [];\n        this.shadowRootObservers.forEach((o) => o.disconnect());\n        this.shadowRootObservers = [];\n        super.disconnect();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}