{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringWiper = exports.SanitizeLevel = void 0;\nconst utils_js_1 = require(\"../utils.js\");\nconst guards_js_1 = require(\"./guards.js\");\nvar SanitizeLevel;\n(function (SanitizeLevel) {\n  SanitizeLevel[SanitizeLevel[\"Plain\"] = 0] = \"Plain\";\n  SanitizeLevel[SanitizeLevel[\"Obscured\"] = 1] = \"Obscured\";\n  SanitizeLevel[SanitizeLevel[\"Hidden\"] = 2] = \"Hidden\";\n})(SanitizeLevel = exports.SanitizeLevel || (exports.SanitizeLevel = {}));\nconst stringWiper = input => input.trim().replace(/[^\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]/g, '█');\nexports.stringWiper = stringWiper;\nclass Sanitizer {\n  constructor(app, options) {\n    this.app = app;\n    this.obscured = new Set();\n    this.hidden = new Set();\n    this.options = Object.assign({\n      obscureTextEmails: true,\n      obscureTextNumbers: false\n    }, options);\n  }\n  handleNode(id, parentID, node) {\n    if (this.obscured.has(parentID) || (0, guards_js_1.isElementNode)(node) && ((0, utils_js_1.hasOpenreplayAttribute)(node, 'masked') || (0, utils_js_1.hasOpenreplayAttribute)(node, 'obscured'))) {\n      this.obscured.add(id);\n    }\n    if (this.hidden.has(parentID) || (0, guards_js_1.isElementNode)(node) && ((0, utils_js_1.hasOpenreplayAttribute)(node, 'htmlmasked') || (0, utils_js_1.hasOpenreplayAttribute)(node, 'hidden'))) {\n      this.hidden.add(id);\n    }\n    if (this.options.domSanitizer !== undefined && (0, guards_js_1.isElementNode)(node)) {\n      const sanitizeLevel = this.options.domSanitizer(node);\n      if (sanitizeLevel === SanitizeLevel.Obscured) {\n        this.obscured.add(id);\n      }\n      if (sanitizeLevel === SanitizeLevel.Hidden) {\n        this.hidden.add(id);\n      }\n    }\n  }\n  sanitize(id, data) {\n    if (this.obscured.has(id)) {\n      // TODO: is it the best place to put trim() ? Might trimmed spaces be considered in layout in certain cases?\n      return (0, exports.stringWiper)(data);\n    }\n    if (this.options.obscureTextNumbers) {\n      data = data.replace(/\\d/g, '0');\n    }\n    if (this.options.obscureTextEmails) {\n      data = data.replace(/^\\w+([.-]\\w+)*@\\w+([.-]\\w+)*\\.\\w{2,3}$/g, email => {\n        const [name, domain] = email.split('@');\n        const [domainName, host] = domain.split('.');\n        return `${(0, utils_js_1.stars)(name)}@${(0, utils_js_1.stars)(domainName)}.${(0, utils_js_1.stars)(host)}`;\n      });\n    }\n    return data;\n  }\n  isObscured(id) {\n    return this.obscured.has(id);\n  }\n  isHidden(id) {\n    return this.hidden.has(id);\n  }\n  getInnerTextSecure(el) {\n    const id = this.app.nodes.getID(el);\n    if (!id) {\n      return '';\n    }\n    return this.sanitize(id, el.innerText);\n  }\n  clear() {\n    this.obscured.clear();\n    this.hidden.clear();\n  }\n}\nexports.default = Sanitizer;","map":{"version":3,"names":["Object","defineProperty","exports","value","stringWiper","SanitizeLevel","utils_js_1","require","guards_js_1","input","trim","replace","Sanitizer","constructor","app","options","obscured","Set","hidden","assign","obscureTextEmails","obscureTextNumbers","handleNode","id","parentID","node","has","isElementNode","hasOpenreplayAttribute","add","domSanitizer","undefined","sanitizeLevel","Obscured","Hidden","sanitize","data","email","name","domain","split","domainName","host","stars","isObscured","isHidden","getInnerTextSecure","el","nodes","getID","innerText","clear","default"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/cjs/app/sanitizer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringWiper = exports.SanitizeLevel = void 0;\nconst utils_js_1 = require(\"../utils.js\");\nconst guards_js_1 = require(\"./guards.js\");\nvar SanitizeLevel;\n(function (SanitizeLevel) {\n    SanitizeLevel[SanitizeLevel[\"Plain\"] = 0] = \"Plain\";\n    SanitizeLevel[SanitizeLevel[\"Obscured\"] = 1] = \"Obscured\";\n    SanitizeLevel[SanitizeLevel[\"Hidden\"] = 2] = \"Hidden\";\n})(SanitizeLevel = exports.SanitizeLevel || (exports.SanitizeLevel = {}));\nconst stringWiper = (input) => input\n    .trim()\n    .replace(/[^\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]/g, '█');\nexports.stringWiper = stringWiper;\nclass Sanitizer {\n    constructor(app, options) {\n        this.app = app;\n        this.obscured = new Set();\n        this.hidden = new Set();\n        this.options = Object.assign({\n            obscureTextEmails: true,\n            obscureTextNumbers: false,\n        }, options);\n    }\n    handleNode(id, parentID, node) {\n        if (this.obscured.has(parentID) ||\n            ((0, guards_js_1.isElementNode)(node) &&\n                ((0, utils_js_1.hasOpenreplayAttribute)(node, 'masked') || (0, utils_js_1.hasOpenreplayAttribute)(node, 'obscured')))) {\n            this.obscured.add(id);\n        }\n        if (this.hidden.has(parentID) ||\n            ((0, guards_js_1.isElementNode)(node) &&\n                ((0, utils_js_1.hasOpenreplayAttribute)(node, 'htmlmasked') || (0, utils_js_1.hasOpenreplayAttribute)(node, 'hidden')))) {\n            this.hidden.add(id);\n        }\n        if (this.options.domSanitizer !== undefined && (0, guards_js_1.isElementNode)(node)) {\n            const sanitizeLevel = this.options.domSanitizer(node);\n            if (sanitizeLevel === SanitizeLevel.Obscured) {\n                this.obscured.add(id);\n            }\n            if (sanitizeLevel === SanitizeLevel.Hidden) {\n                this.hidden.add(id);\n            }\n        }\n    }\n    sanitize(id, data) {\n        if (this.obscured.has(id)) {\n            // TODO: is it the best place to put trim() ? Might trimmed spaces be considered in layout in certain cases?\n            return (0, exports.stringWiper)(data);\n        }\n        if (this.options.obscureTextNumbers) {\n            data = data.replace(/\\d/g, '0');\n        }\n        if (this.options.obscureTextEmails) {\n            data = data.replace(/^\\w+([.-]\\w+)*@\\w+([.-]\\w+)*\\.\\w{2,3}$/g, (email) => {\n                const [name, domain] = email.split('@');\n                const [domainName, host] = domain.split('.');\n                return `${(0, utils_js_1.stars)(name)}@${(0, utils_js_1.stars)(domainName)}.${(0, utils_js_1.stars)(host)}`;\n            });\n        }\n        return data;\n    }\n    isObscured(id) {\n        return this.obscured.has(id);\n    }\n    isHidden(id) {\n        return this.hidden.has(id);\n    }\n    getInnerTextSecure(el) {\n        const id = this.app.nodes.getID(el);\n        if (!id) {\n            return '';\n        }\n        return this.sanitize(id, el.innerText);\n    }\n    clear() {\n        this.obscured.clear();\n        this.hidden.clear();\n    }\n}\nexports.default = Sanitizer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}