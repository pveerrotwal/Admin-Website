{"ast":null,"code":"import { isDocument } from '../app/guards.js';\nimport { LoadFontFace } from '../app/messages.gen.js';\nexport default function (app) {\n  if (!window.FontFace) {\n    return;\n  }\n  const docFonts = new Map();\n  const patchWindow = wnd => {\n    class FontFaceInterceptor extends wnd.FontFace {\n      constructor(...args) {\n        //maybe do this on load(). In this case check if the document.fonts.load(...) function calls the font's load()\n        if (typeof args[1] === 'string') {\n          let desc = '';\n          if (args[2]) {\n            app.safe(() => {\n              desc = JSON.stringify(args[2]);\n            });\n          }\n          const ffData = [args[0], args[1], desc];\n          const ffDataArr = docFonts.get(wnd.document) || [];\n          ffDataArr.push(ffData);\n          docFonts.set(wnd.document, ffDataArr);\n          const parentID = wnd === window ? 0 : app.nodes.getID(wnd.document);\n          if (parentID === undefined) {\n            return;\n          }\n          if (app.active()) {\n            app.send(LoadFontFace(parentID, ...ffData));\n          }\n        }\n        super(...args);\n      }\n    }\n    wnd.FontFace = FontFaceInterceptor;\n  };\n  app.observer.attachContextCallback(patchWindow);\n  patchWindow(window);\n  app.nodes.attachNodeCallback(app.safe(node => {\n    if (!isDocument(node)) {\n      return;\n    }\n    const ffDataArr = docFonts.get(node);\n    if (!ffDataArr) {\n      return;\n    }\n    const parentID = node.defaultView === window ? 0 : app.nodes.getID(node);\n    if (parentID === undefined) {\n      return;\n    }\n    ffDataArr.forEach(ffData => {\n      app.send(LoadFontFace(parentID, ...ffData));\n    });\n  }));\n}","map":{"version":3,"names":["isDocument","LoadFontFace","app","window","FontFace","docFonts","Map","patchWindow","wnd","FontFaceInterceptor","constructor","args","desc","safe","JSON","stringify","ffData","ffDataArr","get","document","push","set","parentID","nodes","getID","undefined","active","send","observer","attachContextCallback","attachNodeCallback","node","defaultView","forEach"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/lib/modules/fonts.js"],"sourcesContent":["import { isDocument } from '../app/guards.js';\nimport { LoadFontFace } from '../app/messages.gen.js';\nexport default function (app) {\n    if (!window.FontFace) {\n        return;\n    }\n    const docFonts = new Map();\n    const patchWindow = (wnd) => {\n        class FontFaceInterceptor extends wnd.FontFace {\n            constructor(...args) {\n                //maybe do this on load(). In this case check if the document.fonts.load(...) function calls the font's load()\n                if (typeof args[1] === 'string') {\n                    let desc = '';\n                    if (args[2]) {\n                        app.safe(() => {\n                            desc = JSON.stringify(args[2]);\n                        });\n                    }\n                    const ffData = [args[0], args[1], desc];\n                    const ffDataArr = docFonts.get(wnd.document) || [];\n                    ffDataArr.push(ffData);\n                    docFonts.set(wnd.document, ffDataArr);\n                    const parentID = wnd === window ? 0 : app.nodes.getID(wnd.document);\n                    if (parentID === undefined) {\n                        return;\n                    }\n                    if (app.active()) {\n                        app.send(LoadFontFace(parentID, ...ffData));\n                    }\n                }\n                super(...args);\n            }\n        }\n        wnd.FontFace = FontFaceInterceptor;\n    };\n    app.observer.attachContextCallback(patchWindow);\n    patchWindow(window);\n    app.nodes.attachNodeCallback(app.safe((node) => {\n        if (!isDocument(node)) {\n            return;\n        }\n        const ffDataArr = docFonts.get(node);\n        if (!ffDataArr) {\n            return;\n        }\n        const parentID = node.defaultView === window ? 0 : app.nodes.getID(node);\n        if (parentID === undefined) {\n            return;\n        }\n        ffDataArr.forEach((ffData) => {\n            app.send(LoadFontFace(parentID, ...ffData));\n        });\n    }));\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,YAAY,QAAQ,wBAAwB;AACrD,eAAe,UAAUC,GAAG,EAAE;EAC1B,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE;IAClB;EACJ;EACA,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC1B,MAAMC,WAAW,GAAIC,GAAG,IAAK;IACzB,MAAMC,mBAAmB,SAASD,GAAG,CAACJ,QAAQ,CAAC;MAC3CM,WAAWA,CAAC,GAAGC,IAAI,EAAE;QACjB;QACA,IAAI,OAAOA,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;UAC7B,IAAIC,IAAI,GAAG,EAAE;UACb,IAAID,IAAI,CAAC,CAAC,CAAC,EAAE;YACTT,GAAG,CAACW,IAAI,CAAC,MAAM;cACXD,IAAI,GAAGE,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC;YAClC,CAAC,CAAC;UACN;UACA,MAAMK,MAAM,GAAG,CAACL,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEC,IAAI,CAAC;UACvC,MAAMK,SAAS,GAAGZ,QAAQ,CAACa,GAAG,CAACV,GAAG,CAACW,QAAQ,CAAC,IAAI,EAAE;UAClDF,SAAS,CAACG,IAAI,CAACJ,MAAM,CAAC;UACtBX,QAAQ,CAACgB,GAAG,CAACb,GAAG,CAACW,QAAQ,EAAEF,SAAS,CAAC;UACrC,MAAMK,QAAQ,GAAGd,GAAG,KAAKL,MAAM,GAAG,CAAC,GAAGD,GAAG,CAACqB,KAAK,CAACC,KAAK,CAAChB,GAAG,CAACW,QAAQ,CAAC;UACnE,IAAIG,QAAQ,KAAKG,SAAS,EAAE;YACxB;UACJ;UACA,IAAIvB,GAAG,CAACwB,MAAM,CAAC,CAAC,EAAE;YACdxB,GAAG,CAACyB,IAAI,CAAC1B,YAAY,CAACqB,QAAQ,EAAE,GAAGN,MAAM,CAAC,CAAC;UAC/C;QACJ;QACA,KAAK,CAAC,GAAGL,IAAI,CAAC;MAClB;IACJ;IACAH,GAAG,CAACJ,QAAQ,GAAGK,mBAAmB;EACtC,CAAC;EACDP,GAAG,CAAC0B,QAAQ,CAACC,qBAAqB,CAACtB,WAAW,CAAC;EAC/CA,WAAW,CAACJ,MAAM,CAAC;EACnBD,GAAG,CAACqB,KAAK,CAACO,kBAAkB,CAAC5B,GAAG,CAACW,IAAI,CAAEkB,IAAI,IAAK;IAC5C,IAAI,CAAC/B,UAAU,CAAC+B,IAAI,CAAC,EAAE;MACnB;IACJ;IACA,MAAMd,SAAS,GAAGZ,QAAQ,CAACa,GAAG,CAACa,IAAI,CAAC;IACpC,IAAI,CAACd,SAAS,EAAE;MACZ;IACJ;IACA,MAAMK,QAAQ,GAAGS,IAAI,CAACC,WAAW,KAAK7B,MAAM,GAAG,CAAC,GAAGD,GAAG,CAACqB,KAAK,CAACC,KAAK,CAACO,IAAI,CAAC;IACxE,IAAIT,QAAQ,KAAKG,SAAS,EAAE;MACxB;IACJ;IACAR,SAAS,CAACgB,OAAO,CAAEjB,MAAM,IAAK;MAC1Bd,GAAG,CAACyB,IAAI,CAAC1B,YAAY,CAACqB,QAAQ,EAAE,GAAGN,MAAM,CAAC,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC,CAAC,CAAC;AACP"},"metadata":{},"sourceType":"module"}