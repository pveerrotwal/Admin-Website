{"ast":null,"code":"import { IN_BROWSER } from '../utils.js';\nimport { ConsoleLog } from '../app/messages.gen.js';\nconst printError = IN_BROWSER && 'InstallTrigger' in window // detect Firefox\n? e => e.message + '\\n' + e.stack : e => e.stack || e.message;\nfunction printString(arg) {\n  if (arg === undefined) {\n    return 'undefined';\n  }\n  if (arg === null) {\n    return 'null';\n  }\n  if (arg instanceof Error) {\n    return printError(arg);\n  }\n  if (Array.isArray(arg)) {\n    return `Array(${arg.length})`;\n  }\n  return String(arg);\n}\nfunction printFloat(arg) {\n  if (typeof arg !== 'number') return 'NaN';\n  return arg.toString();\n}\nfunction printInt(arg) {\n  if (typeof arg !== 'number') return 'NaN';\n  return Math.floor(arg).toString();\n}\nfunction printObject(arg) {\n  if (arg === undefined) {\n    return 'undefined';\n  }\n  if (arg === null) {\n    return 'null';\n  }\n  if (arg instanceof Error) {\n    return printError(arg);\n  }\n  if (Array.isArray(arg)) {\n    const length = arg.length;\n    const values = arg.slice(0, 10).map(printString).join(', ');\n    return `Array(${length})[${values}]`;\n  }\n  if (typeof arg === 'object') {\n    const res = [];\n    let i = 0;\n    for (const k in arg) {\n      if (++i === 10) {\n        break;\n      }\n      const v = arg[k];\n      res.push(k + ': ' + printString(v));\n    }\n    return '{' + res.join(', ') + '}';\n  }\n  return arg.toString();\n}\nfunction printf(args) {\n  if (typeof args[0] === 'string') {\n    args.unshift(args.shift().replace(/%(o|s|f|d|i)/g, (s, t) => {\n      const arg = args.shift();\n      if (arg === undefined) return s;\n      switch (t) {\n        case 'o':\n          return printObject(arg);\n        case 's':\n          return printString(arg);\n        case 'f':\n          return printFloat(arg);\n        case 'd':\n        case 'i':\n          return printInt(arg);\n        default:\n          return s;\n      }\n    }));\n  }\n  return args.map(printObject).join(' ');\n}\nconst consoleMethods = ['log', 'info', 'warn', 'error', 'debug', 'assert'];\nexport default function (app, opts) {\n  const options = Object.assign({\n    consoleMethods,\n    consoleThrottling: 30\n  }, opts);\n  if (!Array.isArray(options.consoleMethods) || options.consoleMethods.length === 0) {\n    return;\n  }\n  const sendConsoleLog = app.safe((level, args) => app.send(ConsoleLog(level, printf(args))));\n  let n = 0;\n  const reset = () => {\n    n = 0;\n  };\n  app.attachStartCallback(reset);\n  app.ticker.attach(reset, 33, false);\n  const patchConsole = (console, ctx) => {\n    const handler = {\n      apply: function (target, thisArg, argumentsList) {\n        Reflect.apply(target, ctx, argumentsList);\n        n = n + 1;\n        if (n > options.consoleThrottling) {\n          return;\n        } else {\n          sendConsoleLog(target.name, argumentsList);\n        }\n      }\n    };\n    options.consoleMethods.forEach(method => {\n      if (consoleMethods.indexOf(method) === -1) {\n        app.debug.error(`OpenReplay: unsupported console method \"${method}\"`);\n        return;\n      }\n      const fn = ctx.console[method];\n      console[method] = new Proxy(fn, handler);\n    });\n  };\n  const patchContext = app.safe(context => patchConsole(context.console, context));\n  patchContext(window);\n  app.observer.attachContextCallback(patchContext);\n}","map":{"version":3,"names":["IN_BROWSER","ConsoleLog","printError","window","e","message","stack","printString","arg","undefined","Error","Array","isArray","length","String","printFloat","toString","printInt","Math","floor","printObject","values","slice","map","join","res","i","k","v","push","printf","args","unshift","shift","replace","s","t","consoleMethods","app","opts","options","Object","assign","consoleThrottling","sendConsoleLog","safe","level","send","n","reset","attachStartCallback","ticker","attach","patchConsole","console","ctx","handler","apply","target","thisArg","argumentsList","Reflect","name","forEach","method","indexOf","debug","error","fn","Proxy","patchContext","context","observer","attachContextCallback"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/lib/modules/console.js"],"sourcesContent":["import { IN_BROWSER } from '../utils.js';\nimport { ConsoleLog } from '../app/messages.gen.js';\nconst printError = IN_BROWSER && 'InstallTrigger' in window // detect Firefox\n    ? (e) => e.message + '\\n' + e.stack\n    : (e) => e.stack || e.message;\nfunction printString(arg) {\n    if (arg === undefined) {\n        return 'undefined';\n    }\n    if (arg === null) {\n        return 'null';\n    }\n    if (arg instanceof Error) {\n        return printError(arg);\n    }\n    if (Array.isArray(arg)) {\n        return `Array(${arg.length})`;\n    }\n    return String(arg);\n}\nfunction printFloat(arg) {\n    if (typeof arg !== 'number')\n        return 'NaN';\n    return arg.toString();\n}\nfunction printInt(arg) {\n    if (typeof arg !== 'number')\n        return 'NaN';\n    return Math.floor(arg).toString();\n}\nfunction printObject(arg) {\n    if (arg === undefined) {\n        return 'undefined';\n    }\n    if (arg === null) {\n        return 'null';\n    }\n    if (arg instanceof Error) {\n        return printError(arg);\n    }\n    if (Array.isArray(arg)) {\n        const length = arg.length;\n        const values = arg.slice(0, 10).map(printString).join(', ');\n        return `Array(${length})[${values}]`;\n    }\n    if (typeof arg === 'object') {\n        const res = [];\n        let i = 0;\n        for (const k in arg) {\n            if (++i === 10) {\n                break;\n            }\n            const v = arg[k];\n            res.push(k + ': ' + printString(v));\n        }\n        return '{' + res.join(', ') + '}';\n    }\n    return arg.toString();\n}\nfunction printf(args) {\n    if (typeof args[0] === 'string') {\n        args.unshift(args.shift().replace(/%(o|s|f|d|i)/g, (s, t) => {\n            const arg = args.shift();\n            if (arg === undefined)\n                return s;\n            switch (t) {\n                case 'o':\n                    return printObject(arg);\n                case 's':\n                    return printString(arg);\n                case 'f':\n                    return printFloat(arg);\n                case 'd':\n                case 'i':\n                    return printInt(arg);\n                default:\n                    return s;\n            }\n        }));\n    }\n    return args.map(printObject).join(' ');\n}\nconst consoleMethods = ['log', 'info', 'warn', 'error', 'debug', 'assert'];\nexport default function (app, opts) {\n    const options = Object.assign({\n        consoleMethods,\n        consoleThrottling: 30,\n    }, opts);\n    if (!Array.isArray(options.consoleMethods) || options.consoleMethods.length === 0) {\n        return;\n    }\n    const sendConsoleLog = app.safe((level, args) => app.send(ConsoleLog(level, printf(args))));\n    let n = 0;\n    const reset = () => {\n        n = 0;\n    };\n    app.attachStartCallback(reset);\n    app.ticker.attach(reset, 33, false);\n    const patchConsole = (console, ctx) => {\n        const handler = {\n            apply: function (target, thisArg, argumentsList) {\n                Reflect.apply(target, ctx, argumentsList);\n                n = n + 1;\n                if (n > options.consoleThrottling) {\n                    return;\n                }\n                else {\n                    sendConsoleLog(target.name, argumentsList);\n                }\n            },\n        };\n        options.consoleMethods.forEach((method) => {\n            if (consoleMethods.indexOf(method) === -1) {\n                app.debug.error(`OpenReplay: unsupported console method \"${method}\"`);\n                return;\n            }\n            const fn = ctx.console[method];\n            console[method] = new Proxy(fn, handler);\n        });\n    };\n    const patchContext = app.safe((context) => patchConsole(context.console, context));\n    patchContext(window);\n    app.observer.attachContextCallback(patchContext);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}