{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst observer_js_1 = __importDefault(require(\"./observer.js\"));\nconst messages_gen_js_1 = require(\"../messages.gen.js\");\nclass IFrameObserver extends observer_js_1.default {\n  observe(iframe) {\n    const doc = iframe.contentDocument;\n    const hostID = this.app.nodes.getID(iframe);\n    if (!doc || hostID === undefined) {\n      return;\n    } //log TODO common app.logger\n    // Have to observe document, because the inner <html> might be changed\n    this.observeRoot(doc, docID => {\n      //MBTODO: do not send if empty (send on load? it might be in-place iframe, like our replayer, which does not get loaded)\n      if (docID === undefined) {\n        this.app.debug.log('OpenReplay: Iframe document not bound');\n        return;\n      }\n      this.app.send((0, messages_gen_js_1.CreateIFrameDocument)(hostID, docID));\n    });\n  }\n}\nexports.default = IFrameObserver;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","observer_js_1","require","messages_gen_js_1","IFrameObserver","default","observe","iframe","doc","contentDocument","hostID","app","nodes","getID","undefined","observeRoot","docID","debug","log","send","CreateIFrameDocument"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/cjs/app/observer/iframe_observer.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst observer_js_1 = __importDefault(require(\"./observer.js\"));\nconst messages_gen_js_1 = require(\"../messages.gen.js\");\nclass IFrameObserver extends observer_js_1.default {\n    observe(iframe) {\n        const doc = iframe.contentDocument;\n        const hostID = this.app.nodes.getID(iframe);\n        if (!doc || hostID === undefined) {\n            return;\n        } //log TODO common app.logger\n        // Have to observe document, because the inner <html> might be changed\n        this.observeRoot(doc, (docID) => {\n            //MBTODO: do not send if empty (send on load? it might be in-place iframe, like our replayer, which does not get loaded)\n            if (docID === undefined) {\n                this.app.debug.log('OpenReplay: Iframe document not bound');\n                return;\n            }\n            this.app.send((0, messages_gen_js_1.CreateIFrameDocument)(hostID, docID));\n        });\n    }\n}\nexports.default = IFrameObserver;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,aAAa,GAAGP,eAAe,CAACQ,OAAO,CAAC,eAAe,CAAC,CAAC;AAC/D,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AACvD,MAAME,cAAc,SAASH,aAAa,CAACI,OAAO,CAAC;EAC/CC,OAAOA,CAACC,MAAM,EAAE;IACZ,MAAMC,GAAG,GAAGD,MAAM,CAACE,eAAe;IAClC,MAAMC,MAAM,GAAG,IAAI,CAACC,GAAG,CAACC,KAAK,CAACC,KAAK,CAACN,MAAM,CAAC;IAC3C,IAAI,CAACC,GAAG,IAAIE,MAAM,KAAKI,SAAS,EAAE;MAC9B;IACJ,CAAC,CAAC;IACF;IACA,IAAI,CAACC,WAAW,CAACP,GAAG,EAAGQ,KAAK,IAAK;MAC7B;MACA,IAAIA,KAAK,KAAKF,SAAS,EAAE;QACrB,IAAI,CAACH,GAAG,CAACM,KAAK,CAACC,GAAG,CAAC,uCAAuC,CAAC;QAC3D;MACJ;MACA,IAAI,CAACP,GAAG,CAACQ,IAAI,CAAC,CAAC,CAAC,EAAEhB,iBAAiB,CAACiB,oBAAoB,EAAEV,MAAM,EAAEM,KAAK,CAAC,CAAC;IAC7E,CAAC,CAAC;EACN;AACJ;AACAjB,OAAO,CAACM,OAAO,GAAGD,cAAc"},"metadata":{},"sourceType":"script"}