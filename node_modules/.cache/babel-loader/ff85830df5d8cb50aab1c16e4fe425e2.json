{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst observer_js_1 = __importDefault(require(\"./observer.js\"));\nconst guards_js_1 = require(\"../guards.js\");\nconst iframe_observer_js_1 = __importDefault(require(\"./iframe_observer.js\"));\nconst shadow_root_observer_js_1 = __importDefault(require(\"./shadow_root_observer.js\"));\nconst iframe_offsets_js_1 = __importDefault(require(\"./iframe_offsets.js\"));\nconst messages_gen_js_1 = require(\"../messages.gen.js\");\nconst utils_js_1 = require(\"../../utils.js\");\nconst attachShadowNativeFn = utils_js_1.IN_BROWSER ? Element.prototype.attachShadow : () => new ShadowRoot();\nclass TopObserver extends observer_js_1.default {\n  constructor(app, options) {\n    super(app, true);\n    this.iframeOffsets = new iframe_offsets_js_1.default();\n    this.contextCallbacks = [];\n    // Attached once per Tracker instance\n    this.contextsSet = new Set();\n    this.iframeObservers = [];\n    this.shadowRootObservers = [];\n    this.options = Object.assign({\n      captureIFrames: true\n    }, options);\n    // IFrames\n    this.app.nodes.attachNodeCallback(node => {\n      if ((0, guards_js_1.hasTag)(node, 'iframe') && (this.options.captureIFrames && !(0, utils_js_1.hasOpenreplayAttribute)(node, 'obscured') || (0, utils_js_1.hasOpenreplayAttribute)(node, 'capture'))) {\n        this.handleIframe(node);\n      }\n    });\n    // ShadowDOM\n    this.app.nodes.attachNodeCallback(node => {\n      if ((0, guards_js_1.isElementNode)(node) && node.shadowRoot !== null) {\n        this.handleShadowRoot(node.shadowRoot);\n      }\n    });\n  }\n  attachContextCallback(cb) {\n    this.contextCallbacks.push(cb);\n  }\n  getDocumentOffset(doc) {\n    return this.iframeOffsets.getDocumentOffset(doc);\n  }\n  handleIframe(iframe) {\n    let doc = null;\n    // setTimeout is required. Otherwise some event listeners (scroll, mousemove) applied in modules\n    //     do not work on the iframe document when it 've been loaded dynamically ((why?))\n    const handle = this.app.safe(() => setTimeout(() => {\n      const id = this.app.nodes.getID(iframe);\n      if (id === undefined) {\n        //log\n        return;\n      }\n      if (!(0, utils_js_1.canAccessIframe)(iframe)) return;\n      const currentWin = iframe.contentWindow;\n      const currentDoc = iframe.contentDocument;\n      if (currentDoc && currentDoc !== doc) {\n        const observer = new iframe_observer_js_1.default(this.app);\n        this.iframeObservers.push(observer);\n        observer.observe(iframe); // TODO: call unregisterNode for the previous doc if present (incapsulate: one iframe - one observer)\n        doc = currentDoc;\n        this.iframeOffsets.observe(iframe);\n      }\n      if (currentWin &&\n      // Sometimes currentWin.window is null (not in specification). Such window object is not functional\n      currentWin === currentWin.window && !this.contextsSet.has(currentWin) // for each context callbacks called once per Tracker (TopObserver) instance\n      //TODO: more explicit logic\n      ) {\n        this.contextsSet.add(currentWin);\n        //@ts-ignore https://github.com/microsoft/TypeScript/issues/41684\n        this.contextCallbacks.forEach(cb => cb(currentWin));\n      }\n      // we need this delay because few iframes stacked one in another with rapid updates will break the player (or browser engine rather?)\n    }, 100));\n    iframe.addEventListener('load', handle); // why app.attachEventListener not working?\n    handle();\n  }\n  handleShadowRoot(shRoot) {\n    const observer = new shadow_root_observer_js_1.default(this.app);\n    this.shadowRootObservers.push(observer);\n    observer.observe(shRoot.host);\n  }\n  observe() {\n    // Protection from several subsequent calls?\n    const observer = this;\n    Element.prototype.attachShadow = function () {\n      // eslint-disable-next-line\n      const shadow = attachShadowNativeFn.apply(this, arguments);\n      observer.handleShadowRoot(shadow);\n      return shadow;\n    };\n    // Can observe documentElement (<html>) here, because it is not supposed to be changing.\n    // However, it is possible in some exotic cases and may cause an ignorance of the newly created <html>\n    // In this case context.document have to be observed, but this will cause\n    // the change in the re-player behaviour caused by CreateDocument message:\n    //   the 0-node (\"fRoot\") will become #document rather than documentElement as it is now.\n    // Alternatively - observe(#document) then bindNode(documentElement)\n    this.observeRoot(window.document, () => {\n      this.app.send((0, messages_gen_js_1.CreateDocument)());\n      // it has no node_id here\n      this.app.nodes.callNodeCallbacks(document, true);\n    }, window.document.documentElement);\n  }\n  disconnect() {\n    this.iframeOffsets.clear();\n    Element.prototype.attachShadow = attachShadowNativeFn;\n    this.iframeObservers.forEach(o => o.disconnect());\n    this.iframeObservers = [];\n    this.shadowRootObservers.forEach(o => o.disconnect());\n    this.shadowRootObservers = [];\n    super.disconnect();\n  }\n}\nexports.default = TopObserver;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","observer_js_1","require","guards_js_1","iframe_observer_js_1","shadow_root_observer_js_1","iframe_offsets_js_1","messages_gen_js_1","utils_js_1","attachShadowNativeFn","IN_BROWSER","Element","prototype","attachShadow","ShadowRoot","TopObserver","default","constructor","app","options","iframeOffsets","contextCallbacks","contextsSet","Set","iframeObservers","shadowRootObservers","assign","captureIFrames","nodes","attachNodeCallback","node","hasTag","hasOpenreplayAttribute","handleIframe","isElementNode","shadowRoot","handleShadowRoot","attachContextCallback","cb","push","getDocumentOffset","doc","iframe","handle","safe","setTimeout","id","getID","undefined","canAccessIframe","currentWin","contentWindow","currentDoc","contentDocument","observer","observe","window","has","add","forEach","addEventListener","shRoot","host","shadow","apply","arguments","observeRoot","document","send","CreateDocument","callNodeCallbacks","documentElement","disconnect","clear","o"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/cjs/app/observer/top_observer.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst observer_js_1 = __importDefault(require(\"./observer.js\"));\nconst guards_js_1 = require(\"../guards.js\");\nconst iframe_observer_js_1 = __importDefault(require(\"./iframe_observer.js\"));\nconst shadow_root_observer_js_1 = __importDefault(require(\"./shadow_root_observer.js\"));\nconst iframe_offsets_js_1 = __importDefault(require(\"./iframe_offsets.js\"));\nconst messages_gen_js_1 = require(\"../messages.gen.js\");\nconst utils_js_1 = require(\"../../utils.js\");\nconst attachShadowNativeFn = utils_js_1.IN_BROWSER ? Element.prototype.attachShadow : () => new ShadowRoot();\nclass TopObserver extends observer_js_1.default {\n    constructor(app, options) {\n        super(app, true);\n        this.iframeOffsets = new iframe_offsets_js_1.default();\n        this.contextCallbacks = [];\n        // Attached once per Tracker instance\n        this.contextsSet = new Set();\n        this.iframeObservers = [];\n        this.shadowRootObservers = [];\n        this.options = Object.assign({\n            captureIFrames: true,\n        }, options);\n        // IFrames\n        this.app.nodes.attachNodeCallback((node) => {\n            if ((0, guards_js_1.hasTag)(node, 'iframe') &&\n                ((this.options.captureIFrames && !(0, utils_js_1.hasOpenreplayAttribute)(node, 'obscured')) ||\n                    (0, utils_js_1.hasOpenreplayAttribute)(node, 'capture'))) {\n                this.handleIframe(node);\n            }\n        });\n        // ShadowDOM\n        this.app.nodes.attachNodeCallback((node) => {\n            if ((0, guards_js_1.isElementNode)(node) && node.shadowRoot !== null) {\n                this.handleShadowRoot(node.shadowRoot);\n            }\n        });\n    }\n    attachContextCallback(cb) {\n        this.contextCallbacks.push(cb);\n    }\n    getDocumentOffset(doc) {\n        return this.iframeOffsets.getDocumentOffset(doc);\n    }\n    handleIframe(iframe) {\n        let doc = null;\n        // setTimeout is required. Otherwise some event listeners (scroll, mousemove) applied in modules\n        //     do not work on the iframe document when it 've been loaded dynamically ((why?))\n        const handle = this.app.safe(() => setTimeout(() => {\n            const id = this.app.nodes.getID(iframe);\n            if (id === undefined) {\n                //log\n                return;\n            }\n            if (!(0, utils_js_1.canAccessIframe)(iframe))\n                return;\n            const currentWin = iframe.contentWindow;\n            const currentDoc = iframe.contentDocument;\n            if (currentDoc && currentDoc !== doc) {\n                const observer = new iframe_observer_js_1.default(this.app);\n                this.iframeObservers.push(observer);\n                observer.observe(iframe); // TODO: call unregisterNode for the previous doc if present (incapsulate: one iframe - one observer)\n                doc = currentDoc;\n                this.iframeOffsets.observe(iframe);\n            }\n            if (currentWin &&\n                // Sometimes currentWin.window is null (not in specification). Such window object is not functional\n                currentWin === currentWin.window &&\n                !this.contextsSet.has(currentWin) // for each context callbacks called once per Tracker (TopObserver) instance\n            //TODO: more explicit logic\n            ) {\n                this.contextsSet.add(currentWin);\n                //@ts-ignore https://github.com/microsoft/TypeScript/issues/41684\n                this.contextCallbacks.forEach((cb) => cb(currentWin));\n            }\n            // we need this delay because few iframes stacked one in another with rapid updates will break the player (or browser engine rather?)\n        }, 100));\n        iframe.addEventListener('load', handle); // why app.attachEventListener not working?\n        handle();\n    }\n    handleShadowRoot(shRoot) {\n        const observer = new shadow_root_observer_js_1.default(this.app);\n        this.shadowRootObservers.push(observer);\n        observer.observe(shRoot.host);\n    }\n    observe() {\n        // Protection from several subsequent calls?\n        const observer = this;\n        Element.prototype.attachShadow = function () {\n            // eslint-disable-next-line\n            const shadow = attachShadowNativeFn.apply(this, arguments);\n            observer.handleShadowRoot(shadow);\n            return shadow;\n        };\n        // Can observe documentElement (<html>) here, because it is not supposed to be changing.\n        // However, it is possible in some exotic cases and may cause an ignorance of the newly created <html>\n        // In this case context.document have to be observed, but this will cause\n        // the change in the re-player behaviour caused by CreateDocument message:\n        //   the 0-node (\"fRoot\") will become #document rather than documentElement as it is now.\n        // Alternatively - observe(#document) then bindNode(documentElement)\n        this.observeRoot(window.document, () => {\n            this.app.send((0, messages_gen_js_1.CreateDocument)());\n            // it has no node_id here\n            this.app.nodes.callNodeCallbacks(document, true);\n        }, window.document.documentElement);\n    }\n    disconnect() {\n        this.iframeOffsets.clear();\n        Element.prototype.attachShadow = attachShadowNativeFn;\n        this.iframeObservers.forEach((o) => o.disconnect());\n        this.iframeObservers = [];\n        this.shadowRootObservers.forEach((o) => o.disconnect());\n        this.shadowRootObservers = [];\n        super.disconnect();\n    }\n}\nexports.default = TopObserver;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}