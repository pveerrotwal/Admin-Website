{"ast":null,"code":"(function (root, factory) {\n  'use strict';\n\n  // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define('stackframe', [], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.StackFrame = factory();\n  }\n})(this, function () {\n  'use strict';\n\n  function _isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n  }\n  function _getter(p) {\n    return function () {\n      return this[p];\n    };\n  }\n  var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n  var numericProps = ['columnNumber', 'lineNumber'];\n  var stringProps = ['fileName', 'functionName', 'source'];\n  var arrayProps = ['args'];\n  var objectProps = ['evalOrigin'];\n  var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\n  function StackFrame(obj) {\n    if (!obj) return;\n    for (var i = 0; i < props.length; i++) {\n      if (obj[props[i]] !== undefined) {\n        this['set' + _capitalize(props[i])](obj[props[i]]);\n      }\n    }\n  }\n  StackFrame.prototype = {\n    getArgs: function () {\n      return this.args;\n    },\n    setArgs: function (v) {\n      if (Object.prototype.toString.call(v) !== '[object Array]') {\n        throw new TypeError('Args must be an Array');\n      }\n      this.args = v;\n    },\n    getEvalOrigin: function () {\n      return this.evalOrigin;\n    },\n    setEvalOrigin: function (v) {\n      if (v instanceof StackFrame) {\n        this.evalOrigin = v;\n      } else if (v instanceof Object) {\n        this.evalOrigin = new StackFrame(v);\n      } else {\n        throw new TypeError('Eval Origin must be an Object or StackFrame');\n      }\n    },\n    toString: function () {\n      var fileName = this.getFileName() || '';\n      var lineNumber = this.getLineNumber() || '';\n      var columnNumber = this.getColumnNumber() || '';\n      var functionName = this.getFunctionName() || '';\n      if (this.getIsEval()) {\n        if (fileName) {\n          return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n        }\n        return '[eval]:' + lineNumber + ':' + columnNumber;\n      }\n      if (functionName) {\n        return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n      }\n      return fileName + ':' + lineNumber + ':' + columnNumber;\n    }\n  };\n  StackFrame.fromString = function StackFrame$$fromString(str) {\n    var argsStartIndex = str.indexOf('(');\n    var argsEndIndex = str.lastIndexOf(')');\n    var functionName = str.substring(0, argsStartIndex);\n    var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n    var locationString = str.substring(argsEndIndex + 1);\n    if (locationString.indexOf('@') === 0) {\n      var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n      var fileName = parts[1];\n      var lineNumber = parts[2];\n      var columnNumber = parts[3];\n    }\n    return new StackFrame({\n      functionName: functionName,\n      args: args || undefined,\n      fileName: fileName,\n      lineNumber: lineNumber || undefined,\n      columnNumber: columnNumber || undefined\n    });\n  };\n  for (var i = 0; i < booleanProps.length; i++) {\n    StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n    StackFrame.prototype['set' + _capitalize(booleanProps[i])] = function (p) {\n      return function (v) {\n        this[p] = Boolean(v);\n      };\n    }(booleanProps[i]);\n  }\n  for (var j = 0; j < numericProps.length; j++) {\n    StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n    StackFrame.prototype['set' + _capitalize(numericProps[j])] = function (p) {\n      return function (v) {\n        if (!_isNumber(v)) {\n          throw new TypeError(p + ' must be a Number');\n        }\n        this[p] = Number(v);\n      };\n    }(numericProps[j]);\n  }\n  for (var k = 0; k < stringProps.length; k++) {\n    StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n    StackFrame.prototype['set' + _capitalize(stringProps[k])] = function (p) {\n      return function (v) {\n        this[p] = String(v);\n      };\n    }(stringProps[k]);\n  }\n  return StackFrame;\n});","map":{"version":3,"names":["root","factory","define","amd","exports","module","StackFrame","_isNumber","n","isNaN","parseFloat","isFinite","_capitalize","str","charAt","toUpperCase","substring","_getter","p","booleanProps","numericProps","stringProps","arrayProps","objectProps","props","concat","obj","i","length","undefined","prototype","getArgs","args","setArgs","v","Object","toString","call","TypeError","getEvalOrigin","evalOrigin","setEvalOrigin","fileName","getFileName","lineNumber","getLineNumber","columnNumber","getColumnNumber","functionName","getFunctionName","getIsEval","fromString","StackFrame$$fromString","argsStartIndex","indexOf","argsEndIndex","lastIndexOf","split","locationString","parts","exec","Boolean","j","Number","k","String"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/stackframe/stackframe.js"],"sourcesContent":["(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n    var objectProps = ['evalOrigin'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}