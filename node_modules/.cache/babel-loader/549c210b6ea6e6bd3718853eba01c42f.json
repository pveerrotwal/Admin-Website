{"ast":null,"code":"const DEPRECATED_ATTRS = {\n  htmlmasked: 'hidden',\n  masked: 'obscured'\n};\nexport const IN_BROWSER = !(typeof window === 'undefined');\nexport const IS_FIREFOX = IN_BROWSER && navigator.userAgent.match(/firefox|fxios/i);\nexport const MAX_STR_LEN = 1e5;\n// Buggy to use `performance.timeOrigin || performance.timing.navigationStart`\n// https://github.com/mdn/content/issues/4713\n// Maybe move to timer/ticker\nlet timeOrigin = IN_BROWSER ? Date.now() - performance.now() : 0;\nexport function adjustTimeOrigin() {\n  timeOrigin = Date.now() - performance.now();\n}\nexport function getTimeOrigin() {\n  return timeOrigin;\n}\nexport const now = IN_BROWSER && !!performance.now ? () => Math.round(performance.now() + timeOrigin) : () => Date.now();\nexport const stars = 'repeat' in String.prototype ? str => '*'.repeat(str.length) : str => str.replace(/./g, '*');\nexport function normSpaces(str) {\n  return str.trim().replace(/\\s+/g, ' ');\n}\n// isAbsoluteUrl regexp:  /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url)\nexport function isURL(s) {\n  return s.startsWith('https://') || s.startsWith('http://');\n}\n// TODO: JOIN IT WITH LOGGER somehow (use logging decorators?); Don't forget about index.js loggin when there is no logger instance.\nexport const DOCS_HOST = 'https://docs.openreplay.com';\nconst warnedFeatures = {};\nexport function deprecationWarn(nameOfFeature, useInstead, docsPath = '/') {\n  if (warnedFeatures[nameOfFeature]) {\n    return;\n  }\n  console.warn(`OpenReplay: ${nameOfFeature} is deprecated. ${useInstead ? `Please, use ${useInstead} instead.` : ''} Visit ${DOCS_HOST}${docsPath} for more information.`);\n  warnedFeatures[nameOfFeature] = true;\n}\nexport function getLabelAttribute(e) {\n  let value = e.getAttribute('data-openreplay-label');\n  if (value !== null) {\n    return value;\n  }\n  value = e.getAttribute('data-asayer-label');\n  if (value !== null) {\n    deprecationWarn('\"data-asayer-label\" attribute', '\"data-openreplay-label\" attribute', '/');\n  }\n  return value;\n}\nexport function hasOpenreplayAttribute(e, attr) {\n  const newName = `data-openreplay-${attr}`;\n  if (e.hasAttribute(newName)) {\n    // @ts-ignore\n    if (DEPRECATED_ATTRS[attr]) {\n      deprecationWarn(`\"${newName}\" attribute`,\n      // @ts-ignore\n      `\"${DEPRECATED_ATTRS[attr]}\" attribute`, '/installation/sanitize-data');\n    }\n    return true;\n  }\n  return false;\n}\n/**\n * checks if iframe is accessible\n **/\nexport function canAccessIframe(iframe) {\n  try {\n    return Boolean(iframe.contentDocument);\n  } catch (e) {\n    return false;\n  }\n}\nfunction dec2hex(dec) {\n  return dec.toString(16).padStart(2, '0');\n}\nexport function generateRandomId(len) {\n  const arr = new Uint8Array((len || 40) / 2);\n  // msCrypto = IE11\n  // @ts-ignore\n  const safeCrypto = window.crypto || window.msCrypto;\n  safeCrypto.getRandomValues(arr);\n  return Array.from(arr, dec2hex).join('');\n}\nexport function inIframe() {\n  try {\n    return window.self !== window.top;\n  } catch (e) {\n    return true;\n  }\n}\n/**\n * Because angular devs decided that its a good idea to override a browser apis\n * we need to use this to achieve safe behavior\n * */\nexport function ngSafeBrowserMethod(method) {\n  // @ts-ignore\n  return window.Zone && '__symbol__' in window.Zone ?\n  // @ts-ignore\n  window['Zone']['__symbol__'](method) : method;\n}\nexport function createMutationObserver(cb) {\n  const mObserver = ngSafeBrowserMethod('MutationObserver');\n  return new window[mObserver](cb);\n}\nexport function createEventListener(target, event, cb, capture) {\n  const safeAddEventListener = ngSafeBrowserMethod('addEventListener');\n  try {\n    target[safeAddEventListener](event, cb, capture);\n  } catch (e) {\n    console.debug(\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    `Openreplay: ${e.messages}; if this error is caused by an IframeObserver, ignore it`);\n  }\n}\nexport function deleteEventListener(target, event, cb, capture) {\n  const safeRemoveEventListener = ngSafeBrowserMethod('removeEventListener');\n  try {\n    target[safeRemoveEventListener](event, cb, capture);\n  } catch (e) {\n    console.debug(\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    `Openreplay: ${e.messages}; if this error is caused by an IframeObserver, ignore it`);\n  }\n}\n/**\n * This is a brief polyfill that suits our needs\n * I took inspiration from Microsoft Clarity polyfill on this one\n * then adapted it a little bit\n *\n * I'm very grateful for their bright idea\n * */\nexport function requestIdleCb(callback) {\n  const taskTimeout = 3000;\n  if (window.requestIdleCallback) {\n    return window.requestIdleCallback(callback, {\n      timeout: taskTimeout\n    });\n  } else {\n    const channel = new MessageChannel();\n    const incoming = channel.port1;\n    const outgoing = channel.port2;\n    incoming.onmessage = () => {\n      callback();\n    };\n    requestAnimationFrame(() => {\n      outgoing.postMessage(1);\n    });\n  }\n}","map":{"version":3,"names":["DEPRECATED_ATTRS","htmlmasked","masked","IN_BROWSER","window","IS_FIREFOX","navigator","userAgent","match","MAX_STR_LEN","timeOrigin","Date","now","performance","adjustTimeOrigin","getTimeOrigin","Math","round","stars","String","prototype","str","repeat","length","replace","normSpaces","trim","isURL","s","startsWith","DOCS_HOST","warnedFeatures","deprecationWarn","nameOfFeature","useInstead","docsPath","console","warn","getLabelAttribute","e","value","getAttribute","hasOpenreplayAttribute","attr","newName","hasAttribute","canAccessIframe","iframe","Boolean","contentDocument","dec2hex","dec","toString","padStart","generateRandomId","len","arr","Uint8Array","safeCrypto","crypto","msCrypto","getRandomValues","Array","from","join","inIframe","self","top","ngSafeBrowserMethod","method","Zone","createMutationObserver","cb","mObserver","createEventListener","target","event","capture","safeAddEventListener","debug","messages","deleteEventListener","safeRemoveEventListener","requestIdleCb","callback","taskTimeout","requestIdleCallback","timeout","channel","MessageChannel","incoming","port1","outgoing","port2","onmessage","requestAnimationFrame","postMessage"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/lib/utils.js"],"sourcesContent":["const DEPRECATED_ATTRS = { htmlmasked: 'hidden', masked: 'obscured' };\nexport const IN_BROWSER = !(typeof window === 'undefined');\nexport const IS_FIREFOX = IN_BROWSER && navigator.userAgent.match(/firefox|fxios/i);\nexport const MAX_STR_LEN = 1e5;\n// Buggy to use `performance.timeOrigin || performance.timing.navigationStart`\n// https://github.com/mdn/content/issues/4713\n// Maybe move to timer/ticker\nlet timeOrigin = IN_BROWSER ? Date.now() - performance.now() : 0;\nexport function adjustTimeOrigin() {\n    timeOrigin = Date.now() - performance.now();\n}\nexport function getTimeOrigin() {\n    return timeOrigin;\n}\nexport const now = IN_BROWSER && !!performance.now\n    ? () => Math.round(performance.now() + timeOrigin)\n    : () => Date.now();\nexport const stars = 'repeat' in String.prototype\n    ? (str) => '*'.repeat(str.length)\n    : (str) => str.replace(/./g, '*');\nexport function normSpaces(str) {\n    return str.trim().replace(/\\s+/g, ' ');\n}\n// isAbsoluteUrl regexp:  /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url)\nexport function isURL(s) {\n    return s.startsWith('https://') || s.startsWith('http://');\n}\n// TODO: JOIN IT WITH LOGGER somehow (use logging decorators?); Don't forget about index.js loggin when there is no logger instance.\nexport const DOCS_HOST = 'https://docs.openreplay.com';\nconst warnedFeatures = {};\nexport function deprecationWarn(nameOfFeature, useInstead, docsPath = '/') {\n    if (warnedFeatures[nameOfFeature]) {\n        return;\n    }\n    console.warn(`OpenReplay: ${nameOfFeature} is deprecated. ${useInstead ? `Please, use ${useInstead} instead.` : ''} Visit ${DOCS_HOST}${docsPath} for more information.`);\n    warnedFeatures[nameOfFeature] = true;\n}\nexport function getLabelAttribute(e) {\n    let value = e.getAttribute('data-openreplay-label');\n    if (value !== null) {\n        return value;\n    }\n    value = e.getAttribute('data-asayer-label');\n    if (value !== null) {\n        deprecationWarn('\"data-asayer-label\" attribute', '\"data-openreplay-label\" attribute', '/');\n    }\n    return value;\n}\nexport function hasOpenreplayAttribute(e, attr) {\n    const newName = `data-openreplay-${attr}`;\n    if (e.hasAttribute(newName)) {\n        // @ts-ignore\n        if (DEPRECATED_ATTRS[attr]) {\n            deprecationWarn(`\"${newName}\" attribute`, \n            // @ts-ignore\n            `\"${DEPRECATED_ATTRS[attr]}\" attribute`, '/installation/sanitize-data');\n        }\n        return true;\n    }\n    return false;\n}\n/**\n * checks if iframe is accessible\n **/\nexport function canAccessIframe(iframe) {\n    try {\n        return Boolean(iframe.contentDocument);\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction dec2hex(dec) {\n    return dec.toString(16).padStart(2, '0');\n}\nexport function generateRandomId(len) {\n    const arr = new Uint8Array((len || 40) / 2);\n    // msCrypto = IE11\n    // @ts-ignore\n    const safeCrypto = window.crypto || window.msCrypto;\n    safeCrypto.getRandomValues(arr);\n    return Array.from(arr, dec2hex).join('');\n}\nexport function inIframe() {\n    try {\n        return window.self !== window.top;\n    }\n    catch (e) {\n        return true;\n    }\n}\n/**\n * Because angular devs decided that its a good idea to override a browser apis\n * we need to use this to achieve safe behavior\n * */\nexport function ngSafeBrowserMethod(method) {\n    // @ts-ignore\n    return window.Zone && '__symbol__' in window.Zone\n        ? // @ts-ignore\n            window['Zone']['__symbol__'](method)\n        : method;\n}\nexport function createMutationObserver(cb) {\n    const mObserver = ngSafeBrowserMethod('MutationObserver');\n    return new window[mObserver](cb);\n}\nexport function createEventListener(target, event, cb, capture) {\n    const safeAddEventListener = ngSafeBrowserMethod('addEventListener');\n    try {\n        target[safeAddEventListener](event, cb, capture);\n    }\n    catch (e) {\n        console.debug(\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `Openreplay: ${e.messages}; if this error is caused by an IframeObserver, ignore it`);\n    }\n}\nexport function deleteEventListener(target, event, cb, capture) {\n    const safeRemoveEventListener = ngSafeBrowserMethod('removeEventListener');\n    try {\n        target[safeRemoveEventListener](event, cb, capture);\n    }\n    catch (e) {\n        console.debug(\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `Openreplay: ${e.messages}; if this error is caused by an IframeObserver, ignore it`);\n    }\n}\n/**\n * This is a brief polyfill that suits our needs\n * I took inspiration from Microsoft Clarity polyfill on this one\n * then adapted it a little bit\n *\n * I'm very grateful for their bright idea\n * */\nexport function requestIdleCb(callback) {\n    const taskTimeout = 3000;\n    if (window.requestIdleCallback) {\n        return window.requestIdleCallback(callback, { timeout: taskTimeout });\n    }\n    else {\n        const channel = new MessageChannel();\n        const incoming = channel.port1;\n        const outgoing = channel.port2;\n        incoming.onmessage = () => {\n            callback();\n        };\n        requestAnimationFrame(() => {\n            outgoing.postMessage(1);\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}