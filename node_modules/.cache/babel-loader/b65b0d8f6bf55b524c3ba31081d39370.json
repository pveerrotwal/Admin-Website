{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst guards_js_1 = require(\"../app/guards.js\");\nconst utils_js_1 = require(\"../utils.js\");\nconst messages_gen_js_1 = require(\"../app/messages.gen.js\");\nfunction getPaintBlocks(resources) {\n  const paintBlocks = [];\n  const elements = document.getElementsByTagName('*');\n  const styleURL = /url\\((\"[^\"]*\"|'[^']*'|[^)]*)\\)/i;\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n    let src = '';\n    if ((0, guards_js_1.hasTag)(element, 'img')) {\n      src = element.currentSrc || element.src;\n    }\n    if (!src) {\n      const backgroundImage = getComputedStyle(element).getPropertyValue('background-image');\n      if (backgroundImage) {\n        const matches = styleURL.exec(backgroundImage);\n        if (matches !== null) {\n          src = matches[1];\n          if (src.startsWith('\"') || src.startsWith(\"'\")) {\n            src = src.substr(1, src.length - 2);\n          }\n        }\n      }\n    }\n    if (!src) continue;\n    const time = src.substr(0, 10) === 'data:image' ? 0 : resources[src];\n    if (time === undefined) continue;\n    const rect = element.getBoundingClientRect();\n    const top = Math.max(rect.top, 0);\n    const left = Math.max(rect.left, 0);\n    const bottom = Math.min(rect.bottom, window.innerHeight || document.documentElement && document.documentElement.clientHeight || 0);\n    const right = Math.min(rect.right, window.innerWidth || document.documentElement && document.documentElement.clientWidth || 0);\n    if (bottom <= top || right <= left) continue;\n    const area = (bottom - top) * (right - left);\n    paintBlocks.push({\n      time,\n      area\n    });\n  }\n  return paintBlocks;\n}\nfunction calculateSpeedIndex(firstContentfulPaint, paintBlocks) {\n  let a = Math.max(document.documentElement && document.documentElement.clientWidth || 0, window.innerWidth || 0) * Math.max(document.documentElement && document.documentElement.clientHeight || 0, window.innerHeight || 0) / 10;\n  let s = a * firstContentfulPaint;\n  for (let i = 0; i < paintBlocks.length; i++) {\n    const {\n      time,\n      area\n    } = paintBlocks[i];\n    a += area;\n    s += area * (time > firstContentfulPaint ? time : firstContentfulPaint);\n  }\n  return a === 0 ? 0 : s / a;\n}\nfunction default_1(app, opts) {\n  const options = Object.assign({\n    captureResourceTimings: true,\n    capturePageLoadTimings: true,\n    capturePageRenderTimings: true,\n    excludedResourceUrls: []\n  }, opts);\n  if (!('PerformanceObserver' in window)) {\n    options.captureResourceTimings = false;\n  }\n  if (!options.captureResourceTimings) {\n    return;\n  } // Resources are necessary for all timings\n  let resources = {};\n  function resourceTiming(entry) {\n    var _a;\n    if (entry.duration < 0 || !(0, utils_js_1.isURL)(entry.name) || app.isServiceURL(entry.name)) return;\n    if (resources !== null) {\n      resources[entry.name] = entry.startTime + entry.duration;\n    }\n    let shouldSkip = false;\n    (_a = options.excludedResourceUrls) === null || _a === void 0 ? void 0 : _a.forEach(url => {\n      if (entry.name.startsWith(url)) {\n        shouldSkip = true;\n        return;\n      }\n    });\n    if (shouldSkip) {\n      return;\n    }\n    app.send((0, messages_gen_js_1.ResourceTiming)(entry.startTime + (0, utils_js_1.getTimeOrigin)(), entry.duration, entry.responseStart && entry.startTime ? entry.responseStart - entry.startTime : 0, entry.transferSize > entry.encodedBodySize ? entry.transferSize - entry.encodedBodySize : 0, entry.encodedBodySize || 0, entry.decodedBodySize || 0, entry.name, entry.initiatorType, entry.transferSize,\n    // @ts-ignore\n    entry.responseStatus && entry.responseStatus === 304 || entry.transferSize === 0));\n  }\n  const observer = new PerformanceObserver(list => list.getEntries().forEach(resourceTiming));\n  let prevSessionID;\n  app.attachStartCallback(function ({\n    sessionID\n  }) {\n    if (sessionID !== prevSessionID) {\n      // Send past page resources on a newly started session\n      performance.getEntriesByType('resource').forEach(resourceTiming);\n      prevSessionID = sessionID;\n    }\n    observer.observe({\n      entryTypes: ['resource']\n    });\n  });\n  app.attachStopCallback(function () {\n    observer.disconnect();\n  });\n  let firstPaint = 0,\n    firstContentfulPaint = 0;\n  if (options.capturePageLoadTimings) {\n    let pageLoadTimingSent = false;\n    app.ticker.attach(() => {\n      if (pageLoadTimingSent) {\n        return;\n      }\n      if (firstPaint === 0 || firstContentfulPaint === 0) {\n        performance.getEntriesByType('paint').forEach(entry => {\n          const {\n            name,\n            startTime\n          } = entry;\n          switch (name) {\n            case 'first-paint':\n              firstPaint = startTime;\n              break;\n            case 'first-contentful-paint':\n              firstContentfulPaint = startTime;\n              break;\n          }\n        });\n      }\n      if (performance.timing.loadEventEnd || performance.now() > 30000) {\n        pageLoadTimingSent = true;\n        const {\n          // should be ok to use here, (https://github.com/mdn/content/issues/4713)\n          // since it is compared with the values obtained on the page load (before any possible sleep state)\n          // deprecated though\n          navigationStart,\n          requestStart,\n          responseStart,\n          responseEnd,\n          domContentLoadedEventStart,\n          domContentLoadedEventEnd,\n          loadEventStart,\n          loadEventEnd\n        } = performance.timing;\n        app.send((0, messages_gen_js_1.PageLoadTiming)(requestStart - navigationStart || 0, responseStart - navigationStart || 0, responseEnd - navigationStart || 0, domContentLoadedEventStart - navigationStart || 0, domContentLoadedEventEnd - navigationStart || 0, loadEventStart - navigationStart || 0, loadEventEnd - navigationStart || 0, firstPaint, firstContentfulPaint));\n      }\n    }, 30);\n  }\n  if (options.capturePageRenderTimings) {\n    let visuallyComplete = 0,\n      interactiveWindowStartTime = 0,\n      interactiveWindowTickTime = 0,\n      paintBlocks = null;\n    let pageRenderTimingSent = false;\n    app.ticker.attach(() => {\n      if (pageRenderTimingSent) {\n        return;\n      }\n      const time = performance.now();\n      if (resources !== null) {\n        visuallyComplete = Math.max.apply(null, Object.keys(resources).map(k => resources[k]));\n        if (time - visuallyComplete > 1000) {\n          paintBlocks = getPaintBlocks(resources);\n          resources = null;\n        }\n      }\n      if (interactiveWindowTickTime !== null) {\n        if (time - interactiveWindowTickTime > 50) {\n          interactiveWindowStartTime = time;\n        }\n        interactiveWindowTickTime = time - interactiveWindowStartTime > 5000 ? null : time;\n      }\n      if (paintBlocks !== null && interactiveWindowTickTime === null || time > 30000) {\n        pageRenderTimingSent = true;\n        resources = null;\n        const speedIndex = paintBlocks === null ? 0 : calculateSpeedIndex(firstContentfulPaint || firstPaint, paintBlocks);\n        const {\n          domContentLoadedEventEnd,\n          navigationStart\n        } = performance.timing;\n        const timeToInteractive = interactiveWindowTickTime === null ? Math.max(interactiveWindowStartTime, firstContentfulPaint, domContentLoadedEventEnd - navigationStart || 0) : 0;\n        app.send((0, messages_gen_js_1.PageRenderTiming)(speedIndex, firstContentfulPaint > visuallyComplete ? firstContentfulPaint : visuallyComplete, timeToInteractive));\n      }\n    });\n  }\n}\nexports.default = default_1;","map":{"version":3,"names":["Object","defineProperty","exports","value","guards_js_1","require","utils_js_1","messages_gen_js_1","getPaintBlocks","resources","paintBlocks","elements","document","getElementsByTagName","styleURL","i","length","element","src","hasTag","currentSrc","backgroundImage","getComputedStyle","getPropertyValue","matches","exec","startsWith","substr","time","undefined","rect","getBoundingClientRect","top","Math","max","left","bottom","min","window","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","area","push","calculateSpeedIndex","firstContentfulPaint","a","s","default_1","app","opts","options","assign","captureResourceTimings","capturePageLoadTimings","capturePageRenderTimings","excludedResourceUrls","resourceTiming","entry","_a","duration","isURL","name","isServiceURL","startTime","shouldSkip","forEach","url","send","ResourceTiming","getTimeOrigin","responseStart","transferSize","encodedBodySize","decodedBodySize","initiatorType","responseStatus","observer","PerformanceObserver","list","getEntries","prevSessionID","attachStartCallback","sessionID","performance","getEntriesByType","observe","entryTypes","attachStopCallback","disconnect","firstPaint","pageLoadTimingSent","ticker","attach","timing","loadEventEnd","now","navigationStart","requestStart","responseEnd","domContentLoadedEventStart","domContentLoadedEventEnd","loadEventStart","PageLoadTiming","visuallyComplete","interactiveWindowStartTime","interactiveWindowTickTime","pageRenderTimingSent","apply","keys","map","k","speedIndex","timeToInteractive","PageRenderTiming","default"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/cjs/modules/timing.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst guards_js_1 = require(\"../app/guards.js\");\nconst utils_js_1 = require(\"../utils.js\");\nconst messages_gen_js_1 = require(\"../app/messages.gen.js\");\nfunction getPaintBlocks(resources) {\n    const paintBlocks = [];\n    const elements = document.getElementsByTagName('*');\n    const styleURL = /url\\((\"[^\"]*\"|'[^']*'|[^)]*)\\)/i;\n    for (let i = 0; i < elements.length; i++) {\n        const element = elements[i];\n        let src = '';\n        if ((0, guards_js_1.hasTag)(element, 'img')) {\n            src = element.currentSrc || element.src;\n        }\n        if (!src) {\n            const backgroundImage = getComputedStyle(element).getPropertyValue('background-image');\n            if (backgroundImage) {\n                const matches = styleURL.exec(backgroundImage);\n                if (matches !== null) {\n                    src = matches[1];\n                    if (src.startsWith('\"') || src.startsWith(\"'\")) {\n                        src = src.substr(1, src.length - 2);\n                    }\n                }\n            }\n        }\n        if (!src)\n            continue;\n        const time = src.substr(0, 10) === 'data:image' ? 0 : resources[src];\n        if (time === undefined)\n            continue;\n        const rect = element.getBoundingClientRect();\n        const top = Math.max(rect.top, 0);\n        const left = Math.max(rect.left, 0);\n        const bottom = Math.min(rect.bottom, window.innerHeight ||\n            (document.documentElement && document.documentElement.clientHeight) ||\n            0);\n        const right = Math.min(rect.right, window.innerWidth || (document.documentElement && document.documentElement.clientWidth) || 0);\n        if (bottom <= top || right <= left)\n            continue;\n        const area = (bottom - top) * (right - left);\n        paintBlocks.push({ time, area });\n    }\n    return paintBlocks;\n}\nfunction calculateSpeedIndex(firstContentfulPaint, paintBlocks) {\n    let a = (Math.max((document.documentElement && document.documentElement.clientWidth) || 0, window.innerWidth || 0) *\n        Math.max((document.documentElement && document.documentElement.clientHeight) || 0, window.innerHeight || 0)) /\n        10;\n    let s = a * firstContentfulPaint;\n    for (let i = 0; i < paintBlocks.length; i++) {\n        const { time, area } = paintBlocks[i];\n        a += area;\n        s += area * (time > firstContentfulPaint ? time : firstContentfulPaint);\n    }\n    return a === 0 ? 0 : s / a;\n}\nfunction default_1(app, opts) {\n    const options = Object.assign({\n        captureResourceTimings: true,\n        capturePageLoadTimings: true,\n        capturePageRenderTimings: true,\n        excludedResourceUrls: [],\n    }, opts);\n    if (!('PerformanceObserver' in window)) {\n        options.captureResourceTimings = false;\n    }\n    if (!options.captureResourceTimings) {\n        return;\n    } // Resources are necessary for all timings\n    let resources = {};\n    function resourceTiming(entry) {\n        var _a;\n        if (entry.duration < 0 || !(0, utils_js_1.isURL)(entry.name) || app.isServiceURL(entry.name))\n            return;\n        if (resources !== null) {\n            resources[entry.name] = entry.startTime + entry.duration;\n        }\n        let shouldSkip = false;\n        (_a = options.excludedResourceUrls) === null || _a === void 0 ? void 0 : _a.forEach((url) => {\n            if (entry.name.startsWith(url)) {\n                shouldSkip = true;\n                return;\n            }\n        });\n        if (shouldSkip) {\n            return;\n        }\n        app.send((0, messages_gen_js_1.ResourceTiming)(entry.startTime + (0, utils_js_1.getTimeOrigin)(), entry.duration, entry.responseStart && entry.startTime ? entry.responseStart - entry.startTime : 0, entry.transferSize > entry.encodedBodySize ? entry.transferSize - entry.encodedBodySize : 0, entry.encodedBodySize || 0, entry.decodedBodySize || 0, entry.name, entry.initiatorType, entry.transferSize, \n        // @ts-ignore\n        (entry.responseStatus && entry.responseStatus === 304) || entry.transferSize === 0));\n    }\n    const observer = new PerformanceObserver((list) => list.getEntries().forEach(resourceTiming));\n    let prevSessionID;\n    app.attachStartCallback(function ({ sessionID }) {\n        if (sessionID !== prevSessionID) {\n            // Send past page resources on a newly started session\n            performance.getEntriesByType('resource').forEach(resourceTiming);\n            prevSessionID = sessionID;\n        }\n        observer.observe({ entryTypes: ['resource'] });\n    });\n    app.attachStopCallback(function () {\n        observer.disconnect();\n    });\n    let firstPaint = 0, firstContentfulPaint = 0;\n    if (options.capturePageLoadTimings) {\n        let pageLoadTimingSent = false;\n        app.ticker.attach(() => {\n            if (pageLoadTimingSent) {\n                return;\n            }\n            if (firstPaint === 0 || firstContentfulPaint === 0) {\n                performance.getEntriesByType('paint').forEach((entry) => {\n                    const { name, startTime } = entry;\n                    switch (name) {\n                        case 'first-paint':\n                            firstPaint = startTime;\n                            break;\n                        case 'first-contentful-paint':\n                            firstContentfulPaint = startTime;\n                            break;\n                    }\n                });\n            }\n            if (performance.timing.loadEventEnd || performance.now() > 30000) {\n                pageLoadTimingSent = true;\n                const { \n                // should be ok to use here, (https://github.com/mdn/content/issues/4713)\n                // since it is compared with the values obtained on the page load (before any possible sleep state)\n                // deprecated though\n                navigationStart, requestStart, responseStart, responseEnd, domContentLoadedEventStart, domContentLoadedEventEnd, loadEventStart, loadEventEnd, } = performance.timing;\n                app.send((0, messages_gen_js_1.PageLoadTiming)(requestStart - navigationStart || 0, responseStart - navigationStart || 0, responseEnd - navigationStart || 0, domContentLoadedEventStart - navigationStart || 0, domContentLoadedEventEnd - navigationStart || 0, loadEventStart - navigationStart || 0, loadEventEnd - navigationStart || 0, firstPaint, firstContentfulPaint));\n            }\n        }, 30);\n    }\n    if (options.capturePageRenderTimings) {\n        let visuallyComplete = 0, interactiveWindowStartTime = 0, interactiveWindowTickTime = 0, paintBlocks = null;\n        let pageRenderTimingSent = false;\n        app.ticker.attach(() => {\n            if (pageRenderTimingSent) {\n                return;\n            }\n            const time = performance.now();\n            if (resources !== null) {\n                visuallyComplete = Math.max.apply(null, Object.keys(resources).map((k) => resources[k]));\n                if (time - visuallyComplete > 1000) {\n                    paintBlocks = getPaintBlocks(resources);\n                    resources = null;\n                }\n            }\n            if (interactiveWindowTickTime !== null) {\n                if (time - interactiveWindowTickTime > 50) {\n                    interactiveWindowStartTime = time;\n                }\n                interactiveWindowTickTime = time - interactiveWindowStartTime > 5000 ? null : time;\n            }\n            if ((paintBlocks !== null && interactiveWindowTickTime === null) || time > 30000) {\n                pageRenderTimingSent = true;\n                resources = null;\n                const speedIndex = paintBlocks === null\n                    ? 0\n                    : calculateSpeedIndex(firstContentfulPaint || firstPaint, paintBlocks);\n                const { domContentLoadedEventEnd, navigationStart } = performance.timing;\n                const timeToInteractive = interactiveWindowTickTime === null\n                    ? Math.max(interactiveWindowStartTime, firstContentfulPaint, domContentLoadedEventEnd - navigationStart || 0)\n                    : 0;\n                app.send((0, messages_gen_js_1.PageRenderTiming)(speedIndex, firstContentfulPaint > visuallyComplete ? firstContentfulPaint : visuallyComplete, timeToInteractive));\n            }\n        });\n    }\n}\nexports.default = default_1;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}