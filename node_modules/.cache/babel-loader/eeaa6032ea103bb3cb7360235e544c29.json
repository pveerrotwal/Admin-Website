{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_js_1 = require(\"../../utils.js\");\nconst messages_gen_js_1 = require(\"../messages.gen.js\");\nconst guards_js_1 = require(\"../guards.js\");\nfunction isIgnored(node) {\n  if ((0, guards_js_1.isCommentNode)(node)) {\n    return true;\n  }\n  if ((0, guards_js_1.isTextNode)(node)) {\n    return false;\n  }\n  if (!(0, guards_js_1.isElementNode)(node)) {\n    return true;\n  }\n  const tag = node.tagName.toUpperCase();\n  if (tag === 'LINK') {\n    const rel = node.getAttribute('rel');\n    const as = node.getAttribute('as');\n    return !((rel === null || rel === void 0 ? void 0 : rel.includes('stylesheet')) || as === 'style' || as === 'font');\n  }\n  return tag === 'SCRIPT' || tag === 'NOSCRIPT' || tag === 'META' || tag === 'TITLE' || tag === 'BASE';\n}\nfunction isObservable(node) {\n  if ((0, guards_js_1.isRootNode)(node)) {\n    return true;\n  }\n  return !isIgnored(node);\n}\n/*\n  TODO:\n    - fix unbinding logic + send all removals first (ensure sequence is correct)\n    - use document as a 0-node in the upper context (should be updated in player at first)\n*/\nvar RecentsType;\n(function (RecentsType) {\n  RecentsType[RecentsType[\"New\"] = 0] = \"New\";\n  RecentsType[RecentsType[\"Removed\"] = 1] = \"Removed\";\n  RecentsType[RecentsType[\"Changed\"] = 2] = \"Changed\";\n})(RecentsType || (RecentsType = {}));\nclass Observer {\n  constructor(app, isTopContext = false) {\n    this.app = app;\n    this.isTopContext = isTopContext;\n    this.commited = [];\n    this.recents = new Map();\n    this.indexes = [];\n    this.attributesMap = new Map();\n    this.textSet = new Set();\n    this.observer = (0, utils_js_1.createMutationObserver)(this.app.safe(mutations => {\n      for (const mutation of mutations) {\n        // mutations order is sequential\n        const target = mutation.target;\n        const type = mutation.type;\n        if (!isObservable(target)) {\n          continue;\n        }\n        if (type === 'childList') {\n          for (let i = 0; i < mutation.removedNodes.length; i++) {\n            // Should be the same as bindTree(mutation.removedNodes[i]), but logic needs to be be untied\n            if (isObservable(mutation.removedNodes[i])) {\n              this.bindNode(mutation.removedNodes[i]);\n            }\n          }\n          for (let i = 0; i < mutation.addedNodes.length; i++) {\n            this.bindTree(mutation.addedNodes[i]);\n          }\n          continue;\n        }\n        const id = this.app.nodes.getID(target);\n        if (id === undefined) {\n          continue;\n        }\n        if (!this.recents.has(id)) {\n          this.recents.set(id, RecentsType.Changed); // TODO only when altered\n        }\n        if (type === 'attributes') {\n          const name = mutation.attributeName;\n          if (name === null) {\n            continue;\n          }\n          let attr = this.attributesMap.get(id);\n          if (attr === undefined) {\n            this.attributesMap.set(id, attr = new Set());\n          }\n          attr.add(name);\n          continue;\n        }\n        if (type === 'characterData') {\n          this.textSet.add(id);\n          continue;\n        }\n      }\n      this.commitNodes();\n    }));\n  }\n  clear() {\n    this.commited.length = 0;\n    this.recents.clear();\n    this.indexes.length = 1;\n    this.attributesMap.clear();\n    this.textSet.clear();\n  }\n  sendNodeAttribute(id, node, name, value) {\n    if ((0, guards_js_1.isSVGElement)(node)) {\n      if (name.substr(0, 6) === 'xlink:') {\n        name = name.substr(6);\n      }\n      if (value === null) {\n        this.app.send((0, messages_gen_js_1.RemoveNodeAttribute)(id, name));\n      } else if (name === 'href') {\n        if (value.length > 1e5) {\n          value = '';\n        }\n        this.app.send((0, messages_gen_js_1.SetNodeAttributeURLBased)(id, name, value, this.app.getBaseHref()));\n      } else {\n        this.app.attributeSender.sendSetAttribute(id, name, value);\n      }\n      return;\n    }\n    if (name === 'src' || name === 'srcset' || name === 'integrity' || name === 'crossorigin' || name === 'autocomplete' || name.substr(0, 2) === 'on') {\n      return;\n    }\n    if (name === 'value' && (0, guards_js_1.hasTag)(node, 'input') && node.type !== 'button' && node.type !== 'reset' && node.type !== 'submit') {\n      return;\n    }\n    if (value === null) {\n      this.app.send((0, messages_gen_js_1.RemoveNodeAttribute)(id, name));\n      return;\n    }\n    if (name === 'style' || name === 'href' && (0, guards_js_1.hasTag)(node, 'link')) {\n      this.app.send((0, messages_gen_js_1.SetNodeAttributeURLBased)(id, name, value, this.app.getBaseHref()));\n      return;\n    }\n    if (name === 'href' || value.length > 1e5) {\n      value = '';\n    }\n    this.app.attributeSender.sendSetAttribute(id, name, value);\n  }\n  sendNodeData(id, parentElement, data) {\n    if ((0, guards_js_1.hasTag)(parentElement, 'style')) {\n      this.app.send((0, messages_gen_js_1.SetCSSDataURLBased)(id, data, this.app.getBaseHref()));\n      return;\n    }\n    data = this.app.sanitizer.sanitize(id, data);\n    this.app.send((0, messages_gen_js_1.SetNodeData)(id, data));\n  }\n  bindNode(node) {\n    const [id, isNew] = this.app.nodes.registerNode(node);\n    if (isNew) {\n      this.recents.set(id, RecentsType.New);\n    } else if (this.recents.get(id) !== RecentsType.New) {\n      this.recents.set(id, RecentsType.Removed);\n    }\n  }\n  bindTree(node) {\n    if (!isObservable(node)) {\n      return;\n    }\n    this.bindNode(node);\n    const walker = document.createTreeWalker(node, NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_TEXT, {\n      acceptNode: node => isIgnored(node) || this.app.nodes.getID(node) !== undefined ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT\n    },\n    // @ts-ignore\n    false);\n    while (walker.nextNode()) {\n      this.bindNode(walker.currentNode);\n    }\n  }\n  unbindTree(node) {\n    const id = this.app.nodes.unregisterNode(node);\n    if (id !== undefined && this.recents.get(id) === RecentsType.Removed) {\n      // Sending RemoveNode only for parent to maintain\n      this.app.send((0, messages_gen_js_1.RemoveNode)(id));\n      // Unregistering all the children in order to clear the memory\n      const walker = document.createTreeWalker(node, NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_TEXT, {\n        acceptNode: node => isIgnored(node) || this.app.nodes.getID(node) === undefined ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT\n      },\n      // @ts-ignore\n      false);\n      let removed = 0;\n      const totalBeforeRemove = this.app.nodes.getNodeCount();\n      while (walker.nextNode()) {\n        removed += 1;\n        this.app.nodes.unregisterNode(walker.currentNode);\n      }\n      const removedPercent = Math.floor(removed / totalBeforeRemove * 100);\n      if (removedPercent > 30) {\n        this.app.send((0, messages_gen_js_1.UnbindNodes)(removedPercent));\n      }\n    }\n  }\n  // A top-consumption function on the infinite lists test. (~1% of performance resources)\n  _commitNode(id, node) {\n    if ((0, guards_js_1.isRootNode)(node)) {\n      return true;\n    }\n    const parent = node.parentNode;\n    let parentID;\n    // Disable parent check for the upper context HTMLHtmlElement, because it is root there... (before)\n    // TODO: get rid of \"special\" cases (there is an issue with CreateDocument altered behaviour though)\n    // TODO: Clean the logic (though now it workd fine)\n    if (!(0, guards_js_1.hasTag)(node, 'html') || !this.isTopContext) {\n      if (parent === null) {\n        // Sometimes one observation contains attribute mutations for the removimg node, which gets ignored here.\n        // That shouldn't affect the visual rendering ( should it? maybe when transition applied? )\n        this.unbindTree(node);\n        return false;\n      }\n      parentID = this.app.nodes.getID(parent);\n      if (parentID === undefined) {\n        this.unbindTree(node);\n        return false;\n      }\n      if (!this.commitNode(parentID)) {\n        this.unbindTree(node);\n        return false;\n      }\n      this.app.sanitizer.handleNode(id, parentID, node);\n      if (this.app.sanitizer.isHidden(parentID)) {\n        return false;\n      }\n    }\n    // From here parentID === undefined if node is top context HTML node\n    let sibling = node.previousSibling;\n    while (sibling !== null) {\n      const siblingID = this.app.nodes.getID(sibling);\n      if (siblingID !== undefined) {\n        this.commitNode(siblingID);\n        this.indexes[id] = this.indexes[siblingID] + 1;\n        break;\n      }\n      sibling = sibling.previousSibling;\n    }\n    if (sibling === null) {\n      this.indexes[id] = 0;\n    }\n    const recentsType = this.recents.get(id);\n    const isNew = recentsType === RecentsType.New;\n    const index = this.indexes[id];\n    if (index === undefined) {\n      throw 'commitNode: missing node index';\n    }\n    if (isNew) {\n      if ((0, guards_js_1.isElementNode)(node)) {\n        let el = node;\n        if (parentID !== undefined) {\n          if (this.app.sanitizer.isHidden(id)) {\n            const width = el.clientWidth;\n            const height = el.clientHeight;\n            el = node.cloneNode();\n            el.style.width = `${width}px`;\n            el.style.height = `${height}px`;\n          }\n          this.app.send((0, messages_gen_js_1.CreateElementNode)(id, parentID, index, el.tagName, (0, guards_js_1.isSVGElement)(node)));\n        }\n        for (let i = 0; i < el.attributes.length; i++) {\n          const attr = el.attributes[i];\n          this.sendNodeAttribute(id, el, attr.nodeName, attr.value);\n        }\n      } else if ((0, guards_js_1.isTextNode)(node)) {\n        // for text node id != 0, hence parentID !== undefined and parent is Element\n        this.app.send((0, messages_gen_js_1.CreateTextNode)(id, parentID, index));\n        this.sendNodeData(id, parent, node.data);\n      }\n      return true;\n    }\n    if (recentsType === RecentsType.Removed && parentID !== undefined) {\n      this.app.send((0, messages_gen_js_1.MoveNode)(id, parentID, index));\n    }\n    const attr = this.attributesMap.get(id);\n    if (attr !== undefined) {\n      if (!(0, guards_js_1.isElementNode)(node)) {\n        throw 'commitNode: node is not an element';\n      }\n      for (const name of attr) {\n        this.sendNodeAttribute(id, node, name, node.getAttribute(name));\n      }\n    }\n    if (this.textSet.has(id)) {\n      if (!(0, guards_js_1.isTextNode)(node)) {\n        throw 'commitNode: node is not a text';\n      }\n      // for text node id != 0, hence parent is Element\n      this.sendNodeData(id, parent, node.data);\n    }\n    return true;\n  }\n  commitNode(id) {\n    const node = this.app.nodes.getNode(id);\n    if (node === undefined) {\n      return false;\n    }\n    const cmt = this.commited[id];\n    if (cmt !== undefined) {\n      return cmt;\n    }\n    return this.commited[id] = this._commitNode(id, node);\n  }\n  commitNodes(isStart = false) {\n    let node;\n    this.recents.forEach((type, id) => {\n      this.commitNode(id);\n      if (type === RecentsType.New && (node = this.app.nodes.getNode(id))) {\n        this.app.nodes.callNodeCallbacks(node, isStart);\n      }\n    });\n    this.clear();\n  }\n  // ISSSUE (nodeToBinde should be the same as node in all cases. Look at the comment about 0-node at the beginning of the file.)\n  // TODO: use one observer instance for all iframes/shadowRoots (composition instiad of inheritance)\n  observeRoot(node, beforeCommit, nodeToBind = node) {\n    this.observer.observe(node, {\n      childList: true,\n      attributes: true,\n      characterData: true,\n      subtree: true,\n      attributeOldValue: false,\n      characterDataOldValue: false\n    });\n    this.bindTree(nodeToBind);\n    beforeCommit(this.app.nodes.getID(node));\n    this.commitNodes(true);\n  }\n  disconnect() {\n    this.observer.disconnect();\n    this.clear();\n  }\n}\nexports.default = Observer;","map":{"version":3,"names":["Object","defineProperty","exports","value","utils_js_1","require","messages_gen_js_1","guards_js_1","isIgnored","node","isCommentNode","isTextNode","isElementNode","tag","tagName","toUpperCase","rel","getAttribute","as","includes","isObservable","isRootNode","RecentsType","Observer","constructor","app","isTopContext","commited","recents","Map","indexes","attributesMap","textSet","Set","observer","createMutationObserver","safe","mutations","mutation","target","type","i","removedNodes","length","bindNode","addedNodes","bindTree","id","nodes","getID","undefined","has","set","Changed","name","attributeName","attr","get","add","commitNodes","clear","sendNodeAttribute","isSVGElement","substr","send","RemoveNodeAttribute","SetNodeAttributeURLBased","getBaseHref","attributeSender","sendSetAttribute","hasTag","sendNodeData","parentElement","data","SetCSSDataURLBased","sanitizer","sanitize","SetNodeData","isNew","registerNode","New","Removed","walker","document","createTreeWalker","NodeFilter","SHOW_ELEMENT","SHOW_TEXT","acceptNode","FILTER_REJECT","FILTER_ACCEPT","nextNode","currentNode","unbindTree","unregisterNode","RemoveNode","removed","totalBeforeRemove","getNodeCount","removedPercent","Math","floor","UnbindNodes","_commitNode","parent","parentNode","parentID","commitNode","handleNode","isHidden","sibling","previousSibling","siblingID","recentsType","index","el","width","clientWidth","height","clientHeight","cloneNode","style","CreateElementNode","attributes","nodeName","CreateTextNode","MoveNode","getNode","cmt","isStart","forEach","callNodeCallbacks","observeRoot","beforeCommit","nodeToBind","observe","childList","characterData","subtree","attributeOldValue","characterDataOldValue","disconnect","default"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/cjs/app/observer/observer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_js_1 = require(\"../../utils.js\");\nconst messages_gen_js_1 = require(\"../messages.gen.js\");\nconst guards_js_1 = require(\"../guards.js\");\nfunction isIgnored(node) {\n    if ((0, guards_js_1.isCommentNode)(node)) {\n        return true;\n    }\n    if ((0, guards_js_1.isTextNode)(node)) {\n        return false;\n    }\n    if (!(0, guards_js_1.isElementNode)(node)) {\n        return true;\n    }\n    const tag = node.tagName.toUpperCase();\n    if (tag === 'LINK') {\n        const rel = node.getAttribute('rel');\n        const as = node.getAttribute('as');\n        return !((rel === null || rel === void 0 ? void 0 : rel.includes('stylesheet')) || as === 'style' || as === 'font');\n    }\n    return (tag === 'SCRIPT' || tag === 'NOSCRIPT' || tag === 'META' || tag === 'TITLE' || tag === 'BASE');\n}\nfunction isObservable(node) {\n    if ((0, guards_js_1.isRootNode)(node)) {\n        return true;\n    }\n    return !isIgnored(node);\n}\n/*\n  TODO:\n    - fix unbinding logic + send all removals first (ensure sequence is correct)\n    - use document as a 0-node in the upper context (should be updated in player at first)\n*/\nvar RecentsType;\n(function (RecentsType) {\n    RecentsType[RecentsType[\"New\"] = 0] = \"New\";\n    RecentsType[RecentsType[\"Removed\"] = 1] = \"Removed\";\n    RecentsType[RecentsType[\"Changed\"] = 2] = \"Changed\";\n})(RecentsType || (RecentsType = {}));\nclass Observer {\n    constructor(app, isTopContext = false) {\n        this.app = app;\n        this.isTopContext = isTopContext;\n        this.commited = [];\n        this.recents = new Map();\n        this.indexes = [];\n        this.attributesMap = new Map();\n        this.textSet = new Set();\n        this.observer = (0, utils_js_1.createMutationObserver)(this.app.safe((mutations) => {\n            for (const mutation of mutations) {\n                // mutations order is sequential\n                const target = mutation.target;\n                const type = mutation.type;\n                if (!isObservable(target)) {\n                    continue;\n                }\n                if (type === 'childList') {\n                    for (let i = 0; i < mutation.removedNodes.length; i++) {\n                        // Should be the same as bindTree(mutation.removedNodes[i]), but logic needs to be be untied\n                        if (isObservable(mutation.removedNodes[i])) {\n                            this.bindNode(mutation.removedNodes[i]);\n                        }\n                    }\n                    for (let i = 0; i < mutation.addedNodes.length; i++) {\n                        this.bindTree(mutation.addedNodes[i]);\n                    }\n                    continue;\n                }\n                const id = this.app.nodes.getID(target);\n                if (id === undefined) {\n                    continue;\n                }\n                if (!this.recents.has(id)) {\n                    this.recents.set(id, RecentsType.Changed); // TODO only when altered\n                }\n                if (type === 'attributes') {\n                    const name = mutation.attributeName;\n                    if (name === null) {\n                        continue;\n                    }\n                    let attr = this.attributesMap.get(id);\n                    if (attr === undefined) {\n                        this.attributesMap.set(id, (attr = new Set()));\n                    }\n                    attr.add(name);\n                    continue;\n                }\n                if (type === 'characterData') {\n                    this.textSet.add(id);\n                    continue;\n                }\n            }\n            this.commitNodes();\n        }));\n    }\n    clear() {\n        this.commited.length = 0;\n        this.recents.clear();\n        this.indexes.length = 1;\n        this.attributesMap.clear();\n        this.textSet.clear();\n    }\n    sendNodeAttribute(id, node, name, value) {\n        if ((0, guards_js_1.isSVGElement)(node)) {\n            if (name.substr(0, 6) === 'xlink:') {\n                name = name.substr(6);\n            }\n            if (value === null) {\n                this.app.send((0, messages_gen_js_1.RemoveNodeAttribute)(id, name));\n            }\n            else if (name === 'href') {\n                if (value.length > 1e5) {\n                    value = '';\n                }\n                this.app.send((0, messages_gen_js_1.SetNodeAttributeURLBased)(id, name, value, this.app.getBaseHref()));\n            }\n            else {\n                this.app.attributeSender.sendSetAttribute(id, name, value);\n            }\n            return;\n        }\n        if (name === 'src' ||\n            name === 'srcset' ||\n            name === 'integrity' ||\n            name === 'crossorigin' ||\n            name === 'autocomplete' ||\n            name.substr(0, 2) === 'on') {\n            return;\n        }\n        if (name === 'value' &&\n            (0, guards_js_1.hasTag)(node, 'input') &&\n            node.type !== 'button' &&\n            node.type !== 'reset' &&\n            node.type !== 'submit') {\n            return;\n        }\n        if (value === null) {\n            this.app.send((0, messages_gen_js_1.RemoveNodeAttribute)(id, name));\n            return;\n        }\n        if (name === 'style' || (name === 'href' && (0, guards_js_1.hasTag)(node, 'link'))) {\n            this.app.send((0, messages_gen_js_1.SetNodeAttributeURLBased)(id, name, value, this.app.getBaseHref()));\n            return;\n        }\n        if (name === 'href' || value.length > 1e5) {\n            value = '';\n        }\n        this.app.attributeSender.sendSetAttribute(id, name, value);\n    }\n    sendNodeData(id, parentElement, data) {\n        if ((0, guards_js_1.hasTag)(parentElement, 'style')) {\n            this.app.send((0, messages_gen_js_1.SetCSSDataURLBased)(id, data, this.app.getBaseHref()));\n            return;\n        }\n        data = this.app.sanitizer.sanitize(id, data);\n        this.app.send((0, messages_gen_js_1.SetNodeData)(id, data));\n    }\n    bindNode(node) {\n        const [id, isNew] = this.app.nodes.registerNode(node);\n        if (isNew) {\n            this.recents.set(id, RecentsType.New);\n        }\n        else if (this.recents.get(id) !== RecentsType.New) {\n            this.recents.set(id, RecentsType.Removed);\n        }\n    }\n    bindTree(node) {\n        if (!isObservable(node)) {\n            return;\n        }\n        this.bindNode(node);\n        const walker = document.createTreeWalker(node, NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_TEXT, {\n            acceptNode: (node) => isIgnored(node) || this.app.nodes.getID(node) !== undefined\n                ? NodeFilter.FILTER_REJECT\n                : NodeFilter.FILTER_ACCEPT,\n        }, \n        // @ts-ignore\n        false);\n        while (walker.nextNode()) {\n            this.bindNode(walker.currentNode);\n        }\n    }\n    unbindTree(node) {\n        const id = this.app.nodes.unregisterNode(node);\n        if (id !== undefined && this.recents.get(id) === RecentsType.Removed) {\n            // Sending RemoveNode only for parent to maintain\n            this.app.send((0, messages_gen_js_1.RemoveNode)(id));\n            // Unregistering all the children in order to clear the memory\n            const walker = document.createTreeWalker(node, NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_TEXT, {\n                acceptNode: (node) => isIgnored(node) || this.app.nodes.getID(node) === undefined\n                    ? NodeFilter.FILTER_REJECT\n                    : NodeFilter.FILTER_ACCEPT,\n            }, \n            // @ts-ignore\n            false);\n            let removed = 0;\n            const totalBeforeRemove = this.app.nodes.getNodeCount();\n            while (walker.nextNode()) {\n                removed += 1;\n                this.app.nodes.unregisterNode(walker.currentNode);\n            }\n            const removedPercent = Math.floor((removed / totalBeforeRemove) * 100);\n            if (removedPercent > 30) {\n                this.app.send((0, messages_gen_js_1.UnbindNodes)(removedPercent));\n            }\n        }\n    }\n    // A top-consumption function on the infinite lists test. (~1% of performance resources)\n    _commitNode(id, node) {\n        if ((0, guards_js_1.isRootNode)(node)) {\n            return true;\n        }\n        const parent = node.parentNode;\n        let parentID;\n        // Disable parent check for the upper context HTMLHtmlElement, because it is root there... (before)\n        // TODO: get rid of \"special\" cases (there is an issue with CreateDocument altered behaviour though)\n        // TODO: Clean the logic (though now it workd fine)\n        if (!(0, guards_js_1.hasTag)(node, 'html') || !this.isTopContext) {\n            if (parent === null) {\n                // Sometimes one observation contains attribute mutations for the removimg node, which gets ignored here.\n                // That shouldn't affect the visual rendering ( should it? maybe when transition applied? )\n                this.unbindTree(node);\n                return false;\n            }\n            parentID = this.app.nodes.getID(parent);\n            if (parentID === undefined) {\n                this.unbindTree(node);\n                return false;\n            }\n            if (!this.commitNode(parentID)) {\n                this.unbindTree(node);\n                return false;\n            }\n            this.app.sanitizer.handleNode(id, parentID, node);\n            if (this.app.sanitizer.isHidden(parentID)) {\n                return false;\n            }\n        }\n        // From here parentID === undefined if node is top context HTML node\n        let sibling = node.previousSibling;\n        while (sibling !== null) {\n            const siblingID = this.app.nodes.getID(sibling);\n            if (siblingID !== undefined) {\n                this.commitNode(siblingID);\n                this.indexes[id] = this.indexes[siblingID] + 1;\n                break;\n            }\n            sibling = sibling.previousSibling;\n        }\n        if (sibling === null) {\n            this.indexes[id] = 0;\n        }\n        const recentsType = this.recents.get(id);\n        const isNew = recentsType === RecentsType.New;\n        const index = this.indexes[id];\n        if (index === undefined) {\n            throw 'commitNode: missing node index';\n        }\n        if (isNew) {\n            if ((0, guards_js_1.isElementNode)(node)) {\n                let el = node;\n                if (parentID !== undefined) {\n                    if (this.app.sanitizer.isHidden(id)) {\n                        const width = el.clientWidth;\n                        const height = el.clientHeight;\n                        el = node.cloneNode();\n                        el.style.width = `${width}px`;\n                        el.style.height = `${height}px`;\n                    }\n                    this.app.send((0, messages_gen_js_1.CreateElementNode)(id, parentID, index, el.tagName, (0, guards_js_1.isSVGElement)(node)));\n                }\n                for (let i = 0; i < el.attributes.length; i++) {\n                    const attr = el.attributes[i];\n                    this.sendNodeAttribute(id, el, attr.nodeName, attr.value);\n                }\n            }\n            else if ((0, guards_js_1.isTextNode)(node)) {\n                // for text node id != 0, hence parentID !== undefined and parent is Element\n                this.app.send((0, messages_gen_js_1.CreateTextNode)(id, parentID, index));\n                this.sendNodeData(id, parent, node.data);\n            }\n            return true;\n        }\n        if (recentsType === RecentsType.Removed && parentID !== undefined) {\n            this.app.send((0, messages_gen_js_1.MoveNode)(id, parentID, index));\n        }\n        const attr = this.attributesMap.get(id);\n        if (attr !== undefined) {\n            if (!(0, guards_js_1.isElementNode)(node)) {\n                throw 'commitNode: node is not an element';\n            }\n            for (const name of attr) {\n                this.sendNodeAttribute(id, node, name, node.getAttribute(name));\n            }\n        }\n        if (this.textSet.has(id)) {\n            if (!(0, guards_js_1.isTextNode)(node)) {\n                throw 'commitNode: node is not a text';\n            }\n            // for text node id != 0, hence parent is Element\n            this.sendNodeData(id, parent, node.data);\n        }\n        return true;\n    }\n    commitNode(id) {\n        const node = this.app.nodes.getNode(id);\n        if (node === undefined) {\n            return false;\n        }\n        const cmt = this.commited[id];\n        if (cmt !== undefined) {\n            return cmt;\n        }\n        return (this.commited[id] = this._commitNode(id, node));\n    }\n    commitNodes(isStart = false) {\n        let node;\n        this.recents.forEach((type, id) => {\n            this.commitNode(id);\n            if (type === RecentsType.New && (node = this.app.nodes.getNode(id))) {\n                this.app.nodes.callNodeCallbacks(node, isStart);\n            }\n        });\n        this.clear();\n    }\n    // ISSSUE (nodeToBinde should be the same as node in all cases. Look at the comment about 0-node at the beginning of the file.)\n    // TODO: use one observer instance for all iframes/shadowRoots (composition instiad of inheritance)\n    observeRoot(node, beforeCommit, nodeToBind = node) {\n        this.observer.observe(node, {\n            childList: true,\n            attributes: true,\n            characterData: true,\n            subtree: true,\n            attributeOldValue: false,\n            characterDataOldValue: false,\n        });\n        this.bindTree(nodeToBind);\n        beforeCommit(this.app.nodes.getID(node));\n        this.commitNodes(true);\n    }\n    disconnect() {\n        this.observer.disconnect();\n        this.clear();\n    }\n}\nexports.default = Observer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}