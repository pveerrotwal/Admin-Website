{"ast":null,"code":"var _jsxFileName = \"/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport { UserList, UserEdit, UserCreate } from './users';\nimport authProvider from \"./authProvider\";\nimport jsonServerProvider from \"ra-data-json-server\";\nimport Tracker from '@openreplay/tracker/cjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tracker = new Tracker({\n  projectKey: \"4h4ERNZ4iL9F1d6sHKuS\"\n});\nfunction App() {\n  _s();\n  useEffect(() => {\n    // Start the tracker when the component mounts\n    tracker.start();\n\n    // Clean up the tracker when the component unmounts\n    return () => {\n      tracker.stop(); // Perform any necessary cleanup\n    };\n  }, []); // Empty dependency array means this effect runs once after the initial render\n\n  const dataProvider = jsonServerProvider(\"http://localhost:3001\");\n  return /*#__PURE__*/_jsxDEV(Admin, {\n    dataProvider: dataProvider,\n    authProvider: authProvider,\n    children: /*#__PURE__*/_jsxDEV(Resource, {\n      name: \"users\",\n      list: UserList,\n      edit: UserEdit,\n      create: UserCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Admin","Resource","UserList","UserEdit","UserCreate","authProvider","jsonServerProvider","Tracker","jsxDEV","_jsxDEV","tracker","projectKey","App","_s","start","stop","dataProvider","children","name","list","edit","create","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport { UserList, UserEdit, UserCreate } from './users';\nimport authProvider from \"./authProvider\";\nimport jsonServerProvider from \"ra-data-json-server\";\nimport Tracker from '@openreplay/tracker/cjs';\n\nconst tracker = new Tracker({\n  projectKey: \"4h4ERNZ4iL9F1d6sHKuS\",\n});\n\nfunction App() {\n  useEffect(() => {\n    // Start the tracker when the component mounts\n    tracker.start();\n\n    // Clean up the tracker when the component unmounts\n    return () => {\n      tracker.stop(); // Perform any necessary cleanup\n    };\n  }, []); // Empty dependency array means this effect runs once after the initial render\n\n  const dataProvider = jsonServerProvider(\"http://localhost:3001\");\n\n  return (\n    <Admin dataProvider={dataProvider} authProvider={authProvider}>\n      <Resource name=\"users\" list={UserList} edit={UserEdit} create={UserCreate} />\n    </Admin>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,KAAK,EAAEC,QAAQ,QAAQ,aAAa;AAC7C,SAASC,QAAQ,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,SAAS;AACxD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,kBAAkB,MAAM,qBAAqB;AACpD,OAAOC,OAAO,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,OAAO,GAAG,IAAIH,OAAO,CAAC;EAC1BI,UAAU,EAAE;AACd,CAAC,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbd,SAAS,CAAC,MAAM;IACd;IACAW,OAAO,CAACI,KAAK,CAAC,CAAC;;IAEf;IACA,OAAO,MAAM;MACXJ,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMC,YAAY,GAAGV,kBAAkB,CAAC,uBAAuB,CAAC;EAEhE,oBACEG,OAAA,CAACT,KAAK;IAACgB,YAAY,EAAEA,YAAa;IAACX,YAAY,EAAEA,YAAa;IAAAY,QAAA,eAC5DR,OAAA,CAACR,QAAQ;MAACiB,IAAI,EAAC,OAAO;MAACC,IAAI,EAAEjB,QAAS;MAACkB,IAAI,EAAEjB,QAAS;MAACkB,MAAM,EAAEjB;IAAW;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEZ;AAACZ,EAAA,CAlBQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAoBZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}