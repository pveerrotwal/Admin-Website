{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst observer_js_1 = __importDefault(require(\"./observer.js\"));\nconst messages_gen_js_1 = require(\"../messages.gen.js\");\nclass ShadowRootObserver extends observer_js_1.default {\n  observe(el) {\n    const shRoot = el.shadowRoot;\n    const hostID = this.app.nodes.getID(el);\n    if (!shRoot || hostID === undefined) {\n      return;\n    } // log\n    this.observeRoot(shRoot, rootID => {\n      if (rootID === undefined) {\n        this.app.debug.error('OpenReplay: Shadow Root was not bound');\n        return;\n      }\n      this.app.send((0, messages_gen_js_1.CreateIFrameDocument)(hostID, rootID));\n    });\n  }\n}\nexports.default = ShadowRootObserver;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","observer_js_1","require","messages_gen_js_1","ShadowRootObserver","default","observe","el","shRoot","shadowRoot","hostID","app","nodes","getID","undefined","observeRoot","rootID","debug","error","send","CreateIFrameDocument"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/cjs/app/observer/shadow_root_observer.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst observer_js_1 = __importDefault(require(\"./observer.js\"));\nconst messages_gen_js_1 = require(\"../messages.gen.js\");\nclass ShadowRootObserver extends observer_js_1.default {\n    observe(el) {\n        const shRoot = el.shadowRoot;\n        const hostID = this.app.nodes.getID(el);\n        if (!shRoot || hostID === undefined) {\n            return;\n        } // log\n        this.observeRoot(shRoot, (rootID) => {\n            if (rootID === undefined) {\n                this.app.debug.error('OpenReplay: Shadow Root was not bound');\n                return;\n            }\n            this.app.send((0, messages_gen_js_1.CreateIFrameDocument)(hostID, rootID));\n        });\n    }\n}\nexports.default = ShadowRootObserver;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,aAAa,GAAGP,eAAe,CAACQ,OAAO,CAAC,eAAe,CAAC,CAAC;AAC/D,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AACvD,MAAME,kBAAkB,SAASH,aAAa,CAACI,OAAO,CAAC;EACnDC,OAAOA,CAACC,EAAE,EAAE;IACR,MAAMC,MAAM,GAAGD,EAAE,CAACE,UAAU;IAC5B,MAAMC,MAAM,GAAG,IAAI,CAACC,GAAG,CAACC,KAAK,CAACC,KAAK,CAACN,EAAE,CAAC;IACvC,IAAI,CAACC,MAAM,IAAIE,MAAM,KAAKI,SAAS,EAAE;MACjC;IACJ,CAAC,CAAC;IACF,IAAI,CAACC,WAAW,CAACP,MAAM,EAAGQ,MAAM,IAAK;MACjC,IAAIA,MAAM,KAAKF,SAAS,EAAE;QACtB,IAAI,CAACH,GAAG,CAACM,KAAK,CAACC,KAAK,CAAC,uCAAuC,CAAC;QAC7D;MACJ;MACA,IAAI,CAACP,GAAG,CAACQ,IAAI,CAAC,CAAC,CAAC,EAAEhB,iBAAiB,CAACiB,oBAAoB,EAAEV,MAAM,EAAEM,MAAM,CAAC,CAAC;IAC9E,CAAC,CAAC;EACN;AACJ;AACAjB,OAAO,CAACM,OAAO,GAAGD,kBAAkB"},"metadata":{},"sourceType":"script"}