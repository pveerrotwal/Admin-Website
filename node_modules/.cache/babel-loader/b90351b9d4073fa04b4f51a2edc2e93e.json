{"ast":null,"code":"import Observer from './observer.js';\nimport { CreateIFrameDocument } from '../messages.gen.js';\nexport default class IFrameObserver extends Observer {\n  observe(iframe) {\n    const doc = iframe.contentDocument;\n    const hostID = this.app.nodes.getID(iframe);\n    if (!doc || hostID === undefined) {\n      return;\n    } //log TODO common app.logger\n    // Have to observe document, because the inner <html> might be changed\n    this.observeRoot(doc, docID => {\n      //MBTODO: do not send if empty (send on load? it might be in-place iframe, like our replayer, which does not get loaded)\n      if (docID === undefined) {\n        this.app.debug.log('OpenReplay: Iframe document not bound');\n        return;\n      }\n      this.app.send(CreateIFrameDocument(hostID, docID));\n    });\n  }\n}","map":{"version":3,"names":["Observer","CreateIFrameDocument","IFrameObserver","observe","iframe","doc","contentDocument","hostID","app","nodes","getID","undefined","observeRoot","docID","debug","log","send"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/lib/app/observer/iframe_observer.js"],"sourcesContent":["import Observer from './observer.js';\nimport { CreateIFrameDocument } from '../messages.gen.js';\nexport default class IFrameObserver extends Observer {\n    observe(iframe) {\n        const doc = iframe.contentDocument;\n        const hostID = this.app.nodes.getID(iframe);\n        if (!doc || hostID === undefined) {\n            return;\n        } //log TODO common app.logger\n        // Have to observe document, because the inner <html> might be changed\n        this.observeRoot(doc, (docID) => {\n            //MBTODO: do not send if empty (send on load? it might be in-place iframe, like our replayer, which does not get loaded)\n            if (docID === undefined) {\n                this.app.debug.log('OpenReplay: Iframe document not bound');\n                return;\n            }\n            this.app.send(CreateIFrameDocument(hostID, docID));\n        });\n    }\n}\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,eAAe;AACpC,SAASC,oBAAoB,QAAQ,oBAAoB;AACzD,eAAe,MAAMC,cAAc,SAASF,QAAQ,CAAC;EACjDG,OAAOA,CAACC,MAAM,EAAE;IACZ,MAAMC,GAAG,GAAGD,MAAM,CAACE,eAAe;IAClC,MAAMC,MAAM,GAAG,IAAI,CAACC,GAAG,CAACC,KAAK,CAACC,KAAK,CAACN,MAAM,CAAC;IAC3C,IAAI,CAACC,GAAG,IAAIE,MAAM,KAAKI,SAAS,EAAE;MAC9B;IACJ,CAAC,CAAC;IACF;IACA,IAAI,CAACC,WAAW,CAACP,GAAG,EAAGQ,KAAK,IAAK;MAC7B;MACA,IAAIA,KAAK,KAAKF,SAAS,EAAE;QACrB,IAAI,CAACH,GAAG,CAACM,KAAK,CAACC,GAAG,CAAC,uCAAuC,CAAC;QAC3D;MACJ;MACA,IAAI,CAACP,GAAG,CAACQ,IAAI,CAACf,oBAAoB,CAACM,MAAM,EAAEM,KAAK,CAAC,CAAC;IACtD,CAAC,CAAC;EACN;AACJ"},"metadata":{},"sourceType":"module"}