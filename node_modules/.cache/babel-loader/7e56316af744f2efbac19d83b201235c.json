{"ast":null,"code":"import { SelectionChange } from '../app/messages.gen.js';\nfunction selection(app) {\n  app.attachEventListener(document, 'selectionchange', () => {\n    const selection = document.getSelection();\n    if (selection !== null && !selection.isCollapsed) {\n      const selectionStart = app.nodes.getID(selection.anchorNode);\n      const selectionEnd = app.nodes.getID(selection.focusNode);\n      const selectedText = selection.toString().replace(/\\s+/g, ' ');\n      if (selectionStart && selectionEnd) {\n        app.send(SelectionChange(selectionStart, selectionEnd, selectedText));\n      }\n    } else {\n      app.send(SelectionChange(-1, -1, ''));\n    }\n  });\n}\nexport default selection;\n/** TODO: research how to get all in-between nodes inside selection range\n *        including nodes between anchor and focus nodes and their children\n *        without recursively searching the dom tree\n */\n// if (selection.rangeCount) {\n//   const nodes = [];\n//   for (let i = 0; i < selection.rangeCount; i++) {\n//     const range = selection.getRangeAt(i);\n//     let node: Node | null = range.startContainer;\n//     while (node) {\n//       nodes.push(node);\n//       if (node === range.endContainer) break;\n//       node = node.nextSibling;\n//     }\n//   }\n//   // send selected nodes\n// }","map":{"version":3,"names":["SelectionChange","selection","app","attachEventListener","document","getSelection","isCollapsed","selectionStart","nodes","getID","anchorNode","selectionEnd","focusNode","selectedText","toString","replace","send"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/lib/modules/selection.js"],"sourcesContent":["import { SelectionChange } from '../app/messages.gen.js';\nfunction selection(app) {\n    app.attachEventListener(document, 'selectionchange', () => {\n        const selection = document.getSelection();\n        if (selection !== null && !selection.isCollapsed) {\n            const selectionStart = app.nodes.getID(selection.anchorNode);\n            const selectionEnd = app.nodes.getID(selection.focusNode);\n            const selectedText = selection.toString().replace(/\\s+/g, ' ');\n            if (selectionStart && selectionEnd) {\n                app.send(SelectionChange(selectionStart, selectionEnd, selectedText));\n            }\n        }\n        else {\n            app.send(SelectionChange(-1, -1, ''));\n        }\n    });\n}\nexport default selection;\n/** TODO: research how to get all in-between nodes inside selection range\n *        including nodes between anchor and focus nodes and their children\n *        without recursively searching the dom tree\n */\n// if (selection.rangeCount) {\n//   const nodes = [];\n//   for (let i = 0; i < selection.rangeCount; i++) {\n//     const range = selection.getRangeAt(i);\n//     let node: Node | null = range.startContainer;\n//     while (node) {\n//       nodes.push(node);\n//       if (node === range.endContainer) break;\n//       node = node.nextSibling;\n//     }\n//   }\n//   // send selected nodes\n// }\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,wBAAwB;AACxD,SAASC,SAASA,CAACC,GAAG,EAAE;EACpBA,GAAG,CAACC,mBAAmB,CAACC,QAAQ,EAAE,iBAAiB,EAAE,MAAM;IACvD,MAAMH,SAAS,GAAGG,QAAQ,CAACC,YAAY,CAAC,CAAC;IACzC,IAAIJ,SAAS,KAAK,IAAI,IAAI,CAACA,SAAS,CAACK,WAAW,EAAE;MAC9C,MAAMC,cAAc,GAAGL,GAAG,CAACM,KAAK,CAACC,KAAK,CAACR,SAAS,CAACS,UAAU,CAAC;MAC5D,MAAMC,YAAY,GAAGT,GAAG,CAACM,KAAK,CAACC,KAAK,CAACR,SAAS,CAACW,SAAS,CAAC;MACzD,MAAMC,YAAY,GAAGZ,SAAS,CAACa,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;MAC9D,IAAIR,cAAc,IAAII,YAAY,EAAE;QAChCT,GAAG,CAACc,IAAI,CAAChB,eAAe,CAACO,cAAc,EAAEI,YAAY,EAAEE,YAAY,CAAC,CAAC;MACzE;IACJ,CAAC,MACI;MACDX,GAAG,CAACc,IAAI,CAAChB,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACzC;EACJ,CAAC,CAAC;AACN;AACA,eAAeC,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}