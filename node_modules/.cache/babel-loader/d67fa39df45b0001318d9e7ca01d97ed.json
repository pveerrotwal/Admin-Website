{"ast":null,"code":"import App, { DEFAULT_INGEST_POINT } from './app/index.js';\nexport { default as App } from './app/index.js';\nimport { UserAnonymousID, CustomEvent, CustomIssue } from './app/messages.gen.js';\nimport * as _Messages from './app/messages.gen.js';\nexport const Messages = _Messages;\nexport { SanitizeLevel } from './app/sanitizer.js';\nimport Connection from './modules/connection.js';\nimport Console from './modules/console.js';\nimport Exception, { getExceptionMessageFromEvent, getExceptionMessage } from './modules/exception.js';\nimport Img from './modules/img.js';\nimport Input from './modules/input.js';\nimport Mouse from './modules/mouse.js';\nimport Timing from './modules/timing.js';\nimport Performance from './modules/performance.js';\nimport Scroll from './modules/scroll.js';\nimport Viewport from './modules/viewport.js';\nimport CSSRules from './modules/cssrules.js';\nimport Focus from './modules/focus.js';\nimport Fonts from './modules/fonts.js';\nimport Network from './modules/network.js';\nimport ConstructedStyleSheets from './modules/constructedStyleSheets.js';\nimport Selection from './modules/selection.js';\nimport Tabs from './modules/tabs.js';\nimport { IN_BROWSER, deprecationWarn, DOCS_HOST } from './utils.js';\nconst DOCS_SETUP = '/installation/javascript-sdk';\nfunction processOptions(obj) {\n  if (obj == null) {\n    console.error(`OpenReplay: invalid options argument type. Please, check documentation on ${DOCS_HOST}${DOCS_SETUP}`);\n    return false;\n  }\n  if (typeof obj.projectKey !== 'string') {\n    if (typeof obj.projectKey !== 'number') {\n      if (typeof obj.projectID !== 'number') {\n        // Back compatability\n        console.error(`OpenReplay: projectKey is missing or wrong type (string is expected). Please, check ${DOCS_HOST}${DOCS_SETUP} for more information.`);\n        return false;\n      } else {\n        obj.projectKey = obj.projectID.toString();\n        deprecationWarn('`projectID` option', '`projectKey` option', DOCS_SETUP);\n      }\n    } else {\n      console.warn('OpenReplay: projectKey is expected to have a string type.');\n      obj.projectKey = obj.projectKey.toString();\n    }\n  }\n  if (obj.sessionToken != null) {\n    deprecationWarn('`sessionToken` option', '`sessionHash` start() option', '/');\n  }\n  return true;\n}\nexport default class API {\n  constructor(options) {\n    var _a;\n    this.options = options;\n    this.app = null;\n    this.checkDoNotTrack = () => {\n      return this.options.respectDoNotTrack && (navigator.doNotTrack == '1' ||\n      // @ts-ignore\n      window.doNotTrack == '1');\n    };\n    this.signalStartIssue = (reason, missingApi) => {\n      const doNotTrack = this.checkDoNotTrack();\n      const req = new XMLHttpRequest();\n      const orig = this.options.ingestPoint || DEFAULT_INGEST_POINT;\n      req.open('POST', orig + '/v1/web/not-started');\n      req.send(JSON.stringify({\n        trackerVersion: '12.0.3',\n        projectKey: this.options.projectKey,\n        doNotTrack,\n        reason,\n        missingApi\n      }));\n    };\n    this.restartCanvasTracking = () => {\n      if (this.app === null) {\n        return;\n      }\n      this.app.restartCanvasTracking();\n    };\n    this.handleError = (e, metadata = {}) => {\n      if (this.app === null) {\n        return;\n      }\n      if (e instanceof Error) {\n        const msg = getExceptionMessage(e, [], metadata);\n        this.app.send(msg);\n      } else if (e instanceof ErrorEvent || 'PromiseRejectionEvent' in window && e instanceof PromiseRejectionEvent) {\n        const msg = getExceptionMessageFromEvent(e, undefined, metadata);\n        if (msg != null) {\n          this.app.send(msg);\n        }\n      }\n    };\n    if (!IN_BROWSER || !processOptions(options)) {\n      return;\n    }\n    if (window.__OPENREPLAY__) {\n      console.error('OpenReplay: one tracker instance has been initialised already');\n      return;\n    }\n    if (!options.__DISABLE_SECURE_MODE && location.protocol !== 'https:') {\n      console.error('OpenReplay: Your website must be publicly accessible and running on SSL in order for OpenReplay to properly capture and replay the user session. You can disable this check by setting `__DISABLE_SECURE_MODE` option to `true` if you are testing in localhost. Keep in mind, that asset files on a local machine are not available to the outside world. This might affect tracking if you use css files.');\n      return;\n    }\n    const doNotTrack = this.checkDoNotTrack();\n    const failReason = [];\n    const conditions = ['Map', 'Set', 'MutationObserver', 'performance', 'timing', 'startsWith', 'Blob', 'Worker'];\n    if (doNotTrack) {\n      failReason.push('doNotTrack');\n    } else {\n      for (const condition of conditions) {\n        if (condition === 'timing') {\n          if ('performance' in window && !(condition in performance)) {\n            failReason.push(condition);\n            break;\n          }\n        } else if (condition === 'startsWith') {\n          if (!(condition in String.prototype)) {\n            failReason.push(condition);\n            break;\n          }\n        } else {\n          if (!(condition in window)) {\n            failReason.push(condition);\n            break;\n          }\n        }\n      }\n    }\n    if (failReason.length > 0) {\n      const missingApi = failReason.join(',');\n      console.error(`OpenReplay: browser doesn't support API required for tracking or doNotTrack is set to 1. Reason: ${missingApi}`);\n      this.signalStartIssue('missing_api', failReason);\n      return;\n    }\n    const app = new App(options.projectKey, options.sessionToken, options, this.signalStartIssue);\n    this.app = app;\n    Viewport(app);\n    CSSRules(app);\n    ConstructedStyleSheets(app);\n    Connection(app);\n    Console(app, options);\n    Exception(app, options);\n    Img(app);\n    Input(app, options);\n    Mouse(app, options.mouse);\n    Timing(app, options);\n    Performance(app, options);\n    Scroll(app);\n    Focus(app);\n    Fonts(app);\n    Network(app, options.network);\n    Selection(app);\n    Tabs(app);\n    window.__OPENREPLAY__ = this;\n    if ((_a = options.flags) === null || _a === void 0 ? void 0 : _a.onFlagsLoad) {\n      this.onFlagsLoad(options.flags.onFlagsLoad);\n    }\n    const wOpen = window.open;\n    if (options.autoResetOnWindowOpen || options.resetTabOnWindowOpen) {\n      app.attachStartCallback(() => {\n        var _a;\n        const tabId = app.getTabId();\n        const sessStorage = (_a = app.sessionStorage) !== null && _a !== void 0 ? _a : window.sessionStorage;\n        // @ts-ignore ?\n        window.open = function (...args) {\n          if (options.autoResetOnWindowOpen) {\n            app.resetNextPageSession(true);\n          }\n          if (options.resetTabOnWindowOpen) {\n            sessStorage.removeItem(options.session_tabid_key || '__openreplay_tabid');\n          }\n          wOpen.call(window, ...args);\n          app.resetNextPageSession(false);\n          sessStorage.setItem(options.session_tabid_key || '__openreplay_tabid', tabId);\n        };\n      });\n      app.attachStopCallback(() => {\n        window.open = wOpen;\n      });\n    }\n  }\n  isFlagEnabled(flagName) {\n    return this.featureFlags.isFlagEnabled(flagName);\n  }\n  onFlagsLoad(callback) {\n    var _a;\n    (_a = this.app) === null || _a === void 0 ? void 0 : _a.featureFlags.onFlagsLoad(callback);\n  }\n  clearPersistFlags() {\n    var _a;\n    (_a = this.app) === null || _a === void 0 ? void 0 : _a.featureFlags.clearPersistFlags();\n  }\n  reloadFlags() {\n    var _a;\n    return (_a = this.app) === null || _a === void 0 ? void 0 : _a.featureFlags.reloadFlags();\n  }\n  getFeatureFlag(flagName) {\n    var _a;\n    return (_a = this.app) === null || _a === void 0 ? void 0 : _a.featureFlags.getFeatureFlag(flagName);\n  }\n  getAllFeatureFlags() {\n    var _a;\n    return (_a = this.app) === null || _a === void 0 ? void 0 : _a.featureFlags.flags;\n  }\n  use(fn) {\n    return fn(this.app, this.options);\n  }\n  isActive() {\n    if (this.app === null) {\n      return false;\n    }\n    return this.app.active();\n  }\n  /**\n   * Creates a named hook that expects event name, data string and msg direction (up/down),\n   * it will skip any message bigger than 5 mb or event name bigger than 255 symbols\n   * msg direction is \"down\" (incoming) by default\n   *\n   * @returns {(msgType: string, data: string, dir: 'up' | 'down') => void}\n   * */\n  trackWs(channelName) {\n    if (this.app === null) {\n      return;\n    }\n    return this.app.trackWs(channelName);\n  }\n  start(startOpts) {\n    if (this.browserEnvCheck()) {\n      if (this.app === null) {\n        return Promise.reject(\"Browser doesn't support required api, or doNotTrack is active.\");\n      }\n      return this.app.start(startOpts);\n    } else {\n      return Promise.reject('Trying to start not in browser.');\n    }\n  }\n  browserEnvCheck() {\n    if (!IN_BROWSER) {\n      console.error(`OpenReplay: you are trying to start Tracker on a node.js environment. If you want to use OpenReplay with SSR, please, use componentDidMount or useEffect API for placing the \\`tracker.start()\\` line. Check documentation on ${DOCS_HOST}${DOCS_SETUP}`);\n      return false;\n    }\n    return true;\n  }\n  /**\n   * start buffering messages without starting the actual session, which gives user 30 seconds to \"activate\" and record\n   * session by calling start() on conditional trigger and we will then send buffered batch, so it won't get lost\n   * */\n  coldStart(startOpts, conditional) {\n    if (this.browserEnvCheck()) {\n      if (this.app === null) {\n        return Promise.reject('Tracker not initialized');\n      }\n      void this.app.coldStart(startOpts, conditional);\n    } else {\n      return Promise.reject('Trying to start not in browser.');\n    }\n  }\n  /**\n   * Starts offline session recording. Keep in mind that only user device time will be used for timestamps.\n   * (no backend delay sync)\n   *\n   * @param {Object} startOpts - options for session start, same as .start()\n   * @param {Function} onSessionSent - callback that will be called once session is fully sent\n   * @returns methods to manipulate buffer:\n   *\n   * saveBuffer - to save it in localStorage\n   *\n   * getBuffer - returns current buffer\n   *\n   * setBuffer - replaces current buffer with given\n   * */\n  startOfflineRecording(startOpts, onSessionSent) {\n    if (this.browserEnvCheck()) {\n      if (this.app === null) {\n        return Promise.reject('Tracker not initialized');\n      }\n      return this.app.offlineRecording(startOpts, onSessionSent);\n    } else {\n      return Promise.reject('Trying to start not in browser.');\n    }\n  }\n  /**\n   * Uploads the stored session buffer to backend\n   * @returns promise that resolves once messages are loaded, it has to be awaited\n   * so the session can be uploaded properly\n   * @resolve - if messages were loaded into service worker successfully\n   * @reject {string} - error message\n   * */\n  uploadOfflineRecording() {\n    if (this.app === null) {\n      return;\n    }\n    return this.app.uploadOfflineRecording();\n  }\n  stop() {\n    if (this.app === null) {\n      return;\n    }\n    this.app.stop();\n    return this.app.session.getSessionHash();\n  }\n  forceFlushBatch() {\n    if (this.app === null) {\n      return;\n    }\n    this.app.forceFlushBatch();\n  }\n  getSessionToken() {\n    if (this.app === null) {\n      return null;\n    }\n    return this.app.getSessionToken();\n  }\n  getSessionID() {\n    if (this.app === null) {\n      return null;\n    }\n    return this.app.getSessionID();\n  }\n  getTabId() {\n    if (this.app === null) {\n      return null;\n    }\n    return this.app.getTabId();\n  }\n  getUxId() {\n    if (this.app === null) {\n      return null;\n    }\n    return this.app.getUxtId();\n  }\n  sessionID() {\n    deprecationWarn(\"'sessionID' method\", \"'getSessionID' method\", '/');\n    return this.getSessionID();\n  }\n  getSessionURL(options) {\n    if (this.app === null) {\n      return undefined;\n    }\n    return this.app.getSessionURL(options);\n  }\n  setUserID(id) {\n    if (typeof id === 'string' && this.app !== null) {\n      this.app.session.setUserID(id);\n    }\n  }\n  userID(id) {\n    deprecationWarn(\"'userID' method\", \"'setUserID' method\", '/');\n    this.setUserID(id);\n  }\n  setUserAnonymousID(id) {\n    if (typeof id === 'string' && this.app !== null) {\n      this.app.send(UserAnonymousID(id));\n    }\n  }\n  userAnonymousID(id) {\n    deprecationWarn(\"'userAnonymousID' method\", \"'setUserAnonymousID' method\", '/');\n    this.setUserAnonymousID(id);\n  }\n  setMetadata(key, value) {\n    if (typeof key === 'string' && typeof value === 'string' && this.app !== null) {\n      this.app.session.setMetadata(key, value);\n    }\n  }\n  metadata(key, value) {\n    deprecationWarn(\"'metadata' method\", \"'setMetadata' method\", '/');\n    this.setMetadata(key, value);\n  }\n  event(key, payload = null, issue = false) {\n    if (typeof key === 'string' && this.app !== null) {\n      if (issue) {\n        return this.issue(key, payload);\n      } else {\n        try {\n          payload = JSON.stringify(payload);\n        } catch (e) {\n          return;\n        }\n        this.app.send(CustomEvent(key, payload));\n      }\n    }\n  }\n  issue(key, payload = null) {\n    if (typeof key === 'string' && this.app !== null) {\n      try {\n        payload = JSON.stringify(payload);\n      } catch (e) {\n        return;\n      }\n      this.app.send(CustomIssue(key, payload));\n    }\n  }\n}","map":{"version":3,"names":["App","DEFAULT_INGEST_POINT","default","UserAnonymousID","CustomEvent","CustomIssue","_Messages","Messages","SanitizeLevel","Connection","Console","Exception","getExceptionMessageFromEvent","getExceptionMessage","Img","Input","Mouse","Timing","Performance","Scroll","Viewport","CSSRules","Focus","Fonts","Network","ConstructedStyleSheets","Selection","Tabs","IN_BROWSER","deprecationWarn","DOCS_HOST","DOCS_SETUP","processOptions","obj","console","error","projectKey","projectID","toString","warn","sessionToken","API","constructor","options","_a","app","checkDoNotTrack","respectDoNotTrack","navigator","doNotTrack","window","signalStartIssue","reason","missingApi","req","XMLHttpRequest","orig","ingestPoint","open","send","JSON","stringify","trackerVersion","restartCanvasTracking","handleError","e","metadata","Error","msg","ErrorEvent","PromiseRejectionEvent","undefined","__OPENREPLAY__","__DISABLE_SECURE_MODE","location","protocol","failReason","conditions","push","condition","performance","String","prototype","length","join","mouse","network","flags","onFlagsLoad","wOpen","autoResetOnWindowOpen","resetTabOnWindowOpen","attachStartCallback","tabId","getTabId","sessStorage","sessionStorage","args","resetNextPageSession","removeItem","session_tabid_key","call","setItem","attachStopCallback","isFlagEnabled","flagName","featureFlags","callback","clearPersistFlags","reloadFlags","getFeatureFlag","getAllFeatureFlags","use","fn","isActive","active","trackWs","channelName","start","startOpts","browserEnvCheck","Promise","reject","coldStart","conditional","startOfflineRecording","onSessionSent","offlineRecording","uploadOfflineRecording","stop","session","getSessionHash","forceFlushBatch","getSessionToken","getSessionID","getUxId","getUxtId","sessionID","getSessionURL","setUserID","id","userID","setUserAnonymousID","userAnonymousID","setMetadata","key","value","event","payload","issue"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/lib/index.js"],"sourcesContent":["import App, { DEFAULT_INGEST_POINT } from './app/index.js';\nexport { default as App } from './app/index.js';\nimport { UserAnonymousID, CustomEvent, CustomIssue } from './app/messages.gen.js';\nimport * as _Messages from './app/messages.gen.js';\nexport const Messages = _Messages;\nexport { SanitizeLevel } from './app/sanitizer.js';\nimport Connection from './modules/connection.js';\nimport Console from './modules/console.js';\nimport Exception, { getExceptionMessageFromEvent, getExceptionMessage, } from './modules/exception.js';\nimport Img from './modules/img.js';\nimport Input from './modules/input.js';\nimport Mouse from './modules/mouse.js';\nimport Timing from './modules/timing.js';\nimport Performance from './modules/performance.js';\nimport Scroll from './modules/scroll.js';\nimport Viewport from './modules/viewport.js';\nimport CSSRules from './modules/cssrules.js';\nimport Focus from './modules/focus.js';\nimport Fonts from './modules/fonts.js';\nimport Network from './modules/network.js';\nimport ConstructedStyleSheets from './modules/constructedStyleSheets.js';\nimport Selection from './modules/selection.js';\nimport Tabs from './modules/tabs.js';\nimport { IN_BROWSER, deprecationWarn, DOCS_HOST } from './utils.js';\nconst DOCS_SETUP = '/installation/javascript-sdk';\nfunction processOptions(obj) {\n    if (obj == null) {\n        console.error(`OpenReplay: invalid options argument type. Please, check documentation on ${DOCS_HOST}${DOCS_SETUP}`);\n        return false;\n    }\n    if (typeof obj.projectKey !== 'string') {\n        if (typeof obj.projectKey !== 'number') {\n            if (typeof obj.projectID !== 'number') {\n                // Back compatability\n                console.error(`OpenReplay: projectKey is missing or wrong type (string is expected). Please, check ${DOCS_HOST}${DOCS_SETUP} for more information.`);\n                return false;\n            }\n            else {\n                obj.projectKey = obj.projectID.toString();\n                deprecationWarn('`projectID` option', '`projectKey` option', DOCS_SETUP);\n            }\n        }\n        else {\n            console.warn('OpenReplay: projectKey is expected to have a string type.');\n            obj.projectKey = obj.projectKey.toString();\n        }\n    }\n    if (obj.sessionToken != null) {\n        deprecationWarn('`sessionToken` option', '`sessionHash` start() option', '/');\n    }\n    return true;\n}\nexport default class API {\n    constructor(options) {\n        var _a;\n        this.options = options;\n        this.app = null;\n        this.checkDoNotTrack = () => {\n            return (this.options.respectDoNotTrack &&\n                (navigator.doNotTrack == '1' ||\n                    // @ts-ignore\n                    window.doNotTrack == '1'));\n        };\n        this.signalStartIssue = (reason, missingApi) => {\n            const doNotTrack = this.checkDoNotTrack();\n            const req = new XMLHttpRequest();\n            const orig = this.options.ingestPoint || DEFAULT_INGEST_POINT;\n            req.open('POST', orig + '/v1/web/not-started');\n            req.send(JSON.stringify({\n                trackerVersion: '12.0.3',\n                projectKey: this.options.projectKey,\n                doNotTrack,\n                reason,\n                missingApi,\n            }));\n        };\n        this.restartCanvasTracking = () => {\n            if (this.app === null) {\n                return;\n            }\n            this.app.restartCanvasTracking();\n        };\n        this.handleError = (e, metadata = {}) => {\n            if (this.app === null) {\n                return;\n            }\n            if (e instanceof Error) {\n                const msg = getExceptionMessage(e, [], metadata);\n                this.app.send(msg);\n            }\n            else if (e instanceof ErrorEvent ||\n                ('PromiseRejectionEvent' in window && e instanceof PromiseRejectionEvent)) {\n                const msg = getExceptionMessageFromEvent(e, undefined, metadata);\n                if (msg != null) {\n                    this.app.send(msg);\n                }\n            }\n        };\n        if (!IN_BROWSER || !processOptions(options)) {\n            return;\n        }\n        if (window.__OPENREPLAY__) {\n            console.error('OpenReplay: one tracker instance has been initialised already');\n            return;\n        }\n        if (!options.__DISABLE_SECURE_MODE && location.protocol !== 'https:') {\n            console.error('OpenReplay: Your website must be publicly accessible and running on SSL in order for OpenReplay to properly capture and replay the user session. You can disable this check by setting `__DISABLE_SECURE_MODE` option to `true` if you are testing in localhost. Keep in mind, that asset files on a local machine are not available to the outside world. This might affect tracking if you use css files.');\n            return;\n        }\n        const doNotTrack = this.checkDoNotTrack();\n        const failReason = [];\n        const conditions = [\n            'Map',\n            'Set',\n            'MutationObserver',\n            'performance',\n            'timing',\n            'startsWith',\n            'Blob',\n            'Worker',\n        ];\n        if (doNotTrack) {\n            failReason.push('doNotTrack');\n        }\n        else {\n            for (const condition of conditions) {\n                if (condition === 'timing') {\n                    if ('performance' in window && !(condition in performance)) {\n                        failReason.push(condition);\n                        break;\n                    }\n                }\n                else if (condition === 'startsWith') {\n                    if (!(condition in String.prototype)) {\n                        failReason.push(condition);\n                        break;\n                    }\n                }\n                else {\n                    if (!(condition in window)) {\n                        failReason.push(condition);\n                        break;\n                    }\n                }\n            }\n        }\n        if (failReason.length > 0) {\n            const missingApi = failReason.join(',');\n            console.error(`OpenReplay: browser doesn't support API required for tracking or doNotTrack is set to 1. Reason: ${missingApi}`);\n            this.signalStartIssue('missing_api', failReason);\n            return;\n        }\n        const app = new App(options.projectKey, options.sessionToken, options, this.signalStartIssue);\n        this.app = app;\n        Viewport(app);\n        CSSRules(app);\n        ConstructedStyleSheets(app);\n        Connection(app);\n        Console(app, options);\n        Exception(app, options);\n        Img(app);\n        Input(app, options);\n        Mouse(app, options.mouse);\n        Timing(app, options);\n        Performance(app, options);\n        Scroll(app);\n        Focus(app);\n        Fonts(app);\n        Network(app, options.network);\n        Selection(app);\n        Tabs(app);\n        window.__OPENREPLAY__ = this;\n        if ((_a = options.flags) === null || _a === void 0 ? void 0 : _a.onFlagsLoad) {\n            this.onFlagsLoad(options.flags.onFlagsLoad);\n        }\n        const wOpen = window.open;\n        if (options.autoResetOnWindowOpen || options.resetTabOnWindowOpen) {\n            app.attachStartCallback(() => {\n                var _a;\n                const tabId = app.getTabId();\n                const sessStorage = (_a = app.sessionStorage) !== null && _a !== void 0 ? _a : window.sessionStorage;\n                // @ts-ignore ?\n                window.open = function (...args) {\n                    if (options.autoResetOnWindowOpen) {\n                        app.resetNextPageSession(true);\n                    }\n                    if (options.resetTabOnWindowOpen) {\n                        sessStorage.removeItem(options.session_tabid_key || '__openreplay_tabid');\n                    }\n                    wOpen.call(window, ...args);\n                    app.resetNextPageSession(false);\n                    sessStorage.setItem(options.session_tabid_key || '__openreplay_tabid', tabId);\n                };\n            });\n            app.attachStopCallback(() => {\n                window.open = wOpen;\n            });\n        }\n    }\n    isFlagEnabled(flagName) {\n        return this.featureFlags.isFlagEnabled(flagName);\n    }\n    onFlagsLoad(callback) {\n        var _a;\n        (_a = this.app) === null || _a === void 0 ? void 0 : _a.featureFlags.onFlagsLoad(callback);\n    }\n    clearPersistFlags() {\n        var _a;\n        (_a = this.app) === null || _a === void 0 ? void 0 : _a.featureFlags.clearPersistFlags();\n    }\n    reloadFlags() {\n        var _a;\n        return (_a = this.app) === null || _a === void 0 ? void 0 : _a.featureFlags.reloadFlags();\n    }\n    getFeatureFlag(flagName) {\n        var _a;\n        return (_a = this.app) === null || _a === void 0 ? void 0 : _a.featureFlags.getFeatureFlag(flagName);\n    }\n    getAllFeatureFlags() {\n        var _a;\n        return (_a = this.app) === null || _a === void 0 ? void 0 : _a.featureFlags.flags;\n    }\n    use(fn) {\n        return fn(this.app, this.options);\n    }\n    isActive() {\n        if (this.app === null) {\n            return false;\n        }\n        return this.app.active();\n    }\n    /**\n     * Creates a named hook that expects event name, data string and msg direction (up/down),\n     * it will skip any message bigger than 5 mb or event name bigger than 255 symbols\n     * msg direction is \"down\" (incoming) by default\n     *\n     * @returns {(msgType: string, data: string, dir: 'up' | 'down') => void}\n     * */\n    trackWs(channelName) {\n        if (this.app === null) {\n            return;\n        }\n        return this.app.trackWs(channelName);\n    }\n    start(startOpts) {\n        if (this.browserEnvCheck()) {\n            if (this.app === null) {\n                return Promise.reject(\"Browser doesn't support required api, or doNotTrack is active.\");\n            }\n            return this.app.start(startOpts);\n        }\n        else {\n            return Promise.reject('Trying to start not in browser.');\n        }\n    }\n    browserEnvCheck() {\n        if (!IN_BROWSER) {\n            console.error(`OpenReplay: you are trying to start Tracker on a node.js environment. If you want to use OpenReplay with SSR, please, use componentDidMount or useEffect API for placing the \\`tracker.start()\\` line. Check documentation on ${DOCS_HOST}${DOCS_SETUP}`);\n            return false;\n        }\n        return true;\n    }\n    /**\n     * start buffering messages without starting the actual session, which gives user 30 seconds to \"activate\" and record\n     * session by calling start() on conditional trigger and we will then send buffered batch, so it won't get lost\n     * */\n    coldStart(startOpts, conditional) {\n        if (this.browserEnvCheck()) {\n            if (this.app === null) {\n                return Promise.reject('Tracker not initialized');\n            }\n            void this.app.coldStart(startOpts, conditional);\n        }\n        else {\n            return Promise.reject('Trying to start not in browser.');\n        }\n    }\n    /**\n     * Starts offline session recording. Keep in mind that only user device time will be used for timestamps.\n     * (no backend delay sync)\n     *\n     * @param {Object} startOpts - options for session start, same as .start()\n     * @param {Function} onSessionSent - callback that will be called once session is fully sent\n     * @returns methods to manipulate buffer:\n     *\n     * saveBuffer - to save it in localStorage\n     *\n     * getBuffer - returns current buffer\n     *\n     * setBuffer - replaces current buffer with given\n     * */\n    startOfflineRecording(startOpts, onSessionSent) {\n        if (this.browserEnvCheck()) {\n            if (this.app === null) {\n                return Promise.reject('Tracker not initialized');\n            }\n            return this.app.offlineRecording(startOpts, onSessionSent);\n        }\n        else {\n            return Promise.reject('Trying to start not in browser.');\n        }\n    }\n    /**\n     * Uploads the stored session buffer to backend\n     * @returns promise that resolves once messages are loaded, it has to be awaited\n     * so the session can be uploaded properly\n     * @resolve - if messages were loaded into service worker successfully\n     * @reject {string} - error message\n     * */\n    uploadOfflineRecording() {\n        if (this.app === null) {\n            return;\n        }\n        return this.app.uploadOfflineRecording();\n    }\n    stop() {\n        if (this.app === null) {\n            return;\n        }\n        this.app.stop();\n        return this.app.session.getSessionHash();\n    }\n    forceFlushBatch() {\n        if (this.app === null) {\n            return;\n        }\n        this.app.forceFlushBatch();\n    }\n    getSessionToken() {\n        if (this.app === null) {\n            return null;\n        }\n        return this.app.getSessionToken();\n    }\n    getSessionID() {\n        if (this.app === null) {\n            return null;\n        }\n        return this.app.getSessionID();\n    }\n    getTabId() {\n        if (this.app === null) {\n            return null;\n        }\n        return this.app.getTabId();\n    }\n    getUxId() {\n        if (this.app === null) {\n            return null;\n        }\n        return this.app.getUxtId();\n    }\n    sessionID() {\n        deprecationWarn(\"'sessionID' method\", \"'getSessionID' method\", '/');\n        return this.getSessionID();\n    }\n    getSessionURL(options) {\n        if (this.app === null) {\n            return undefined;\n        }\n        return this.app.getSessionURL(options);\n    }\n    setUserID(id) {\n        if (typeof id === 'string' && this.app !== null) {\n            this.app.session.setUserID(id);\n        }\n    }\n    userID(id) {\n        deprecationWarn(\"'userID' method\", \"'setUserID' method\", '/');\n        this.setUserID(id);\n    }\n    setUserAnonymousID(id) {\n        if (typeof id === 'string' && this.app !== null) {\n            this.app.send(UserAnonymousID(id));\n        }\n    }\n    userAnonymousID(id) {\n        deprecationWarn(\"'userAnonymousID' method\", \"'setUserAnonymousID' method\", '/');\n        this.setUserAnonymousID(id);\n    }\n    setMetadata(key, value) {\n        if (typeof key === 'string' && typeof value === 'string' && this.app !== null) {\n            this.app.session.setMetadata(key, value);\n        }\n    }\n    metadata(key, value) {\n        deprecationWarn(\"'metadata' method\", \"'setMetadata' method\", '/');\n        this.setMetadata(key, value);\n    }\n    event(key, payload = null, issue = false) {\n        if (typeof key === 'string' && this.app !== null) {\n            if (issue) {\n                return this.issue(key, payload);\n            }\n            else {\n                try {\n                    payload = JSON.stringify(payload);\n                }\n                catch (e) {\n                    return;\n                }\n                this.app.send(CustomEvent(key, payload));\n            }\n        }\n    }\n    issue(key, payload = null) {\n        if (typeof key === 'string' && this.app !== null) {\n            try {\n                payload = JSON.stringify(payload);\n            }\n            catch (e) {\n                return;\n            }\n            this.app.send(CustomIssue(key, payload));\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}