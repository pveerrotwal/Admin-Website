{"ast":null,"code":"\"use strict\";\n\n/**\n * I took inspiration in few stack exchange posts\n * and Tencent vConsole library (MIT)\n * by wrapping the XMLHttpRequest object in a Proxy\n * we can intercept the network requests\n * in not-so-hacky way\n * */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.XHRProxyHandler = void 0;\nconst networkMessage_js_1 = __importStar(require(\"./networkMessage.js\"));\nconst utils_js_1 = require(\"./utils.js\");\nclass XHRProxyHandler {\n  constructor(XMLReq, ignoredHeaders, setSessionTokenHeader, sanitize, sendMessage, isServiceUrl, tokenUrlMatcher) {\n    this.ignoredHeaders = ignoredHeaders;\n    this.setSessionTokenHeader = setSessionTokenHeader;\n    this.sanitize = sanitize;\n    this.sendMessage = sendMessage;\n    this.isServiceUrl = isServiceUrl;\n    this.tokenUrlMatcher = tokenUrlMatcher;\n    this.XMLReq = XMLReq;\n    this.XMLReq.onreadystatechange = () => {\n      this.onReadyStateChange();\n    };\n    this.XMLReq.onabort = () => {\n      this.onAbort();\n    };\n    this.XMLReq.ontimeout = () => {\n      this.onTimeout();\n    };\n    this.item = new networkMessage_js_1.default(ignoredHeaders, setSessionTokenHeader, sanitize);\n    this.item.requestType = 'xhr';\n  }\n  get(target, key) {\n    switch (key) {\n      case 'open':\n        return this.getOpen(target);\n      case 'send':\n        this.setSessionTokenHeader((name, value) => {\n          if (this.tokenUrlMatcher !== undefined) {\n            if (!this.tokenUrlMatcher(this.item.url)) {\n              return;\n            }\n          }\n          target.setRequestHeader(name, value);\n        });\n        return this.getSend(target);\n      case 'setRequestHeader':\n        return this.getSetRequestHeader(target);\n      default:\n        // eslint-disable-next-line no-case-declarations\n        const value = Reflect.get(target, key);\n        if (typeof value === 'function') {\n          return value.bind(target);\n        } else {\n          return value;\n        }\n    }\n  }\n  set(target, key, value) {\n    switch (key) {\n      case 'onreadystatechange':\n        return this.setOnReadyStateChange(target, key, value);\n      case 'onabort':\n        return this.setOnAbort(target, key, value);\n      case 'ontimeout':\n        return this.setOnTimeout(target, key, value);\n      default:\n      // not tracked methods\n    }\n    return Reflect.set(target, key, value);\n  }\n  onReadyStateChange() {\n    if (this.item.url && this.isServiceUrl(this.item.url)) return;\n    this.item.readyState = this.XMLReq.readyState;\n    this.item.responseType = this.XMLReq.responseType;\n    this.item.endTime = performance.now();\n    this.item.duration = this.item.endTime - this.item.startTime;\n    this.updateItemByReadyState();\n    setTimeout(() => {\n      this.item.response = (0, utils_js_1.getStringResponseByType)(this.item.responseType, this.item.response);\n    }, 0);\n    if (this.XMLReq.readyState === networkMessage_js_1.RequestState.DONE) {\n      this.sendMessage(this.item.getMessage());\n    }\n  }\n  onAbort() {\n    this.item.cancelState = 1;\n    this.item.statusText = 'Abort';\n    this.sendMessage(this.item.getMessage());\n  }\n  onTimeout() {\n    this.item.cancelState = 3;\n    this.item.statusText = 'Timeout';\n    this.sendMessage(this.item.getMessage());\n  }\n  getOpen(target) {\n    const targetFunction = Reflect.get(target, 'open');\n    return (...args) => {\n      const method = args[0];\n      const url = args[1];\n      this.item.method = method ? method.toUpperCase() : 'GET';\n      this.item.url = url || '';\n      this.item.name = this.item.url.replace(new RegExp('/*$'), '').split('/').pop() || '';\n      this.item.getData = (0, utils_js_1.genGetDataByUrl)(this.item.url, {});\n      return targetFunction.apply(target, args);\n    };\n  }\n  getSend(target) {\n    const targetFunction = Reflect.get(target, 'send');\n    return (...args) => {\n      const data = args[0];\n      this.item.requestData = (0, utils_js_1.genStringBody)(data);\n      return targetFunction.apply(target, args);\n    };\n  }\n  getSetRequestHeader(target) {\n    const targetFunction = Reflect.get(target, 'setRequestHeader');\n    return (...args) => {\n      if (!this.item.requestHeader) {\n        this.item.requestHeader = {};\n      }\n      // @ts-ignore\n      this.item.requestHeader[args[0]] = args[1];\n      return targetFunction.apply(target, args);\n    };\n  }\n  setOnReadyStateChange(target, key, orscFunction) {\n    return Reflect.set(target, key, (...args) => {\n      this.onReadyStateChange();\n      orscFunction === null || orscFunction === void 0 ? void 0 : orscFunction.apply(target, args);\n    });\n  }\n  setOnAbort(target, key, oaFunction) {\n    return Reflect.set(target, key, (...args) => {\n      this.onAbort();\n      oaFunction.apply(target, args);\n    });\n  }\n  setOnTimeout(target, key, otFunction) {\n    return Reflect.set(target, key, (...args) => {\n      this.onTimeout();\n      otFunction.apply(target, args);\n    });\n  }\n  /**\n   * Update item's properties according to readyState.\n   */\n  updateItemByReadyState() {\n    switch (this.XMLReq.readyState) {\n      case networkMessage_js_1.RequestState.UNSENT:\n      case networkMessage_js_1.RequestState.OPENED:\n        this.item.status = networkMessage_js_1.RequestState.UNSENT;\n        this.item.statusText = 'Pending';\n        if (!this.item.startTime) {\n          this.item.startTime = performance.now();\n        }\n        break;\n      case networkMessage_js_1.RequestState.HEADERS_RECEIVED:\n        this.item.status = this.XMLReq.status;\n        this.item.statusText = 'Loading';\n        this.item.header = {};\n        // eslint-disable-next-line no-case-declarations\n        const header = this.XMLReq.getAllResponseHeaders() || '',\n          headerArr = header.split('\\n');\n        // extract plain text to key-value format\n        for (let i = 0; i < headerArr.length; i++) {\n          const line = headerArr[i];\n          if (!line) {\n            continue;\n          }\n          const arr = line.split(': ');\n          const key = arr[0];\n          this.item.header[key] = arr.slice(1).join(': ');\n        }\n        break;\n      case networkMessage_js_1.RequestState.LOADING:\n        this.item.status = this.XMLReq.status;\n        this.item.statusText = 'Loading';\n        if (!!this.XMLReq.response && this.XMLReq.response.length) {\n          this.item.responseSize = this.XMLReq.response.length;\n          this.item.responseSizeText = (0, utils_js_1.formatByteSize)(this.item.responseSize);\n        }\n        break;\n      case networkMessage_js_1.RequestState.DONE:\n        // `XMLReq.abort()` will change `status` from 200 to 0, so use previous value in this case\n        this.item.status = this.XMLReq.status || this.item.status || 0;\n        // show status code when request completed\n        this.item.statusText = String(this.item.status);\n        this.item.endTime = performance.now();\n        this.item.duration = this.item.endTime - (this.item.startTime || this.item.endTime);\n        this.item.response = this.XMLReq.response;\n        if (!!this.XMLReq.response && this.XMLReq.response.length) {\n          this.item.responseSize = this.XMLReq.response.length;\n          this.item.responseSizeText = (0, utils_js_1.formatByteSize)(this.item.responseSize);\n        }\n        break;\n      default:\n        this.item.status = this.XMLReq.status;\n        this.item.statusText = 'Unknown';\n        break;\n    }\n  }\n}\nexports.XHRProxyHandler = XHRProxyHandler;\nclass XHRProxy {\n  static create(ignoredHeaders, setSessionTokenHeader, sanitize, sendMessage, isServiceUrl, tokenUrlMatcher) {\n    return new Proxy(XMLHttpRequest, {\n      construct(original) {\n        const XMLReq = new original();\n        return new Proxy(XMLReq, new XHRProxyHandler(XMLReq, ignoredHeaders, setSessionTokenHeader, sanitize, sendMessage, isServiceUrl, tokenUrlMatcher));\n      }\n    });\n  }\n}\nexports.default = XHRProxy;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","XHRProxyHandler","networkMessage_js_1","require","utils_js_1","constructor","XMLReq","ignoredHeaders","setSessionTokenHeader","sanitize","sendMessage","isServiceUrl","tokenUrlMatcher","onreadystatechange","onReadyStateChange","onabort","onAbort","ontimeout","onTimeout","item","default","requestType","target","key","getOpen","name","url","setRequestHeader","getSend","getSetRequestHeader","Reflect","bind","set","setOnReadyStateChange","setOnAbort","setOnTimeout","readyState","responseType","endTime","performance","now","duration","startTime","updateItemByReadyState","setTimeout","response","getStringResponseByType","RequestState","DONE","getMessage","cancelState","statusText","targetFunction","args","method","toUpperCase","replace","RegExp","split","pop","getData","genGetDataByUrl","apply","data","requestData","genStringBody","requestHeader","orscFunction","oaFunction","otFunction","UNSENT","OPENED","status","HEADERS_RECEIVED","header","getAllResponseHeaders","headerArr","i","length","line","arr","slice","join","LOADING","responseSize","responseSizeText","formatByteSize","String","XHRProxy","Proxy","XMLHttpRequest","construct","original"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/cjs/modules/Network/xhrProxy.js"],"sourcesContent":["\"use strict\";\n/**\n * I took inspiration in few stack exchange posts\n * and Tencent vConsole library (MIT)\n * by wrapping the XMLHttpRequest object in a Proxy\n * we can intercept the network requests\n * in not-so-hacky way\n * */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.XHRProxyHandler = void 0;\nconst networkMessage_js_1 = __importStar(require(\"./networkMessage.js\"));\nconst utils_js_1 = require(\"./utils.js\");\nclass XHRProxyHandler {\n    constructor(XMLReq, ignoredHeaders, setSessionTokenHeader, sanitize, sendMessage, isServiceUrl, tokenUrlMatcher) {\n        this.ignoredHeaders = ignoredHeaders;\n        this.setSessionTokenHeader = setSessionTokenHeader;\n        this.sanitize = sanitize;\n        this.sendMessage = sendMessage;\n        this.isServiceUrl = isServiceUrl;\n        this.tokenUrlMatcher = tokenUrlMatcher;\n        this.XMLReq = XMLReq;\n        this.XMLReq.onreadystatechange = () => {\n            this.onReadyStateChange();\n        };\n        this.XMLReq.onabort = () => {\n            this.onAbort();\n        };\n        this.XMLReq.ontimeout = () => {\n            this.onTimeout();\n        };\n        this.item = new networkMessage_js_1.default(ignoredHeaders, setSessionTokenHeader, sanitize);\n        this.item.requestType = 'xhr';\n    }\n    get(target, key) {\n        switch (key) {\n            case 'open':\n                return this.getOpen(target);\n            case 'send':\n                this.setSessionTokenHeader((name, value) => {\n                    if (this.tokenUrlMatcher !== undefined) {\n                        if (!this.tokenUrlMatcher(this.item.url)) {\n                            return;\n                        }\n                    }\n                    target.setRequestHeader(name, value);\n                });\n                return this.getSend(target);\n            case 'setRequestHeader':\n                return this.getSetRequestHeader(target);\n            default:\n                // eslint-disable-next-line no-case-declarations\n                const value = Reflect.get(target, key);\n                if (typeof value === 'function') {\n                    return value.bind(target);\n                }\n                else {\n                    return value;\n                }\n        }\n    }\n    set(target, key, value) {\n        switch (key) {\n            case 'onreadystatechange':\n                return this.setOnReadyStateChange(target, key, value);\n            case 'onabort':\n                return this.setOnAbort(target, key, value);\n            case 'ontimeout':\n                return this.setOnTimeout(target, key, value);\n            default:\n            // not tracked methods\n        }\n        return Reflect.set(target, key, value);\n    }\n    onReadyStateChange() {\n        if (this.item.url && this.isServiceUrl(this.item.url))\n            return;\n        this.item.readyState = this.XMLReq.readyState;\n        this.item.responseType = this.XMLReq.responseType;\n        this.item.endTime = performance.now();\n        this.item.duration = this.item.endTime - this.item.startTime;\n        this.updateItemByReadyState();\n        setTimeout(() => {\n            this.item.response = (0, utils_js_1.getStringResponseByType)(this.item.responseType, this.item.response);\n        }, 0);\n        if (this.XMLReq.readyState === networkMessage_js_1.RequestState.DONE) {\n            this.sendMessage(this.item.getMessage());\n        }\n    }\n    onAbort() {\n        this.item.cancelState = 1;\n        this.item.statusText = 'Abort';\n        this.sendMessage(this.item.getMessage());\n    }\n    onTimeout() {\n        this.item.cancelState = 3;\n        this.item.statusText = 'Timeout';\n        this.sendMessage(this.item.getMessage());\n    }\n    getOpen(target) {\n        const targetFunction = Reflect.get(target, 'open');\n        return (...args) => {\n            const method = args[0];\n            const url = args[1];\n            this.item.method = method ? method.toUpperCase() : 'GET';\n            this.item.url = url || '';\n            this.item.name = this.item.url.replace(new RegExp('/*$'), '').split('/').pop() || '';\n            this.item.getData = (0, utils_js_1.genGetDataByUrl)(this.item.url, {});\n            return targetFunction.apply(target, args);\n        };\n    }\n    getSend(target) {\n        const targetFunction = Reflect.get(target, 'send');\n        return (...args) => {\n            const data = args[0];\n            this.item.requestData = (0, utils_js_1.genStringBody)(data);\n            return targetFunction.apply(target, args);\n        };\n    }\n    getSetRequestHeader(target) {\n        const targetFunction = Reflect.get(target, 'setRequestHeader');\n        return (...args) => {\n            if (!this.item.requestHeader) {\n                this.item.requestHeader = {};\n            }\n            // @ts-ignore\n            this.item.requestHeader[args[0]] = args[1];\n            return targetFunction.apply(target, args);\n        };\n    }\n    setOnReadyStateChange(target, key, orscFunction) {\n        return Reflect.set(target, key, (...args) => {\n            this.onReadyStateChange();\n            orscFunction === null || orscFunction === void 0 ? void 0 : orscFunction.apply(target, args);\n        });\n    }\n    setOnAbort(target, key, oaFunction) {\n        return Reflect.set(target, key, (...args) => {\n            this.onAbort();\n            oaFunction.apply(target, args);\n        });\n    }\n    setOnTimeout(target, key, otFunction) {\n        return Reflect.set(target, key, (...args) => {\n            this.onTimeout();\n            otFunction.apply(target, args);\n        });\n    }\n    /**\n     * Update item's properties according to readyState.\n     */\n    updateItemByReadyState() {\n        switch (this.XMLReq.readyState) {\n            case networkMessage_js_1.RequestState.UNSENT:\n            case networkMessage_js_1.RequestState.OPENED:\n                this.item.status = networkMessage_js_1.RequestState.UNSENT;\n                this.item.statusText = 'Pending';\n                if (!this.item.startTime) {\n                    this.item.startTime = performance.now();\n                }\n                break;\n            case networkMessage_js_1.RequestState.HEADERS_RECEIVED:\n                this.item.status = this.XMLReq.status;\n                this.item.statusText = 'Loading';\n                this.item.header = {};\n                // eslint-disable-next-line no-case-declarations\n                const header = this.XMLReq.getAllResponseHeaders() || '', headerArr = header.split('\\n');\n                // extract plain text to key-value format\n                for (let i = 0; i < headerArr.length; i++) {\n                    const line = headerArr[i];\n                    if (!line) {\n                        continue;\n                    }\n                    const arr = line.split(': ');\n                    const key = arr[0];\n                    this.item.header[key] = arr.slice(1).join(': ');\n                }\n                break;\n            case networkMessage_js_1.RequestState.LOADING:\n                this.item.status = this.XMLReq.status;\n                this.item.statusText = 'Loading';\n                if (!!this.XMLReq.response && this.XMLReq.response.length) {\n                    this.item.responseSize = this.XMLReq.response.length;\n                    this.item.responseSizeText = (0, utils_js_1.formatByteSize)(this.item.responseSize);\n                }\n                break;\n            case networkMessage_js_1.RequestState.DONE:\n                // `XMLReq.abort()` will change `status` from 200 to 0, so use previous value in this case\n                this.item.status = this.XMLReq.status || this.item.status || 0;\n                // show status code when request completed\n                this.item.statusText = String(this.item.status);\n                this.item.endTime = performance.now();\n                this.item.duration = this.item.endTime - (this.item.startTime || this.item.endTime);\n                this.item.response = this.XMLReq.response;\n                if (!!this.XMLReq.response && this.XMLReq.response.length) {\n                    this.item.responseSize = this.XMLReq.response.length;\n                    this.item.responseSizeText = (0, utils_js_1.formatByteSize)(this.item.responseSize);\n                }\n                break;\n            default:\n                this.item.status = this.XMLReq.status;\n                this.item.statusText = 'Unknown';\n                break;\n        }\n    }\n}\nexports.XHRProxyHandler = XHRProxyHandler;\nclass XHRProxy {\n    static create(ignoredHeaders, setSessionTokenHeader, sanitize, sendMessage, isServiceUrl, tokenUrlMatcher) {\n        return new Proxy(XMLHttpRequest, {\n            construct(original) {\n                const XMLReq = new original();\n                return new Proxy(XMLReq, new XHRProxyHandler(XMLReq, ignoredHeaders, setSessionTokenHeader, sanitize, sendMessage, isServiceUrl, tokenUrlMatcher));\n            },\n        });\n    }\n}\nexports.default = XHRProxy;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}