{"ast":null,"code":"import { hasTag, isSVGElement, isDocument } from '../app/guards.js';\nimport { normSpaces, hasOpenreplayAttribute, getLabelAttribute, now } from '../utils.js';\nimport { MouseMove, MouseClick, MouseThrashing } from '../app/messages.gen.js';\nimport { getInputLabel } from './input.js';\nimport { finder } from '@medv/finder';\nfunction _getSelector(target, document, options) {\n  const selector = finder(target, {\n    root: document.body,\n    seedMinLength: 3,\n    optimizedMinLength: (options === null || options === void 0 ? void 0 : options.minSelectorDepth) || 2,\n    threshold: (options === null || options === void 0 ? void 0 : options.nthThreshold) || 1000,\n    maxNumberOfTries: (options === null || options === void 0 ? void 0 : options.maxOptimiseTries) || 10000\n  });\n  return selector;\n}\nfunction isClickable(element) {\n  const tag = element.tagName.toUpperCase();\n  return tag === 'BUTTON' || tag === 'A' || tag === 'LI' || tag === 'SELECT' || tag === 'TR' || tag === 'TH' || element.onclick != null || element.getAttribute('role') === 'button';\n  //|| element.className.includes(\"btn\")\n  // MBTODO: intercept addEventListener\n}\n//TODO: fix (typescript is not sure about target variable after assignation of svg)\nfunction getTarget(target, document) {\n  if (target instanceof Element) {\n    return _getTarget(target, document);\n  }\n  return null;\n}\nfunction _getTarget(target, document) {\n  let element = target;\n  while (element !== null && element !== document.documentElement) {\n    if (hasOpenreplayAttribute(element, 'masked')) {\n      return null;\n    }\n    element = element.parentElement;\n  }\n  if (isSVGElement(target)) {\n    let owner = target.ownerSVGElement;\n    while (owner !== null) {\n      target = owner;\n      owner = owner.ownerSVGElement;\n    }\n  }\n  element = target;\n  while (element !== null && element !== document.documentElement) {\n    const tag = element.tagName.toUpperCase();\n    if (tag === 'LABEL') {\n      return null;\n    }\n    if (tag === 'INPUT') {\n      return element;\n    }\n    if (isClickable(element) || getLabelAttribute(element) !== null) {\n      return element;\n    }\n    element = element.parentElement;\n  }\n  return target === document.documentElement ? null : target;\n}\nexport default function (app, options) {\n  const {\n    disableClickmaps = false\n  } = options || {};\n  function getTargetLabel(target) {\n    const dl = getLabelAttribute(target);\n    if (dl !== null) {\n      return dl;\n    }\n    if (hasTag(target, 'input')) {\n      return getInputLabel(target);\n    }\n    if (isClickable(target)) {\n      let label = '';\n      if (target instanceof HTMLElement) {\n        label = app.sanitizer.getInnerTextSecure(target);\n      }\n      label = label || target.id || target.className;\n      return normSpaces(label).slice(0, 100);\n    }\n    return '';\n  }\n  let mousePositionX = -1;\n  let mousePositionY = -1;\n  let mousePositionChanged = false;\n  let mouseTarget = null;\n  let mouseTargetTime = 0;\n  let selectorMap = {};\n  let velocity = 0;\n  let direction = 0;\n  let directionChangeCount = 0;\n  let distance = 0;\n  let checkIntervalId;\n  const shakeThreshold = 0.008;\n  const shakeCheckInterval = 225;\n  function checkMouseShaking() {\n    const nextVelocity = distance / shakeCheckInterval;\n    if (!velocity) {\n      velocity = nextVelocity;\n      return;\n    }\n    const acceleration = (nextVelocity - velocity) / shakeCheckInterval;\n    if (directionChangeCount > 4 && acceleration > shakeThreshold) {\n      app.send(MouseThrashing(now()));\n    }\n    distance = 0;\n    directionChangeCount = 0;\n    velocity = nextVelocity;\n  }\n  app.attachStartCallback(() => {\n    checkIntervalId = setInterval(() => checkMouseShaking(), shakeCheckInterval);\n  });\n  app.attachStopCallback(() => {\n    mousePositionX = -1;\n    mousePositionY = -1;\n    mousePositionChanged = false;\n    mouseTarget = null;\n    selectorMap = {};\n    if (checkIntervalId) {\n      clearInterval(checkIntervalId);\n    }\n  });\n  const sendMouseMove = () => {\n    if (mousePositionChanged) {\n      app.send(MouseMove(mousePositionX, mousePositionY));\n      mousePositionChanged = false;\n    }\n  };\n  const patchDocument = (document, topframe = false) => {\n    function getSelector(id, target, options) {\n      return selectorMap[id] = selectorMap[id] || _getSelector(target, document, options);\n    }\n    const attachListener = topframe ? app.attachEventListener.bind(app) // attached/removed on start/stop\n    : app.nodes.attachNodeListener.bind(app.nodes); // attached/removed on node register/unregister\n    attachListener(document.documentElement, 'mouseover', e => {\n      const target = getTarget(e.target, document);\n      if (target !== mouseTarget) {\n        mouseTarget = target;\n        mouseTargetTime = performance.now();\n      }\n    });\n    attachListener(document, 'mousemove', e => {\n      const [left, top] = app.observer.getDocumentOffset(document); // MBTODO?: document-id related message\n      mousePositionX = e.clientX + left;\n      mousePositionY = e.clientY + top;\n      mousePositionChanged = true;\n      const nextDirection = Math.sign(e.movementX);\n      distance += Math.abs(e.movementX) + Math.abs(e.movementY);\n      if (nextDirection !== direction) {\n        direction = nextDirection;\n        directionChangeCount++;\n      }\n    }, false);\n    attachListener(document, 'click', e => {\n      const target = getTarget(e.target, document);\n      if (!e.clientX && !e.clientY || target === null) {\n        return;\n      }\n      const id = app.nodes.getID(target);\n      if (id !== undefined) {\n        sendMouseMove();\n        app.send(MouseClick(id, mouseTarget === target ? Math.round(performance.now() - mouseTargetTime) : 0, getTargetLabel(target), isClickable(target) && !disableClickmaps ? getSelector(id, target, options) : ''), true);\n      }\n      mouseTarget = null;\n    });\n  };\n  app.nodes.attachNodeCallback(node => {\n    if (isDocument(node)) {\n      patchDocument(node);\n    }\n  });\n  patchDocument(document, true);\n  app.ticker.attach(sendMouseMove, (options === null || options === void 0 ? void 0 : options.trackingOffset) || 7);\n}","map":{"version":3,"names":["hasTag","isSVGElement","isDocument","normSpaces","hasOpenreplayAttribute","getLabelAttribute","now","MouseMove","MouseClick","MouseThrashing","getInputLabel","finder","_getSelector","target","document","options","selector","root","body","seedMinLength","optimizedMinLength","minSelectorDepth","threshold","nthThreshold","maxNumberOfTries","maxOptimiseTries","isClickable","element","tag","tagName","toUpperCase","onclick","getAttribute","getTarget","Element","_getTarget","documentElement","parentElement","owner","ownerSVGElement","app","disableClickmaps","getTargetLabel","dl","label","HTMLElement","sanitizer","getInnerTextSecure","id","className","slice","mousePositionX","mousePositionY","mousePositionChanged","mouseTarget","mouseTargetTime","selectorMap","velocity","direction","directionChangeCount","distance","checkIntervalId","shakeThreshold","shakeCheckInterval","checkMouseShaking","nextVelocity","acceleration","send","attachStartCallback","setInterval","attachStopCallback","clearInterval","sendMouseMove","patchDocument","topframe","getSelector","attachListener","attachEventListener","bind","nodes","attachNodeListener","e","performance","left","top","observer","getDocumentOffset","clientX","clientY","nextDirection","Math","sign","movementX","abs","movementY","getID","undefined","round","attachNodeCallback","node","ticker","attach","trackingOffset"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/lib/modules/mouse.js"],"sourcesContent":["import { hasTag, isSVGElement, isDocument } from '../app/guards.js';\nimport { normSpaces, hasOpenreplayAttribute, getLabelAttribute, now } from '../utils.js';\nimport { MouseMove, MouseClick, MouseThrashing } from '../app/messages.gen.js';\nimport { getInputLabel } from './input.js';\nimport { finder } from '@medv/finder';\nfunction _getSelector(target, document, options) {\n    const selector = finder(target, {\n        root: document.body,\n        seedMinLength: 3,\n        optimizedMinLength: (options === null || options === void 0 ? void 0 : options.minSelectorDepth) || 2,\n        threshold: (options === null || options === void 0 ? void 0 : options.nthThreshold) || 1000,\n        maxNumberOfTries: (options === null || options === void 0 ? void 0 : options.maxOptimiseTries) || 10000,\n    });\n    return selector;\n}\nfunction isClickable(element) {\n    const tag = element.tagName.toUpperCase();\n    return (tag === 'BUTTON' ||\n        tag === 'A' ||\n        tag === 'LI' ||\n        tag === 'SELECT' ||\n        tag === 'TR' ||\n        tag === 'TH' ||\n        element.onclick != null ||\n        element.getAttribute('role') === 'button');\n    //|| element.className.includes(\"btn\")\n    // MBTODO: intercept addEventListener\n}\n//TODO: fix (typescript is not sure about target variable after assignation of svg)\nfunction getTarget(target, document) {\n    if (target instanceof Element) {\n        return _getTarget(target, document);\n    }\n    return null;\n}\nfunction _getTarget(target, document) {\n    let element = target;\n    while (element !== null && element !== document.documentElement) {\n        if (hasOpenreplayAttribute(element, 'masked')) {\n            return null;\n        }\n        element = element.parentElement;\n    }\n    if (isSVGElement(target)) {\n        let owner = target.ownerSVGElement;\n        while (owner !== null) {\n            target = owner;\n            owner = owner.ownerSVGElement;\n        }\n    }\n    element = target;\n    while (element !== null && element !== document.documentElement) {\n        const tag = element.tagName.toUpperCase();\n        if (tag === 'LABEL') {\n            return null;\n        }\n        if (tag === 'INPUT') {\n            return element;\n        }\n        if (isClickable(element) || getLabelAttribute(element) !== null) {\n            return element;\n        }\n        element = element.parentElement;\n    }\n    return target === document.documentElement ? null : target;\n}\nexport default function (app, options) {\n    const { disableClickmaps = false } = options || {};\n    function getTargetLabel(target) {\n        const dl = getLabelAttribute(target);\n        if (dl !== null) {\n            return dl;\n        }\n        if (hasTag(target, 'input')) {\n            return getInputLabel(target);\n        }\n        if (isClickable(target)) {\n            let label = '';\n            if (target instanceof HTMLElement) {\n                label = app.sanitizer.getInnerTextSecure(target);\n            }\n            label = label || target.id || target.className;\n            return normSpaces(label).slice(0, 100);\n        }\n        return '';\n    }\n    let mousePositionX = -1;\n    let mousePositionY = -1;\n    let mousePositionChanged = false;\n    let mouseTarget = null;\n    let mouseTargetTime = 0;\n    let selectorMap = {};\n    let velocity = 0;\n    let direction = 0;\n    let directionChangeCount = 0;\n    let distance = 0;\n    let checkIntervalId;\n    const shakeThreshold = 0.008;\n    const shakeCheckInterval = 225;\n    function checkMouseShaking() {\n        const nextVelocity = distance / shakeCheckInterval;\n        if (!velocity) {\n            velocity = nextVelocity;\n            return;\n        }\n        const acceleration = (nextVelocity - velocity) / shakeCheckInterval;\n        if (directionChangeCount > 4 && acceleration > shakeThreshold) {\n            app.send(MouseThrashing(now()));\n        }\n        distance = 0;\n        directionChangeCount = 0;\n        velocity = nextVelocity;\n    }\n    app.attachStartCallback(() => {\n        checkIntervalId = setInterval(() => checkMouseShaking(), shakeCheckInterval);\n    });\n    app.attachStopCallback(() => {\n        mousePositionX = -1;\n        mousePositionY = -1;\n        mousePositionChanged = false;\n        mouseTarget = null;\n        selectorMap = {};\n        if (checkIntervalId) {\n            clearInterval(checkIntervalId);\n        }\n    });\n    const sendMouseMove = () => {\n        if (mousePositionChanged) {\n            app.send(MouseMove(mousePositionX, mousePositionY));\n            mousePositionChanged = false;\n        }\n    };\n    const patchDocument = (document, topframe = false) => {\n        function getSelector(id, target, options) {\n            return (selectorMap[id] = selectorMap[id] || _getSelector(target, document, options));\n        }\n        const attachListener = topframe\n            ? app.attachEventListener.bind(app) // attached/removed on start/stop\n            : app.nodes.attachNodeListener.bind(app.nodes); // attached/removed on node register/unregister\n        attachListener(document.documentElement, 'mouseover', (e) => {\n            const target = getTarget(e.target, document);\n            if (target !== mouseTarget) {\n                mouseTarget = target;\n                mouseTargetTime = performance.now();\n            }\n        });\n        attachListener(document, 'mousemove', (e) => {\n            const [left, top] = app.observer.getDocumentOffset(document); // MBTODO?: document-id related message\n            mousePositionX = e.clientX + left;\n            mousePositionY = e.clientY + top;\n            mousePositionChanged = true;\n            const nextDirection = Math.sign(e.movementX);\n            distance += Math.abs(e.movementX) + Math.abs(e.movementY);\n            if (nextDirection !== direction) {\n                direction = nextDirection;\n                directionChangeCount++;\n            }\n        }, false);\n        attachListener(document, 'click', (e) => {\n            const target = getTarget(e.target, document);\n            if ((!e.clientX && !e.clientY) || target === null) {\n                return;\n            }\n            const id = app.nodes.getID(target);\n            if (id !== undefined) {\n                sendMouseMove();\n                app.send(MouseClick(id, mouseTarget === target ? Math.round(performance.now() - mouseTargetTime) : 0, getTargetLabel(target), isClickable(target) && !disableClickmaps ? getSelector(id, target, options) : ''), true);\n            }\n            mouseTarget = null;\n        });\n    };\n    app.nodes.attachNodeCallback((node) => {\n        if (isDocument(node)) {\n            patchDocument(node);\n        }\n    });\n    patchDocument(document, true);\n    app.ticker.attach(sendMouseMove, (options === null || options === void 0 ? void 0 : options.trackingOffset) || 7);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}