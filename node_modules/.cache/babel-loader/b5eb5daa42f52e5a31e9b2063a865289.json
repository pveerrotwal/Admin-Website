{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nclass ConditionsManager {\n  constructor(app, startParams) {\n    this.app = app;\n    this.startParams = startParams;\n    this.conditions = [];\n    this.hasStarted = false;\n    this.createConditionFromFilter = filter => {\n      if (filter.value.length) {\n        const resultCondition = mapCondition(filter);\n        if (resultCondition.type) {\n          return resultCondition;\n        }\n      }\n      return undefined;\n    };\n    this.durationInt = null;\n  }\n  setConditions(conditions) {\n    this.conditions = conditions;\n  }\n  async fetchConditions(projectId, token) {\n    try {\n      const r = await fetch(`${this.app.options.ingestPoint}/v1/web/conditions/${projectId}`, {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const {\n        conditions\n      } = await r.json();\n      const mappedConditions = [];\n      conditions.forEach(c => {\n        const filters = c.filters;\n        filters.forEach(filter => {\n          let cond;\n          if (filter.type === 'fetch') {\n            cond = {\n              type: 'network_request',\n              subConditions: [],\n              name: c.name\n            };\n            filter.filters.forEach(f => {\n              const subCond = this.createConditionFromFilter(f);\n              if (subCond) {\n                ;\n                cond.subConditions.push(subCond);\n              }\n            });\n          } else {\n            cond = this.createConditionFromFilter(filter);\n          }\n          if (cond) {\n            if (cond.type === 'session_duration') {\n              this.processDuration(cond.value[0], c.name);\n            }\n            mappedConditions.push(Object.assign(Object.assign({}, cond), {\n              name: c.name\n            }));\n          }\n        });\n      });\n      this.conditions = mappedConditions;\n    } catch (e) {\n      this.app.debug.error('Critical: cannot fetch start conditions');\n    }\n  }\n  trigger(conditionName) {\n    if (this.hasStarted) return;\n    try {\n      this.hasStarted = true;\n      void this.app.start(this.startParams, undefined, conditionName);\n    } catch (e) {\n      this.app.debug.error(e);\n    }\n  }\n  processMessage(message) {\n    if (this.hasStarted) return;\n    switch (message[0]) {\n      case 78 /* Type.JSException */:\n        this.jsExceptionEvent(message);\n        break;\n      case 27 /* Type.CustomEvent */:\n        this.customEvent(message);\n        break;\n      case 69 /* Type.MouseClick */:\n        this.clickEvent(message);\n        break;\n      case 4 /* Type.SetPageLocation */:\n        this.pageLocationEvent(message);\n        break;\n      case 83 /* Type.NetworkRequest */:\n        this.networkRequest(message);\n        break;\n      default:\n        break;\n    }\n  }\n  processFlags(flag) {\n    const flagConds = this.conditions.filter(c => c.type === 'feature_flag');\n    if (flagConds.length) {\n      flagConds.forEach(flagCond => {\n        const operator = operators[flagCond.operator];\n        if (operator && flag.find(f => operator(f.key, flagCond.value))) {\n          this.trigger(flagCond.name);\n        }\n      });\n    }\n  }\n  processDuration(durationMs, condName) {\n    this.durationInt = setInterval(() => {\n      const sessionLength = performance.now();\n      if (sessionLength > durationMs) {\n        this.trigger(condName);\n      }\n    }, 1000);\n    this.app.attachStopCallback(() => {\n      if (this.durationInt) {\n        clearInterval(this.durationInt);\n      }\n    });\n  }\n  networkRequest(message) {\n    // method - 2, url - 3, status - 6, duration - 8\n    const reqConds = this.conditions.filter(c => c.type === 'network_request');\n    if (!reqConds.length) return;\n    reqConds.forEach(reqCond => {\n      const validSubConditions = reqCond.subConditions.filter(c => c.operator !== 'isAny');\n      if (validSubConditions.length) {\n        const allPass = validSubConditions.every(subCond => {\n          let value;\n          switch (subCond.key) {\n            case 'url':\n              value = message[3];\n              break;\n            case 'status':\n              value = message[6];\n              break;\n            case 'method':\n              value = message[2];\n              break;\n            case 'duration':\n              value = message[8];\n              break;\n            default:\n              break;\n          }\n          const operator = operators[subCond.operator];\n          // @ts-ignore\n          if (operator && operator(value, subCond.value)) {\n            return true;\n          }\n        });\n        if (allPass) {\n          this.trigger(reqCond.name);\n        }\n      } else if (validSubConditions.length === 0 && reqCond.subConditions.length) {\n        this.trigger(reqCond.name);\n      }\n    });\n  }\n  customEvent(message) {\n    // name - 1, payload - 2\n    const evConds = this.conditions.filter(c => c.type === 'custom_event');\n    if (evConds.length) {\n      evConds.forEach(evCond => {\n        const operator = operators[evCond.operator];\n        if (operator && (operator(message[1], evCond.value) || operator(message[2], evCond.value))) {\n          this.trigger(evCond.name);\n        }\n      });\n    }\n  }\n  clickEvent(message) {\n    // label - 3, selector - 4\n    const clickCond = this.conditions.filter(c => c.type === 'click');\n    if (clickCond.length) {\n      clickCond.forEach(click => {\n        const operator = operators[click.operator];\n        if (operator && (operator(message[3], click.value) || operator(message[4], click.value))) {\n          this.trigger(click.name);\n        }\n      });\n    }\n  }\n  pageLocationEvent(message) {\n    // url - 1\n    const urlConds = this.conditions.filter(c => c.type === 'visited_url');\n    if (urlConds) {\n      urlConds.forEach(urlCond => {\n        const operator = operators[urlCond.operator];\n        if (operator && operator(message[1], urlCond.value)) {\n          this.trigger(urlCond.name);\n        }\n      });\n    }\n  }\n  jsExceptionEvent(message) {\n    // name - 1, message - 2, payload - 3\n    const testedValues = [message[1], message[2], message[3]];\n    const exceptionConds = this.conditions.filter(c => c.type === 'exception');\n    if (exceptionConds) {\n      exceptionConds.forEach(exceptionCond => {\n        const operator = operators[exceptionCond.operator];\n        if (operator && testedValues.some(val => operator(val, exceptionCond.value))) {\n          this.trigger(exceptionCond.name);\n        }\n      });\n    }\n  }\n}\nexports.default = ConditionsManager;\nconst operators = {\n  is: (val, target) => target.some(t => val.includes(t)),\n  isAny: () => true,\n  isNot: (val, target) => !target.some(t => val.includes(t)),\n  contains: (val, target) => target.some(t => val.includes(t)),\n  notContains: (val, target) => !target.some(t => val.includes(t)),\n  startsWith: (val, target) => target.some(t => val.startsWith(t)),\n  endsWith: (val, target) => target.some(t => val.endsWith(t)),\n  greaterThan: (val, target) => val > target,\n  greaterOrEqual: (val, target) => val >= target,\n  lessOrEqual: (val, target) => val <= target,\n  lessThan: (val, target) => val < target\n};\nconst mapCondition = condition => {\n  const opMap = {\n    on: 'is',\n    notOn: 'isNot',\n    '\\u003e': 'greaterThan',\n    '\\u003c': 'lessThan',\n    '\\u003d': 'is',\n    '\\u003c=': 'lessOrEqual',\n    '\\u003e=': 'greaterOrEqual'\n  };\n  const mapOperator = operator => {\n    const keys = Object.keys(opMap);\n    // @ts-ignore\n    if (keys.includes(operator)) return opMap[operator];\n  };\n  let con = {\n    type: '',\n    operator: '',\n    value: condition.value,\n    key: ''\n  };\n  switch (condition.type) {\n    case 'click':\n      con = {\n        type: 'click',\n        operator: mapOperator(condition.operator),\n        value: condition.value,\n        key: ''\n      };\n      break;\n    case 'location':\n      con = {\n        type: 'visited_url',\n        // @ts-ignore\n        operator: condition.operator,\n        value: condition.value,\n        key: ''\n      };\n      break;\n    case 'custom':\n      con = {\n        type: 'custom_event',\n        // @ts-ignore\n        operator: condition.operator,\n        value: condition.value,\n        key: ''\n      };\n      break;\n    case 'metadata':\n      con = {\n        // @ts-ignore\n        type: condition.source === 'featureFlag' ? 'feature_flag' : condition.type,\n        // @ts-ignore\n        operator: condition.operator,\n        value: condition.value,\n        key: ''\n      };\n      break;\n    case 'error':\n      con = {\n        type: 'exception',\n        // @ts-ignore\n        operator: condition.operator,\n        value: condition.value,\n        key: ''\n      };\n      break;\n    case 'duration':\n      con = {\n        type: 'session_duration',\n        // @ts-ignore\n        value: condition.value[0],\n        key: ''\n      };\n      break;\n    case 'fetchUrl':\n      con = {\n        type: 'network_request',\n        key: 'url',\n        operator: condition.operator,\n        value: condition.value\n      };\n      break;\n    case 'fetchStatusCode':\n      con = {\n        type: 'network_request',\n        key: 'status',\n        operator: mapOperator(condition.operator),\n        value: condition.value\n      };\n      break;\n    case 'fetchMethod':\n      con = {\n        type: 'network_request',\n        key: 'method',\n        operator: mapOperator(condition.operator),\n        value: condition.value\n      };\n      break;\n    case 'fetchDuration':\n      con = {\n        type: 'network_request',\n        key: 'duration',\n        operator: mapOperator(condition.operator),\n        value: condition.value\n      };\n      break;\n  }\n  // @ts-ignore\n  return con;\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","ConditionsManager","constructor","app","startParams","conditions","hasStarted","createConditionFromFilter","filter","length","resultCondition","mapCondition","type","undefined","durationInt","setConditions","fetchConditions","projectId","token","r","fetch","options","ingestPoint","method","headers","Authorization","json","mappedConditions","forEach","c","filters","cond","subConditions","name","f","subCond","push","processDuration","assign","e","debug","error","trigger","conditionName","start","processMessage","message","jsExceptionEvent","customEvent","clickEvent","pageLocationEvent","networkRequest","processFlags","flag","flagConds","flagCond","operator","operators","find","key","durationMs","condName","setInterval","sessionLength","performance","now","attachStopCallback","clearInterval","reqConds","reqCond","validSubConditions","allPass","every","evConds","evCond","clickCond","click","urlConds","urlCond","testedValues","exceptionConds","exceptionCond","some","val","default","is","target","t","includes","isAny","isNot","contains","notContains","startsWith","endsWith","greaterThan","greaterOrEqual","lessOrEqual","lessThan","condition","opMap","on","notOn","mapOperator","keys","con","source"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/cjs/modules/conditionsManager.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ConditionsManager {\n    constructor(app, startParams) {\n        this.app = app;\n        this.startParams = startParams;\n        this.conditions = [];\n        this.hasStarted = false;\n        this.createConditionFromFilter = (filter) => {\n            if (filter.value.length) {\n                const resultCondition = mapCondition(filter);\n                if (resultCondition.type) {\n                    return resultCondition;\n                }\n            }\n            return undefined;\n        };\n        this.durationInt = null;\n    }\n    setConditions(conditions) {\n        this.conditions = conditions;\n    }\n    async fetchConditions(projectId, token) {\n        try {\n            const r = await fetch(`${this.app.options.ingestPoint}/v1/web/conditions/${projectId}`, {\n                method: 'GET',\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            const { conditions } = (await r.json());\n            const mappedConditions = [];\n            conditions.forEach((c) => {\n                const filters = c.filters;\n                filters.forEach((filter) => {\n                    let cond;\n                    if (filter.type === 'fetch') {\n                        cond = {\n                            type: 'network_request',\n                            subConditions: [],\n                            name: c.name,\n                        };\n                        filter.filters.forEach((f) => {\n                            const subCond = this.createConditionFromFilter(f);\n                            if (subCond) {\n                                ;\n                                cond.subConditions.push(subCond);\n                            }\n                        });\n                    }\n                    else {\n                        cond = this.createConditionFromFilter(filter);\n                    }\n                    if (cond) {\n                        if (cond.type === 'session_duration') {\n                            this.processDuration(cond.value[0], c.name);\n                        }\n                        mappedConditions.push(Object.assign(Object.assign({}, cond), { name: c.name }));\n                    }\n                });\n            });\n            this.conditions = mappedConditions;\n        }\n        catch (e) {\n            this.app.debug.error('Critical: cannot fetch start conditions');\n        }\n    }\n    trigger(conditionName) {\n        if (this.hasStarted)\n            return;\n        try {\n            this.hasStarted = true;\n            void this.app.start(this.startParams, undefined, conditionName);\n        }\n        catch (e) {\n            this.app.debug.error(e);\n        }\n    }\n    processMessage(message) {\n        if (this.hasStarted)\n            return;\n        switch (message[0]) {\n            case 78 /* Type.JSException */:\n                this.jsExceptionEvent(message);\n                break;\n            case 27 /* Type.CustomEvent */:\n                this.customEvent(message);\n                break;\n            case 69 /* Type.MouseClick */:\n                this.clickEvent(message);\n                break;\n            case 4 /* Type.SetPageLocation */:\n                this.pageLocationEvent(message);\n                break;\n            case 83 /* Type.NetworkRequest */:\n                this.networkRequest(message);\n                break;\n            default:\n                break;\n        }\n    }\n    processFlags(flag) {\n        const flagConds = this.conditions.filter((c) => c.type === 'feature_flag');\n        if (flagConds.length) {\n            flagConds.forEach((flagCond) => {\n                const operator = operators[flagCond.operator];\n                if (operator && flag.find((f) => operator(f.key, flagCond.value))) {\n                    this.trigger(flagCond.name);\n                }\n            });\n        }\n    }\n    processDuration(durationMs, condName) {\n        this.durationInt = setInterval(() => {\n            const sessionLength = performance.now();\n            if (sessionLength > durationMs) {\n                this.trigger(condName);\n            }\n        }, 1000);\n        this.app.attachStopCallback(() => {\n            if (this.durationInt) {\n                clearInterval(this.durationInt);\n            }\n        });\n    }\n    networkRequest(message) {\n        // method - 2, url - 3, status - 6, duration - 8\n        const reqConds = this.conditions.filter((c) => c.type === 'network_request');\n        if (!reqConds.length)\n            return;\n        reqConds.forEach((reqCond) => {\n            const validSubConditions = reqCond.subConditions.filter((c) => c.operator !== 'isAny');\n            if (validSubConditions.length) {\n                const allPass = validSubConditions.every((subCond) => {\n                    let value;\n                    switch (subCond.key) {\n                        case 'url':\n                            value = message[3];\n                            break;\n                        case 'status':\n                            value = message[6];\n                            break;\n                        case 'method':\n                            value = message[2];\n                            break;\n                        case 'duration':\n                            value = message[8];\n                            break;\n                        default:\n                            break;\n                    }\n                    const operator = operators[subCond.operator];\n                    // @ts-ignore\n                    if (operator && operator(value, subCond.value)) {\n                        return true;\n                    }\n                });\n                if (allPass) {\n                    this.trigger(reqCond.name);\n                }\n            }\n            else if (validSubConditions.length === 0 && reqCond.subConditions.length) {\n                this.trigger(reqCond.name);\n            }\n        });\n    }\n    customEvent(message) {\n        // name - 1, payload - 2\n        const evConds = this.conditions.filter((c) => c.type === 'custom_event');\n        if (evConds.length) {\n            evConds.forEach((evCond) => {\n                const operator = operators[evCond.operator];\n                if (operator &&\n                    (operator(message[1], evCond.value) || operator(message[2], evCond.value))) {\n                    this.trigger(evCond.name);\n                }\n            });\n        }\n    }\n    clickEvent(message) {\n        // label - 3, selector - 4\n        const clickCond = this.conditions.filter((c) => c.type === 'click');\n        if (clickCond.length) {\n            clickCond.forEach((click) => {\n                const operator = operators[click.operator];\n                if (operator && (operator(message[3], click.value) || operator(message[4], click.value))) {\n                    this.trigger(click.name);\n                }\n            });\n        }\n    }\n    pageLocationEvent(message) {\n        // url - 1\n        const urlConds = this.conditions.filter((c) => c.type === 'visited_url');\n        if (urlConds) {\n            urlConds.forEach((urlCond) => {\n                const operator = operators[urlCond.operator];\n                if (operator && operator(message[1], urlCond.value)) {\n                    this.trigger(urlCond.name);\n                }\n            });\n        }\n    }\n    jsExceptionEvent(message) {\n        // name - 1, message - 2, payload - 3\n        const testedValues = [message[1], message[2], message[3]];\n        const exceptionConds = this.conditions.filter((c) => c.type === 'exception');\n        if (exceptionConds) {\n            exceptionConds.forEach((exceptionCond) => {\n                const operator = operators[exceptionCond.operator];\n                if (operator && testedValues.some((val) => operator(val, exceptionCond.value))) {\n                    this.trigger(exceptionCond.name);\n                }\n            });\n        }\n    }\n}\nexports.default = ConditionsManager;\nconst operators = {\n    is: (val, target) => target.some((t) => val.includes(t)),\n    isAny: () => true,\n    isNot: (val, target) => !target.some((t) => val.includes(t)),\n    contains: (val, target) => target.some((t) => val.includes(t)),\n    notContains: (val, target) => !target.some((t) => val.includes(t)),\n    startsWith: (val, target) => target.some((t) => val.startsWith(t)),\n    endsWith: (val, target) => target.some((t) => val.endsWith(t)),\n    greaterThan: (val, target) => val > target,\n    greaterOrEqual: (val, target) => val >= target,\n    lessOrEqual: (val, target) => val <= target,\n    lessThan: (val, target) => val < target,\n};\nconst mapCondition = (condition) => {\n    const opMap = {\n        on: 'is',\n        notOn: 'isNot',\n        '\\u003e': 'greaterThan',\n        '\\u003c': 'lessThan',\n        '\\u003d': 'is',\n        '\\u003c=': 'lessOrEqual',\n        '\\u003e=': 'greaterOrEqual',\n    };\n    const mapOperator = (operator) => {\n        const keys = Object.keys(opMap);\n        // @ts-ignore\n        if (keys.includes(operator))\n            return opMap[operator];\n    };\n    let con = {\n        type: '',\n        operator: '',\n        value: condition.value,\n        key: '',\n    };\n    switch (condition.type) {\n        case 'click':\n            con = {\n                type: 'click',\n                operator: mapOperator(condition.operator),\n                value: condition.value,\n                key: '',\n            };\n            break;\n        case 'location':\n            con = {\n                type: 'visited_url',\n                // @ts-ignore\n                operator: condition.operator,\n                value: condition.value,\n                key: '',\n            };\n            break;\n        case 'custom':\n            con = {\n                type: 'custom_event',\n                // @ts-ignore\n                operator: condition.operator,\n                value: condition.value,\n                key: '',\n            };\n            break;\n        case 'metadata':\n            con = {\n                // @ts-ignore\n                type: condition.source === 'featureFlag' ? 'feature_flag' : condition.type,\n                // @ts-ignore\n                operator: condition.operator,\n                value: condition.value,\n                key: '',\n            };\n            break;\n        case 'error':\n            con = {\n                type: 'exception',\n                // @ts-ignore\n                operator: condition.operator,\n                value: condition.value,\n                key: '',\n            };\n            break;\n        case 'duration':\n            con = {\n                type: 'session_duration',\n                // @ts-ignore\n                value: condition.value[0],\n                key: '',\n            };\n            break;\n        case 'fetchUrl':\n            con = {\n                type: 'network_request',\n                key: 'url',\n                operator: condition.operator,\n                value: condition.value,\n            };\n            break;\n        case 'fetchStatusCode':\n            con = {\n                type: 'network_request',\n                key: 'status',\n                operator: mapOperator(condition.operator),\n                value: condition.value,\n            };\n            break;\n        case 'fetchMethod':\n            con = {\n                type: 'network_request',\n                key: 'method',\n                operator: mapOperator(condition.operator),\n                value: condition.value,\n            };\n            break;\n        case 'fetchDuration':\n            con = {\n                type: 'network_request',\n                key: 'duration',\n                operator: mapOperator(condition.operator),\n                value: condition.value,\n            };\n            break;\n    }\n    // @ts-ignore\n    return con;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}