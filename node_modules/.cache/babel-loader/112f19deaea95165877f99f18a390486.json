{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InputMode = exports.getInputLabel = void 0;\nconst utils_js_1 = require(\"../utils.js\");\nconst guards_js_1 = require(\"../app/guards.js\");\nconst messages_gen_js_1 = require(\"../app/messages.gen.js\");\nconst INPUT_TYPES = ['text', 'password', 'email', 'search', 'number', 'range', 'date', 'tel', 'time'];\nfunction isTextFieldElement(node) {\n  if ((0, guards_js_1.hasTag)(node, 'textarea')) {\n    return true;\n  }\n  if (!(0, guards_js_1.hasTag)(node, 'input')) {\n    return false;\n  }\n  return INPUT_TYPES.includes(node.type);\n}\nfunction isCheckbox(node) {\n  if (!(0, guards_js_1.hasTag)(node, 'input')) {\n    return false;\n  }\n  const type = node.type;\n  return type === 'checkbox' || type === 'radio';\n}\nconst labelElementFor = utils_js_1.IN_BROWSER && 'labels' in HTMLInputElement.prototype ? node => {\n  let p = node;\n  while ((p = p.parentNode) !== null) {\n    if ((0, guards_js_1.hasTag)(p, 'label')) {\n      return p;\n    }\n  }\n  const labels = node.labels;\n  if (labels !== null && labels.length === 1) {\n    return labels[0];\n  }\n} : node => {\n  let p = node;\n  while ((p = p.parentNode) !== null) {\n    if ((0, guards_js_1.hasTag)(p, 'label')) {\n      return p;\n    }\n  }\n  const id = node.id;\n  if (id) {\n    const labels = node.ownerDocument.querySelectorAll('label[for=\"' + id + '\"]');\n    if (labels !== null && labels.length === 1) {\n      return labels[0];\n    }\n  }\n};\nfunction getInputLabel(node) {\n  let label = (0, utils_js_1.getLabelAttribute)(node);\n  if (label === null) {\n    const labelElement = labelElementFor(node);\n    label = labelElement && labelElement.innerText || node.placeholder || node.name || node.id || node.className || node.type;\n  }\n  return (0, utils_js_1.normSpaces)(label).slice(0, 100);\n}\nexports.getInputLabel = getInputLabel;\nexports.InputMode = {\n  Plain: 0,\n  Obscured: 1,\n  Hidden: 2\n};\nfunction default_1(app, opts) {\n  const options = Object.assign({\n    obscureInputNumbers: true,\n    obscureInputEmails: true,\n    defaultInputMode: exports.InputMode.Obscured,\n    obscureInputDates: false\n  }, opts);\n  function getInputValue(id, node) {\n    let value = node.value;\n    let inputMode = options.defaultInputMode;\n    if (node.type === 'password' || app.sanitizer.isHidden(id)) {\n      inputMode = exports.InputMode.Hidden;\n    } else if (app.sanitizer.isObscured(id) || inputMode === exports.InputMode.Plain && (options.obscureInputNumbers && node.type !== 'date' && /\\d\\d\\d\\d/.test(value) || options.obscureInputDates && node.type === 'date' || options.obscureInputEmails && (node.type === 'email' || !!~value.indexOf('@')))) {\n      inputMode = exports.InputMode.Obscured;\n    }\n    let mask = 0;\n    switch (inputMode) {\n      case exports.InputMode.Hidden:\n        mask = -1;\n        value = '';\n        break;\n      case exports.InputMode.Obscured:\n        mask = value.length;\n        value = '';\n        break;\n    }\n    return {\n      value,\n      mask\n    };\n  }\n  function sendInputValue(id, node) {\n    const {\n      value,\n      mask\n    } = getInputValue(id, node);\n    app.send((0, messages_gen_js_1.SetInputValue)(id, value, mask));\n  }\n  const inputValues = new Map();\n  const checkboxValues = new Map();\n  app.attachStopCallback(() => {\n    inputValues.clear();\n    checkboxValues.clear();\n  });\n  function trackInputValue(id, node) {\n    if (inputValues.get(id) === node.value) {\n      return;\n    }\n    inputValues.set(id, node.value);\n    sendInputValue(id, node);\n  }\n  function trackCheckboxValue(id, value) {\n    if (checkboxValues.get(id) === value) {\n      return;\n    }\n    checkboxValues.set(id, value);\n    app.send((0, messages_gen_js_1.SetInputChecked)(id, value));\n  }\n  // The only way (to our knowledge) to track all kinds of input changes, including those made by JS\n  app.ticker.attach(() => {\n    inputValues.forEach((value, id) => {\n      const node = app.nodes.getNode(id);\n      if (!node) return inputValues.delete(id);\n      trackInputValue(id, node);\n    });\n    checkboxValues.forEach((checked, id) => {\n      const node = app.nodes.getNode(id);\n      if (!node) return checkboxValues.delete(id);\n      trackCheckboxValue(id, node.checked);\n    });\n  }, 3);\n  function sendInputChange(id, node, hesitationTime, inputTime) {\n    const {\n      value,\n      mask\n    } = getInputValue(id, node);\n    const label = getInputLabel(node);\n    app.send((0, messages_gen_js_1.InputChange)(id, value, mask !== 0, label, hesitationTime, inputTime));\n  }\n  app.nodes.attachNodeCallback(app.safe(node => {\n    const id = app.nodes.getID(node);\n    if (id === undefined) {\n      return;\n    }\n    // TODO: support multiple select (?): use selectedOptions;\n    if ((0, guards_js_1.hasTag)(node, 'select')) {\n      sendInputValue(id, node);\n      app.nodes.attachNodeListener(node, 'change', () => sendInputValue(id, node));\n    }\n    if (isTextFieldElement(node)) {\n      trackInputValue(id, node);\n      let nodeFocusTime = 0;\n      let nodeHesitationTime = 0;\n      let inputTime = 0;\n      const onFocus = () => {\n        nodeFocusTime = (0, utils_js_1.now)();\n      };\n      const onInput = () => {\n        if (nodeHesitationTime === 0 && nodeFocusTime !== 0) {\n          nodeHesitationTime = (0, utils_js_1.now)() - nodeFocusTime;\n        }\n      };\n      const onChange = () => {\n        if (nodeFocusTime !== 0) {\n          inputTime = (0, utils_js_1.now)() - nodeFocusTime;\n        }\n        sendInputChange(id, node, nodeHesitationTime, inputTime);\n        nodeHesitationTime = 0;\n        inputTime = 0;\n        nodeFocusTime = 0;\n      };\n      app.nodes.attachNodeListener(node, 'focus', onFocus);\n      app.nodes.attachNodeListener(node, 'input', onInput);\n      app.nodes.attachNodeListener(node, 'change', onChange);\n      return;\n    }\n    if (isCheckbox(node)) {\n      trackCheckboxValue(id, node.checked);\n      app.nodes.attachNodeListener(node, 'change', () => trackCheckboxValue(id, node.checked));\n      return;\n    }\n  }));\n}\nexports.default = default_1;","map":{"version":3,"names":["Object","defineProperty","exports","value","InputMode","getInputLabel","utils_js_1","require","guards_js_1","messages_gen_js_1","INPUT_TYPES","isTextFieldElement","node","hasTag","includes","type","isCheckbox","labelElementFor","IN_BROWSER","HTMLInputElement","prototype","p","parentNode","labels","length","id","ownerDocument","querySelectorAll","label","getLabelAttribute","labelElement","innerText","placeholder","name","className","normSpaces","slice","Plain","Obscured","Hidden","default_1","app","opts","options","assign","obscureInputNumbers","obscureInputEmails","defaultInputMode","obscureInputDates","getInputValue","inputMode","sanitizer","isHidden","isObscured","test","indexOf","mask","sendInputValue","send","SetInputValue","inputValues","Map","checkboxValues","attachStopCallback","clear","trackInputValue","get","set","trackCheckboxValue","SetInputChecked","ticker","attach","forEach","nodes","getNode","delete","checked","sendInputChange","hesitationTime","inputTime","InputChange","attachNodeCallback","safe","getID","undefined","attachNodeListener","nodeFocusTime","nodeHesitationTime","onFocus","now","onInput","onChange","default"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/cjs/modules/input.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InputMode = exports.getInputLabel = void 0;\nconst utils_js_1 = require(\"../utils.js\");\nconst guards_js_1 = require(\"../app/guards.js\");\nconst messages_gen_js_1 = require(\"../app/messages.gen.js\");\nconst INPUT_TYPES = [\n    'text',\n    'password',\n    'email',\n    'search',\n    'number',\n    'range',\n    'date',\n    'tel',\n    'time',\n];\nfunction isTextFieldElement(node) {\n    if ((0, guards_js_1.hasTag)(node, 'textarea')) {\n        return true;\n    }\n    if (!(0, guards_js_1.hasTag)(node, 'input')) {\n        return false;\n    }\n    return INPUT_TYPES.includes(node.type);\n}\nfunction isCheckbox(node) {\n    if (!(0, guards_js_1.hasTag)(node, 'input')) {\n        return false;\n    }\n    const type = node.type;\n    return type === 'checkbox' || type === 'radio';\n}\nconst labelElementFor = utils_js_1.IN_BROWSER && 'labels' in HTMLInputElement.prototype\n    ? (node) => {\n        let p = node;\n        while ((p = p.parentNode) !== null) {\n            if ((0, guards_js_1.hasTag)(p, 'label')) {\n                return p;\n            }\n        }\n        const labels = node.labels;\n        if (labels !== null && labels.length === 1) {\n            return labels[0];\n        }\n    }\n    : (node) => {\n        let p = node;\n        while ((p = p.parentNode) !== null) {\n            if ((0, guards_js_1.hasTag)(p, 'label')) {\n                return p;\n            }\n        }\n        const id = node.id;\n        if (id) {\n            const labels = node.ownerDocument.querySelectorAll('label[for=\"' + id + '\"]');\n            if (labels !== null && labels.length === 1) {\n                return labels[0];\n            }\n        }\n    };\nfunction getInputLabel(node) {\n    let label = (0, utils_js_1.getLabelAttribute)(node);\n    if (label === null) {\n        const labelElement = labelElementFor(node);\n        label =\n            (labelElement && labelElement.innerText) ||\n                node.placeholder ||\n                node.name ||\n                node.id ||\n                node.className ||\n                node.type;\n    }\n    return (0, utils_js_1.normSpaces)(label).slice(0, 100);\n}\nexports.getInputLabel = getInputLabel;\nexports.InputMode = {\n    Plain: 0,\n    Obscured: 1,\n    Hidden: 2,\n};\nfunction default_1(app, opts) {\n    const options = Object.assign({\n        obscureInputNumbers: true,\n        obscureInputEmails: true,\n        defaultInputMode: exports.InputMode.Obscured,\n        obscureInputDates: false,\n    }, opts);\n    function getInputValue(id, node) {\n        let value = node.value;\n        let inputMode = options.defaultInputMode;\n        if (node.type === 'password' || app.sanitizer.isHidden(id)) {\n            inputMode = exports.InputMode.Hidden;\n        }\n        else if (app.sanitizer.isObscured(id) ||\n            (inputMode === exports.InputMode.Plain &&\n                ((options.obscureInputNumbers && node.type !== 'date' && /\\d\\d\\d\\d/.test(value)) ||\n                    (options.obscureInputDates && node.type === 'date') ||\n                    (options.obscureInputEmails && (node.type === 'email' || !!~value.indexOf('@')))))) {\n            inputMode = exports.InputMode.Obscured;\n        }\n        let mask = 0;\n        switch (inputMode) {\n            case exports.InputMode.Hidden:\n                mask = -1;\n                value = '';\n                break;\n            case exports.InputMode.Obscured:\n                mask = value.length;\n                value = '';\n                break;\n        }\n        return { value, mask };\n    }\n    function sendInputValue(id, node) {\n        const { value, mask } = getInputValue(id, node);\n        app.send((0, messages_gen_js_1.SetInputValue)(id, value, mask));\n    }\n    const inputValues = new Map();\n    const checkboxValues = new Map();\n    app.attachStopCallback(() => {\n        inputValues.clear();\n        checkboxValues.clear();\n    });\n    function trackInputValue(id, node) {\n        if (inputValues.get(id) === node.value) {\n            return;\n        }\n        inputValues.set(id, node.value);\n        sendInputValue(id, node);\n    }\n    function trackCheckboxValue(id, value) {\n        if (checkboxValues.get(id) === value) {\n            return;\n        }\n        checkboxValues.set(id, value);\n        app.send((0, messages_gen_js_1.SetInputChecked)(id, value));\n    }\n    // The only way (to our knowledge) to track all kinds of input changes, including those made by JS\n    app.ticker.attach(() => {\n        inputValues.forEach((value, id) => {\n            const node = app.nodes.getNode(id);\n            if (!node)\n                return inputValues.delete(id);\n            trackInputValue(id, node);\n        });\n        checkboxValues.forEach((checked, id) => {\n            const node = app.nodes.getNode(id);\n            if (!node)\n                return checkboxValues.delete(id);\n            trackCheckboxValue(id, node.checked);\n        });\n    }, 3);\n    function sendInputChange(id, node, hesitationTime, inputTime) {\n        const { value, mask } = getInputValue(id, node);\n        const label = getInputLabel(node);\n        app.send((0, messages_gen_js_1.InputChange)(id, value, mask !== 0, label, hesitationTime, inputTime));\n    }\n    app.nodes.attachNodeCallback(app.safe((node) => {\n        const id = app.nodes.getID(node);\n        if (id === undefined) {\n            return;\n        }\n        // TODO: support multiple select (?): use selectedOptions;\n        if ((0, guards_js_1.hasTag)(node, 'select')) {\n            sendInputValue(id, node);\n            app.nodes.attachNodeListener(node, 'change', () => sendInputValue(id, node));\n        }\n        if (isTextFieldElement(node)) {\n            trackInputValue(id, node);\n            let nodeFocusTime = 0;\n            let nodeHesitationTime = 0;\n            let inputTime = 0;\n            const onFocus = () => {\n                nodeFocusTime = (0, utils_js_1.now)();\n            };\n            const onInput = () => {\n                if (nodeHesitationTime === 0 && nodeFocusTime !== 0) {\n                    nodeHesitationTime = (0, utils_js_1.now)() - nodeFocusTime;\n                }\n            };\n            const onChange = () => {\n                if (nodeFocusTime !== 0) {\n                    inputTime = (0, utils_js_1.now)() - nodeFocusTime;\n                }\n                sendInputChange(id, node, nodeHesitationTime, inputTime);\n                nodeHesitationTime = 0;\n                inputTime = 0;\n                nodeFocusTime = 0;\n            };\n            app.nodes.attachNodeListener(node, 'focus', onFocus);\n            app.nodes.attachNodeListener(node, 'input', onInput);\n            app.nodes.attachNodeListener(node, 'change', onChange);\n            return;\n        }\n        if (isCheckbox(node)) {\n            trackCheckboxValue(id, node.checked);\n            app.nodes.attachNodeListener(node, 'change', () => trackCheckboxValue(id, node.checked));\n            return;\n        }\n    }));\n}\nexports.default = default_1;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}