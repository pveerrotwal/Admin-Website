{"ast":null,"code":"import { AdoptedSSInsertRuleURLBased,\n// TODO: rename to common StyleSheet names\nAdoptedSSDeleteRule, AdoptedSSAddOwner, TechnicalInfo } from '../app/messages.gen.js';\nimport { hasTag } from '../app/guards.js';\nimport { nextID, styleSheetIDMap } from './constructedStyleSheets.js';\nexport default function (app) {\n  if (app === null) {\n    return;\n  }\n  if (!window.CSSStyleSheet) {\n    app.send(TechnicalInfo('no_stylesheet_prototype_in_window', ''));\n    return;\n  }\n  const sendInsertDeleteRule = app.safe((sheet, index, rule) => {\n    const sheetID = styleSheetIDMap.get(sheet);\n    if (!sheetID) {\n      // OK-case. Sheet haven't been registered yet. Rules will be sent on registration.\n      return;\n    }\n    if (typeof rule === 'string') {\n      app.send(AdoptedSSInsertRuleURLBased(sheetID, rule, index, app.getBaseHref()));\n    } else {\n      app.send(AdoptedSSDeleteRule(sheetID, index));\n    }\n  });\n  // TODO: proper rule insertion/removal (how?)\n  const sendReplaceGroupingRule = app.safe(rule => {\n    let topmostRule = rule;\n    while (topmostRule.parentRule) {\n      topmostRule = topmostRule.parentRule;\n    }\n    const sheet = topmostRule.parentStyleSheet;\n    if (!sheet) {\n      app.debug.warn('No parent StyleSheet found for', topmostRule, rule);\n      return;\n    }\n    const sheetID = styleSheetIDMap.get(sheet);\n    if (!sheetID) {\n      app.debug.warn('No sheedID found for', sheet, styleSheetIDMap);\n      return;\n    }\n    const cssText = topmostRule.cssText;\n    const ruleList = sheet.cssRules;\n    const idx = Array.from(ruleList).indexOf(topmostRule);\n    if (idx >= 0) {\n      app.send(AdoptedSSInsertRuleURLBased(sheetID, cssText, idx, app.getBaseHref()));\n      app.send(AdoptedSSDeleteRule(sheetID, idx + 1)); // Remove previous clone\n    } else {\n      app.debug.warn('Rule index not found in', sheet, topmostRule);\n    }\n  });\n  const patchContext = app.safe(context => {\n    const {\n      insertRule,\n      deleteRule\n    } = context.CSSStyleSheet.prototype;\n    const {\n      insertRule: groupInsertRule,\n      deleteRule: groupDeleteRule\n    } = context.CSSGroupingRule.prototype;\n    context.CSSStyleSheet.prototype.insertRule = function (rule, index = 0) {\n      sendInsertDeleteRule(this, index, rule);\n      return insertRule.call(this, rule, index);\n    };\n    context.CSSStyleSheet.prototype.deleteRule = function (index) {\n      sendInsertDeleteRule(this, index);\n      return deleteRule.call(this, index);\n    };\n    context.CSSGroupingRule.prototype.insertRule = function (rule, index = 0) {\n      const result = groupInsertRule.call(this, rule, index);\n      sendReplaceGroupingRule(this);\n      return result;\n    };\n    context.CSSGroupingRule.prototype.deleteRule = function (index = 0) {\n      const result = groupDeleteRule.call(this, index);\n      sendReplaceGroupingRule(this);\n      return result;\n    };\n  });\n  patchContext(window);\n  app.observer.attachContextCallback(patchContext);\n  app.nodes.attachNodeCallback(node => {\n    if (!hasTag(node, 'style') || !node.sheet) {\n      return;\n    }\n    if (node.textContent !== null && node.textContent.trim().length > 0) {\n      return; // Non-virtual styles captured by the observer as a text\n    }\n    const nodeID = app.nodes.getID(node);\n    if (!nodeID) {\n      return;\n    }\n    const sheet = node.sheet;\n    const sheetID = nextID();\n    styleSheetIDMap.set(sheet, sheetID);\n    app.send(AdoptedSSAddOwner(sheetID, nodeID));\n    const rules = sheet.cssRules;\n    for (let i = 0; i < rules.length; i++) {\n      sendInsertDeleteRule(sheet, i, rules[i].cssText);\n    }\n  });\n}","map":{"version":3,"names":["AdoptedSSInsertRuleURLBased","AdoptedSSDeleteRule","AdoptedSSAddOwner","TechnicalInfo","hasTag","nextID","styleSheetIDMap","app","window","CSSStyleSheet","send","sendInsertDeleteRule","safe","sheet","index","rule","sheetID","get","getBaseHref","sendReplaceGroupingRule","topmostRule","parentRule","parentStyleSheet","debug","warn","cssText","ruleList","cssRules","idx","Array","from","indexOf","patchContext","context","insertRule","deleteRule","prototype","groupInsertRule","groupDeleteRule","CSSGroupingRule","call","result","observer","attachContextCallback","nodes","attachNodeCallback","node","textContent","trim","length","nodeID","getID","set","rules","i"],"sources":["/Users/paramvirrotwal/Observability/website-admin-react-web-app-project/node_modules/@openreplay/tracker/lib/modules/cssrules.js"],"sourcesContent":["import { AdoptedSSInsertRuleURLBased, // TODO: rename to common StyleSheet names\nAdoptedSSDeleteRule, AdoptedSSAddOwner, TechnicalInfo, } from '../app/messages.gen.js';\nimport { hasTag } from '../app/guards.js';\nimport { nextID, styleSheetIDMap } from './constructedStyleSheets.js';\nexport default function (app) {\n    if (app === null) {\n        return;\n    }\n    if (!window.CSSStyleSheet) {\n        app.send(TechnicalInfo('no_stylesheet_prototype_in_window', ''));\n        return;\n    }\n    const sendInsertDeleteRule = app.safe((sheet, index, rule) => {\n        const sheetID = styleSheetIDMap.get(sheet);\n        if (!sheetID) {\n            // OK-case. Sheet haven't been registered yet. Rules will be sent on registration.\n            return;\n        }\n        if (typeof rule === 'string') {\n            app.send(AdoptedSSInsertRuleURLBased(sheetID, rule, index, app.getBaseHref()));\n        }\n        else {\n            app.send(AdoptedSSDeleteRule(sheetID, index));\n        }\n    });\n    // TODO: proper rule insertion/removal (how?)\n    const sendReplaceGroupingRule = app.safe((rule) => {\n        let topmostRule = rule;\n        while (topmostRule.parentRule) {\n            topmostRule = topmostRule.parentRule;\n        }\n        const sheet = topmostRule.parentStyleSheet;\n        if (!sheet) {\n            app.debug.warn('No parent StyleSheet found for', topmostRule, rule);\n            return;\n        }\n        const sheetID = styleSheetIDMap.get(sheet);\n        if (!sheetID) {\n            app.debug.warn('No sheedID found for', sheet, styleSheetIDMap);\n            return;\n        }\n        const cssText = topmostRule.cssText;\n        const ruleList = sheet.cssRules;\n        const idx = Array.from(ruleList).indexOf(topmostRule);\n        if (idx >= 0) {\n            app.send(AdoptedSSInsertRuleURLBased(sheetID, cssText, idx, app.getBaseHref()));\n            app.send(AdoptedSSDeleteRule(sheetID, idx + 1)); // Remove previous clone\n        }\n        else {\n            app.debug.warn('Rule index not found in', sheet, topmostRule);\n        }\n    });\n    const patchContext = app.safe((context) => {\n        const { insertRule, deleteRule } = context.CSSStyleSheet.prototype;\n        const { insertRule: groupInsertRule, deleteRule: groupDeleteRule } = context.CSSGroupingRule.prototype;\n        context.CSSStyleSheet.prototype.insertRule = function (rule, index = 0) {\n            sendInsertDeleteRule(this, index, rule);\n            return insertRule.call(this, rule, index);\n        };\n        context.CSSStyleSheet.prototype.deleteRule = function (index) {\n            sendInsertDeleteRule(this, index);\n            return deleteRule.call(this, index);\n        };\n        context.CSSGroupingRule.prototype.insertRule = function (rule, index = 0) {\n            const result = groupInsertRule.call(this, rule, index);\n            sendReplaceGroupingRule(this);\n            return result;\n        };\n        context.CSSGroupingRule.prototype.deleteRule = function (index = 0) {\n            const result = groupDeleteRule.call(this, index);\n            sendReplaceGroupingRule(this);\n            return result;\n        };\n    });\n    patchContext(window);\n    app.observer.attachContextCallback(patchContext);\n    app.nodes.attachNodeCallback((node) => {\n        if (!hasTag(node, 'style') || !node.sheet) {\n            return;\n        }\n        if (node.textContent !== null && node.textContent.trim().length > 0) {\n            return; // Non-virtual styles captured by the observer as a text\n        }\n        const nodeID = app.nodes.getID(node);\n        if (!nodeID) {\n            return;\n        }\n        const sheet = node.sheet;\n        const sheetID = nextID();\n        styleSheetIDMap.set(sheet, sheetID);\n        app.send(AdoptedSSAddOwner(sheetID, nodeID));\n        const rules = sheet.cssRules;\n        for (let i = 0; i < rules.length; i++) {\n            sendInsertDeleteRule(sheet, i, rules[i].cssText);\n        }\n    });\n}\n"],"mappings":"AAAA,SAASA,2BAA2B;AAAE;AACtCC,mBAAmB,EAAEC,iBAAiB,EAAEC,aAAa,QAAS,wBAAwB;AACtF,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,MAAM,EAAEC,eAAe,QAAQ,6BAA6B;AACrE,eAAe,UAAUC,GAAG,EAAE;EAC1B,IAAIA,GAAG,KAAK,IAAI,EAAE;IACd;EACJ;EACA,IAAI,CAACC,MAAM,CAACC,aAAa,EAAE;IACvBF,GAAG,CAACG,IAAI,CAACP,aAAa,CAAC,mCAAmC,EAAE,EAAE,CAAC,CAAC;IAChE;EACJ;EACA,MAAMQ,oBAAoB,GAAGJ,GAAG,CAACK,IAAI,CAAC,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,KAAK;IAC1D,MAAMC,OAAO,GAAGV,eAAe,CAACW,GAAG,CAACJ,KAAK,CAAC;IAC1C,IAAI,CAACG,OAAO,EAAE;MACV;MACA;IACJ;IACA,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE;MAC1BR,GAAG,CAACG,IAAI,CAACV,2BAA2B,CAACgB,OAAO,EAAED,IAAI,EAAED,KAAK,EAAEP,GAAG,CAACW,WAAW,CAAC,CAAC,CAAC,CAAC;IAClF,CAAC,MACI;MACDX,GAAG,CAACG,IAAI,CAACT,mBAAmB,CAACe,OAAO,EAAEF,KAAK,CAAC,CAAC;IACjD;EACJ,CAAC,CAAC;EACF;EACA,MAAMK,uBAAuB,GAAGZ,GAAG,CAACK,IAAI,CAAEG,IAAI,IAAK;IAC/C,IAAIK,WAAW,GAAGL,IAAI;IACtB,OAAOK,WAAW,CAACC,UAAU,EAAE;MAC3BD,WAAW,GAAGA,WAAW,CAACC,UAAU;IACxC;IACA,MAAMR,KAAK,GAAGO,WAAW,CAACE,gBAAgB;IAC1C,IAAI,CAACT,KAAK,EAAE;MACRN,GAAG,CAACgB,KAAK,CAACC,IAAI,CAAC,gCAAgC,EAAEJ,WAAW,EAAEL,IAAI,CAAC;MACnE;IACJ;IACA,MAAMC,OAAO,GAAGV,eAAe,CAACW,GAAG,CAACJ,KAAK,CAAC;IAC1C,IAAI,CAACG,OAAO,EAAE;MACVT,GAAG,CAACgB,KAAK,CAACC,IAAI,CAAC,sBAAsB,EAAEX,KAAK,EAAEP,eAAe,CAAC;MAC9D;IACJ;IACA,MAAMmB,OAAO,GAAGL,WAAW,CAACK,OAAO;IACnC,MAAMC,QAAQ,GAAGb,KAAK,CAACc,QAAQ;IAC/B,MAAMC,GAAG,GAAGC,KAAK,CAACC,IAAI,CAACJ,QAAQ,CAAC,CAACK,OAAO,CAACX,WAAW,CAAC;IACrD,IAAIQ,GAAG,IAAI,CAAC,EAAE;MACVrB,GAAG,CAACG,IAAI,CAACV,2BAA2B,CAACgB,OAAO,EAAES,OAAO,EAAEG,GAAG,EAAErB,GAAG,CAACW,WAAW,CAAC,CAAC,CAAC,CAAC;MAC/EX,GAAG,CAACG,IAAI,CAACT,mBAAmB,CAACe,OAAO,EAAEY,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC,MACI;MACDrB,GAAG,CAACgB,KAAK,CAACC,IAAI,CAAC,yBAAyB,EAAEX,KAAK,EAAEO,WAAW,CAAC;IACjE;EACJ,CAAC,CAAC;EACF,MAAMY,YAAY,GAAGzB,GAAG,CAACK,IAAI,CAAEqB,OAAO,IAAK;IACvC,MAAM;MAAEC,UAAU;MAAEC;IAAW,CAAC,GAAGF,OAAO,CAACxB,aAAa,CAAC2B,SAAS;IAClE,MAAM;MAAEF,UAAU,EAAEG,eAAe;MAAEF,UAAU,EAAEG;IAAgB,CAAC,GAAGL,OAAO,CAACM,eAAe,CAACH,SAAS;IACtGH,OAAO,CAACxB,aAAa,CAAC2B,SAAS,CAACF,UAAU,GAAG,UAAUnB,IAAI,EAAED,KAAK,GAAG,CAAC,EAAE;MACpEH,oBAAoB,CAAC,IAAI,EAAEG,KAAK,EAAEC,IAAI,CAAC;MACvC,OAAOmB,UAAU,CAACM,IAAI,CAAC,IAAI,EAAEzB,IAAI,EAAED,KAAK,CAAC;IAC7C,CAAC;IACDmB,OAAO,CAACxB,aAAa,CAAC2B,SAAS,CAACD,UAAU,GAAG,UAAUrB,KAAK,EAAE;MAC1DH,oBAAoB,CAAC,IAAI,EAAEG,KAAK,CAAC;MACjC,OAAOqB,UAAU,CAACK,IAAI,CAAC,IAAI,EAAE1B,KAAK,CAAC;IACvC,CAAC;IACDmB,OAAO,CAACM,eAAe,CAACH,SAAS,CAACF,UAAU,GAAG,UAAUnB,IAAI,EAAED,KAAK,GAAG,CAAC,EAAE;MACtE,MAAM2B,MAAM,GAAGJ,eAAe,CAACG,IAAI,CAAC,IAAI,EAAEzB,IAAI,EAAED,KAAK,CAAC;MACtDK,uBAAuB,CAAC,IAAI,CAAC;MAC7B,OAAOsB,MAAM;IACjB,CAAC;IACDR,OAAO,CAACM,eAAe,CAACH,SAAS,CAACD,UAAU,GAAG,UAAUrB,KAAK,GAAG,CAAC,EAAE;MAChE,MAAM2B,MAAM,GAAGH,eAAe,CAACE,IAAI,CAAC,IAAI,EAAE1B,KAAK,CAAC;MAChDK,uBAAuB,CAAC,IAAI,CAAC;MAC7B,OAAOsB,MAAM;IACjB,CAAC;EACL,CAAC,CAAC;EACFT,YAAY,CAACxB,MAAM,CAAC;EACpBD,GAAG,CAACmC,QAAQ,CAACC,qBAAqB,CAACX,YAAY,CAAC;EAChDzB,GAAG,CAACqC,KAAK,CAACC,kBAAkB,CAAEC,IAAI,IAAK;IACnC,IAAI,CAAC1C,MAAM,CAAC0C,IAAI,EAAE,OAAO,CAAC,IAAI,CAACA,IAAI,CAACjC,KAAK,EAAE;MACvC;IACJ;IACA,IAAIiC,IAAI,CAACC,WAAW,KAAK,IAAI,IAAID,IAAI,CAACC,WAAW,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;MACjE,OAAO,CAAC;IACZ;IACA,MAAMC,MAAM,GAAG3C,GAAG,CAACqC,KAAK,CAACO,KAAK,CAACL,IAAI,CAAC;IACpC,IAAI,CAACI,MAAM,EAAE;MACT;IACJ;IACA,MAAMrC,KAAK,GAAGiC,IAAI,CAACjC,KAAK;IACxB,MAAMG,OAAO,GAAGX,MAAM,CAAC,CAAC;IACxBC,eAAe,CAAC8C,GAAG,CAACvC,KAAK,EAAEG,OAAO,CAAC;IACnCT,GAAG,CAACG,IAAI,CAACR,iBAAiB,CAACc,OAAO,EAAEkC,MAAM,CAAC,CAAC;IAC5C,MAAMG,KAAK,GAAGxC,KAAK,CAACc,QAAQ;IAC5B,KAAK,IAAI2B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACJ,MAAM,EAAEK,CAAC,EAAE,EAAE;MACnC3C,oBAAoB,CAACE,KAAK,EAAEyC,CAAC,EAAED,KAAK,CAACC,CAAC,CAAC,CAAC7B,OAAO,CAAC;IACpD;EACJ,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module"}