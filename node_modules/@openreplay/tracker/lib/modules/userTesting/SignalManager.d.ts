export default class SignalManager {
    private readonly ingestPoint;
    private readonly getTimestamp;
    private readonly token;
    private readonly testId;
    private readonly storageKey;
    private readonly setStorageKey;
    private readonly removeStorageKey;
    private readonly getStorageKey;
    private readonly getSessionId;
    private readonly durations;
    constructor(ingestPoint: string, getTimestamp: () => number, token: string, testId: number, storageKey: string, setStorageKey: (key: string, value: string) => void, removeStorageKey: (key: string) => void, getStorageKey: (key: string) => string | null, getSessionId: () => string | undefined);
    getDurations: () => {
        testStart: number;
        tasks: {
            taskId: number;
            started: number;
        }[];
    };
    setDurations: (durations: {
        testStart: number;
        tasks: {
            taskId: number;
            started: number;
        }[];
    }) => void;
    signalTask: (taskId: number, status: 'begin' | 'done' | 'skipped', taskAnswer?: string) => void | Promise<Response>;
    signalTest: (status: 'begin' | 'done' | 'skipped') => Promise<Response>;
}
